{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan Andre Sanchez H\\\\Downloads\\\\front-challenge\\\\A\\\\retofront\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n    const response = await fetch('https://jsonplaceholder.typicode.com/photos/' + Math.floor(Math.random() * 100) + 1);\n    const data = await response.json();\n    setMoveableComponents([...moveableComponents, {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      backgroundImage: `url(${data.url})`,\n      updateEnd: true\n    }]);\n  };\n  const updateMoveable = function (id, newComponent) {\n    let updateEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return {\n          id,\n          ...newComponent,\n          updateEnd\n        };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", _ref => {\n        let {\n          width\n        } = _ref;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", _ref2 => {\n        let {\n          width\n        } = _ref2;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMoveable,\n      children: \"Add Moveable1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"parent\",\n      style: {\n        position: \"relative\",\n        background: \"black\",\n        height: \"80vh\",\n        width: \"80vw\"\n      },\n      children: moveableComponents.map((item, index) => /*#__PURE__*/_createElement(Component, {\n        ...item,\n        key: index,\n        updateMoveable: updateMoveable,\n        handleResizeStart: handleResizeStart,\n        setSelected: setSelected,\n        isSelected: selected === item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X2hn9kZdJVqaWk4Vc5Jh02ip/FQ=\");\n_c = App;\nexport default App;\nconst Component = _ref3 => {\n  _s2();\n  let {\n    updateMoveable,\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n    setSelected,\n    isSelected = false,\n    updateEnd\n  } = _ref3;\n  const ref = useRef();\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id\n  });\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent === null || parent === void 0 ? void 0 : parent.getBoundingClientRect();\n  const onResize = async e => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n    if (parentBounds !== null && parentBounds !== void 0 && parentBounds.height && positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n    if (parentBounds !== null && parentBounds !== void 0 && parentBounds.width && positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color\n    });\n\n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n    ref.current.style.width = `${newWidth}px`;\n    ref.current.style.height = `${newHeight}px`;\n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n\n    // Verificar si el cuadro está fuera de los límites del div padre\n    const newTop = top + translateY < 0 ? 0 : top + translateY;\n    const newLeft = left + translateX < 0 ? 0 : left + translateX;\n    if (parentBounds && newTop + newHeight > parentBounds.height && parentBounds.height >= newHeight) {\n      translateY = parentBounds.height - top - newHeight;\n    }\n    if (parentBounds && newLeft + newWidth > parentBounds.width && parentBounds.width >= newWidth) {\n      translateX = parentBounds.width - left - newWidth;\n    }\n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: newTop,\n      left: newLeft\n    });\n  };\n  const onDragEnd = async e => {\n    let newTop = top + e.drag.beforeTranslate[1];\n    let newLeft = left + e.drag.beforeTranslate[0];\n\n    // Verificar si el cuadro está fuera de los límites del div padre\n    if (newTop < 0) {\n      newTop = 0;\n    } else if (parentBounds && newTop + height > parentBounds.height && parentBounds.height >= height) {\n      newTop = parentBounds.height - height;\n    }\n    if (newLeft < 0) {\n      newLeft = 0;\n    } else if (parentBounds && newLeft + width > parentBounds.width && parentBounds.width >= width) {\n      newLeft = parentBounds.width - width;\n    }\n    updateMoveable(id, {\n      top: newTop,\n      left: newLeft,\n      width,\n      height,\n      color\n    });\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX: 0,\n      translateY: 0,\n      top: newTop,\n      left: newLeft\n    });\n  };\n  const onResizeEnd = async e => {\n    var _e$lastEvent, _e$lastEvent2;\n    let newWidth = (_e$lastEvent = e.lastEvent) === null || _e$lastEvent === void 0 ? void 0 : _e$lastEvent.width;\n    let newHeight = (_e$lastEvent2 = e.lastEvent) === null || _e$lastEvent2 === void 0 ? void 0 : _e$lastEvent2.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n    if (positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n    if (positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n    const {\n      lastEvent\n    } = e;\n    const {\n      drag\n    } = lastEvent;\n    const {\n      beforeTranslate\n    } = drag;\n    const absoluteTop = top + beforeTranslate[1];\n    const absoluteLeft = left + beforeTranslate[0];\n    updateMoveable(id, {\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: newWidth,\n      height: newHeight,\n      color\n    }, true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"draggable\",\n      id: \"component-\" + id,\n      style: {\n        position: \"absolute\",\n        top: top,\n        left: left,\n        width: width,\n        height: height,\n        background: color\n      },\n      onClick: () => setSelected(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Moveable, {\n      target: isSelected && ref.current,\n      resizable: true,\n      draggable: true,\n      onDrag: e => {\n        updateMoveable(id, {\n          top: e.top,\n          left: e.left,\n          width,\n          height,\n          color\n        });\n      },\n      onResize: onResize,\n      onResizeEnd: onResizeEnd,\n      keepRatio: false,\n      throttleResize: 1,\n      renderDirections: [\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"],\n      edge: false,\n      zoom: 1,\n      origin: false,\n      padding: {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(Component, \"ZOXuN2pBTefCfK2HA5KryBrnvhA=\");\n_c2 = Component;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Moveable","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","App","_s","moveableComponents","setMoveableComponents","selected","setSelected","addMoveable","COLORS","response","fetch","Math","floor","random","data","json","id","Date","now","top","left","width","height","backgroundImage","url","updateEnd","updateMoveable","newComponent","arguments","length","undefined","updatedMoveables","map","moveable","i","handleResizeStart","index","e","console","log","direction","handlePosX","handlePosY","initialLeft","initialWidth","setOrigin","on","_ref","newLeft","target","_ref2","off","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","background","item","Component","key","isSelected","__self","__source","_c","_ref3","_s2","color","ref","nodoReferencia","setNodoReferencia","parent","document","getElementById","parentBounds","getBoundingClientRect","onResize","newWidth","newHeight","positionMaxTop","positionMaxLeft","beforeTranslate","drag","current","translateX","translateY","newTop","transform","onDragEnd","onResizeEnd","_e$lastEvent","_e$lastEvent2","lastEvent","absoluteTop","absoluteLeft","className","resizable","draggable","onDrag","keepRatio","throttleResize","renderDirections","edge","zoom","origin","padding","right","bottom","_c2","$RefreshReg$"],"sources":["C:/Users/Alan Andre Sanchez H/Downloads/front-challenge/A/retofront/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\n\nconst App = () => {\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n  \n    const response = await fetch('https://jsonplaceholder.typicode.com/photos/' + Math.floor(Math.random() * 100) + 1);\n    const data = await response.json();\n    \n    setMoveableComponents([\n    ...moveableComponents,\n    {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      backgroundImage: `url(${data.url})`,\n      updateEnd: true\n    }\n    ]);\n  };\n  \n  \n\n  const updateMoveable = (id, newComponent, updateEnd = false) => {\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return { id, ...newComponent, updateEnd };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n\n  return (\n    <main style={{ height : \"100vh\", width: \"100vw\" }}>\n      <button onClick={addMoveable}>Add Moveable1</button>\n      <div\n        id=\"parent\"\n        style={{\n          position: \"relative\",\n          background: \"black\",\n          height: \"80vh\",\n          width: \"80vw\",\n        }}\n      >\n        {moveableComponents.map((item, index) => (\n          <Component\n            {...item}\n            key={index}\n            updateMoveable={updateMoveable}\n            handleResizeStart={handleResizeStart}\n            setSelected={setSelected}\n            isSelected={selected === item.id}\n          />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n\nconst Component = ({\n  updateMoveable,\n  top,\n  left,\n  width,\n  height,\n  index,\n  color,\n  id,\n  setSelected,\n  isSelected = false,\n  updateEnd,\n}) => {\n  const ref = useRef();\n\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n  });\n\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent?.getBoundingClientRect();\n  \n  const onResize = async (e) => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n  \n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n  \n    if (parentBounds?.height && positionMaxTop > parentBounds?.height)\n      newHeight = parentBounds?.height - top;\n    if (parentBounds?.width && positionMaxLeft > parentBounds?.width)\n      newWidth = parentBounds?.width - left;\n  \n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color,\n    });\n  \n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n  \n    ref.current.style.width = `${newWidth}px`;\n    ref.current.style.height = `${newHeight}px`;\n  \n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n  \n    // Verificar si el cuadro está fuera de los límites del div padre\n    const newTop = top + translateY < 0 ? 0 : top + translateY;\n    const newLeft = left + translateX < 0 ? 0 : left + translateX;\n    if (\n      parentBounds &&\n      newTop + newHeight > parentBounds.height &&\n      parentBounds.height >= newHeight\n    ) {\n      translateY = parentBounds.height - top - newHeight;\n    }\n    if (\n      parentBounds &&\n      newLeft + newWidth > parentBounds.width &&\n      parentBounds.width >= newWidth\n    ) {\n      translateX = parentBounds.width - left - newWidth;\n    }\n  \n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n  \n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: newTop,\n      left: newLeft,\n    });\n  };\n  \n  const onDragEnd = async (e) => {\n    let newTop = top + e.drag.beforeTranslate[1];\n    let newLeft = left + e.drag.beforeTranslate[0];\n  \n    // Verificar si el cuadro está fuera de los límites del div padre\n    if (newTop < 0) {\n      newTop = 0;\n    } else if (\n      parentBounds &&\n      newTop + height > parentBounds.height &&\n      parentBounds.height >= height\n    ) {\n      newTop = parentBounds.height - height;\n    }\n  \n    if (newLeft < 0) {\n      newLeft = 0;\n    } else if (\n      parentBounds &&\n      newLeft + width >parentBounds.width &&\n      parentBounds.width >= width\n      ) {\n      newLeft = parentBounds.width - width;\n      }\n      \n      updateMoveable(id, {\n      top: newTop,\n      left: newLeft,\n      width,\n      height,\n      color,\n      });\n      \n      setNodoReferencia({\n      ...nodoReferencia,\n      translateX: 0,\n      translateY: 0,\n      top: newTop,\n      left: newLeft,\n      });\n      };\n\n  const onResizeEnd = async (e) => {\n    let newWidth = e.lastEvent?.width;\n    let newHeight = e.lastEvent?.height;\n\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n\n    if (positionMaxTop > parentBounds?.height)\n      newHeight = parentBounds?.height - top;\n    if (positionMaxLeft > parentBounds?.width)\n      newWidth = parentBounds?.width - left;\n\n    const { lastEvent } = e;\n    const { drag } = lastEvent;\n    const { beforeTranslate } = drag;\n\n    const absoluteTop = top + beforeTranslate[1];\n    const absoluteLeft = left + beforeTranslate[0];\n\n    updateMoveable(\n      id,\n      {\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: newWidth,\n        height: newHeight,\n        color,\n      },\n      true\n    );\n  };\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className=\"draggable\"\n        id={\"component-\" + id}\n        style={{\n          position: \"absolute\",\n          top: top,\n          left: left,\n          width: width,\n          height: height,\n          background: color,\n        }}\n        onClick={() => setSelected(id)}\n      />\n\n      <Moveable\n        target={isSelected && ref.current}\n        resizable\n        draggable\n        onDrag={(e) => {\n          updateMoveable(id, {\n            top: e.top,\n            left: e.left,\n            width,\n            height,\n            color,\n          });\n        }}\n        onResize={onResize}\n        onResizeEnd={onResizeEnd}\n        keepRatio={false}\n        throttleResize={1}\n        renderDirections={[\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"]}\n        edge={false}\n        zoom={1}\n        origin={false}\n        padding={{ left: 0, top: 0, right: 0, bottom: 0 }}\n      />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}