{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan Andre Sanchez H\\\\Downloads\\\\front-challenge\\\\A\\\\retofront\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n    const response = await fetch('https://jsonplaceholder.typicode.com/photos/' + Math.floor(Math.random() * 100) + 1);\n    const data = await response.json();\n    setMoveableComponents([...moveableComponents, {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      backgroundImage: `url(${data.url})`,\n      updateEnd: true\n    }]);\n  };\n  const removeMoveable = id => {\n    const filteredMoveables = moveableComponents.filter(moveable => moveable.id !== id);\n    setMoveableComponents(filteredMoveables);\n    if (selected === id) {\n      setSelected(null);\n    }\n  };\n  const updateMoveable = function (id, newComponent) {\n    let updateEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return {\n          id,\n          ...newComponent,\n          updateEnd\n        };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", _ref => {\n        let {\n          width\n        } = _ref;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", _ref2 => {\n        let {\n          width\n        } = _ref2;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMoveable,\n      children: \"Add Moveable1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        zIndex: 1\n      },\n      onClick: () => removeMoveable(component.id),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"parent\",\n      style: {\n        position: \"relative\",\n        background: \"black\",\n        height: \"80vh\",\n        width: \"80vw\"\n      },\n      children: moveableComponents.map((item, index) => /*#__PURE__*/_createElement(Component, {\n        ...item,\n        key: index,\n        updateMoveable: updateMoveable,\n        handleResizeStart: handleResizeStart,\n        setSelected: setSelected,\n        isSelected: selected === item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X2hn9kZdJVqaWk4Vc5Jh02ip/FQ=\");\n_c = App;\nexport default App;\nconst Component = _ref3 => {\n  _s2();\n  let {\n    updateMoveable,\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n    setSelected,\n    isSelected = false,\n    updateEnd\n  } = _ref3;\n  const ref = useRef();\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id\n  });\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent === null || parent === void 0 ? void 0 : parent.getBoundingClientRect();\n  const onResize = async e => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n    if (parentBounds !== null && parentBounds !== void 0 && parentBounds.height && positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n    if (parentBounds !== null && parentBounds !== void 0 && parentBounds.width && positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color\n    });\n\n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n    ref.current.style.width = `${newWidth}px`;\n    ref.current.style.height = `${newHeight}px`;\n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n\n    // Verificar si el cuadro está fuera de los límites del div padre\n    const newTop = top + translateY < 0 ? 0 : top + translateY;\n    const newLeft = left + translateX < 0 ? 0 : left + translateX;\n    if (parentBounds && newTop + newHeight > parentBounds.height && parentBounds.height >= newHeight) {\n      translateY = parentBounds.height - top - newHeight;\n    }\n    if (parentBounds && newLeft + newWidth > parentBounds.width && parentBounds.width >= newWidth) {\n      translateX = parentBounds.width - left - newWidth;\n    }\n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: newTop,\n      left: newLeft\n    });\n  };\n  const onDrag = e => {\n    // ACTUALIZAR POSICIÓN\n    let newTop = top + e.drag.beforeTranslate[1];\n    let newLeft = left + e.drag.beforeTranslate[0];\n\n    // VERIFICAR LÍMITES DEL DIV PADRE\n    const parentBounds = parent === null || parent === void 0 ? void 0 : parent.getBoundingClientRect();\n    if (parentBounds) {\n      const maxTop = parentBounds.height - height;\n      const maxLeft = parentBounds.width - width;\n      if (newTop < 0) {\n        newTop = 0;\n      } else if (newTop > maxTop) {\n        newTop = maxTop;\n      }\n      if (newLeft < 0) {\n        newLeft = 0;\n      } else if (newLeft > maxLeft) {\n        newLeft = maxLeft;\n      }\n    }\n    updateMoveable(id, {\n      top: newTop,\n      left: newLeft,\n      width,\n      height,\n      color\n    });\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX: 0,\n      translateY: 0,\n      top: newTop,\n      left: newLeft\n    });\n  };\n  const onResizeEnd = async e => {\n    var _e$lastEvent, _e$lastEvent2;\n    let newWidth = (_e$lastEvent = e.lastEvent) === null || _e$lastEvent === void 0 ? void 0 : _e$lastEvent.width;\n    let newHeight = (_e$lastEvent2 = e.lastEvent) === null || _e$lastEvent2 === void 0 ? void 0 : _e$lastEvent2.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n\n    // Validar que el componente no se salga del contenedor\n    if (parentBounds) {\n      if (positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) {\n        newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n      }\n      if (positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) {\n        newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n      }\n    }\n    const {\n      lastEvent\n    } = e;\n    const {\n      drag\n    } = lastEvent;\n    const {\n      beforeTranslate\n    } = drag;\n    let absoluteTop = top + beforeTranslate[1];\n    let absoluteLeft = left + beforeTranslate[0];\n\n    // Validar que el componente no se salga del contenedor\n    if (parentBounds) {\n      if (absoluteTop < 0) {\n        absoluteTop = 0;\n      } else if (absoluteTop + newHeight > parentBounds.height && parentBounds.height >= newHeight) {\n        absoluteTop = parentBounds.height - newHeight;\n      }\n      if (absoluteLeft < 0) {\n        absoluteLeft = 0;\n      } else if (absoluteLeft + newWidth > parentBounds.width && parentBounds.width >= newWidth) {\n        absoluteLeft = parentBounds.width - newWidth;\n      }\n    }\n    updateMoveable(id, {\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: newWidth,\n      height: newHeight,\n      color\n    }, true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"draggable\",\n      id: \"component-\" + id,\n      style: {\n        position: \"absolute\",\n        top: top,\n        left: left,\n        width: width,\n        height: height,\n        background: color\n      },\n      onClick: () => setSelected(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Moveable, {\n      target: isSelected && ref.current,\n      resizable: true,\n      draggable: true,\n      onDrag: onDrag,\n      onResize: onResize,\n      onResizeEnd: onResizeEnd,\n      keepRatio: false,\n      throttleResize: 1,\n      renderDirections: [\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"],\n      edge: false,\n      zoom: 1,\n      origin: false,\n      padding: {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(Component, \"ZOXuN2pBTefCfK2HA5KryBrnvhA=\");\n_c2 = Component;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Moveable","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","App","_s","moveableComponents","setMoveableComponents","selected","setSelected","addMoveable","COLORS","response","fetch","Math","floor","random","data","json","id","Date","now","top","left","width","height","backgroundImage","url","updateEnd","removeMoveable","filteredMoveables","filter","moveable","updateMoveable","newComponent","arguments","length","undefined","updatedMoveables","map","i","handleResizeStart","index","e","console","log","direction","handlePosX","handlePosY","initialLeft","initialWidth","setOrigin","on","_ref","newLeft","target","_ref2","off","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","right","zIndex","component","background","item","Component","key","isSelected","__self","__source","_c","_ref3","_s2","color","ref","nodoReferencia","setNodoReferencia","parent","document","getElementById","parentBounds","getBoundingClientRect","onResize","newWidth","newHeight","positionMaxTop","positionMaxLeft","beforeTranslate","drag","current","translateX","translateY","newTop","transform","onDrag","maxTop","maxLeft","onResizeEnd","_e$lastEvent","_e$lastEvent2","lastEvent","absoluteTop","absoluteLeft","className","resizable","draggable","keepRatio","throttleResize","renderDirections","edge","zoom","origin","padding","bottom","_c2","$RefreshReg$"],"sources":["C:/Users/Alan Andre Sanchez H/Downloads/front-challenge/A/retofront/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\n\nconst App = () => {\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n  \n    const response = await fetch('https://jsonplaceholder.typicode.com/photos/' + Math.floor(Math.random() * 100) + 1);\n    const data = await response.json();\n    \n    setMoveableComponents([\n    ...moveableComponents,\n    {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      backgroundImage: `url(${data.url})`,\n      updateEnd: true\n    }\n    ]);\n  };\n  const removeMoveable = (id) => {\n    const filteredMoveables = moveableComponents.filter(\n      (moveable) => moveable.id !== id\n    );\n    setMoveableComponents(filteredMoveables);\n    if (selected === id) {\n      setSelected(null);\n    }\n  };\n  \n  \n\n  const updateMoveable = (id, newComponent, updateEnd = false) => {\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return { id, ...newComponent, updateEnd };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n\n  return (\n    <main style={{ height : \"100vh\", width: \"100vw\" }}>\n      <button onClick={addMoveable}>Add Moveable1</button>\n      <button\n          style={{\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"5px\",\n          zIndex: 1\n          }}\n          onClick={() => removeMoveable(component.id)}\n          >x</button>\n      <div\n        id=\"parent\"\n        style={{\n          position: \"relative\",\n          background: \"black\",\n          height: \"80vh\",\n          width: \"80vw\",\n        }}\n      >\n        {moveableComponents.map((item, index) => (\n          <Component\n            {...item}\n            key={index}\n            updateMoveable={updateMoveable}\n            handleResizeStart={handleResizeStart}\n            setSelected={setSelected}\n            isSelected={selected === item.id}\n          />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n\nconst Component = ({\n  updateMoveable,\n  top,\n  left,\n  width,\n  height,\n  index,\n  color,\n  id,\n  setSelected,\n  isSelected = false,\n  updateEnd,\n}) => {\n  const ref = useRef();\n\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n  });\n\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent?.getBoundingClientRect();\n  \n  const onResize = async (e) => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n  \n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n  \n    if (parentBounds?.height && positionMaxTop > parentBounds?.height)\n      newHeight = parentBounds?.height - top;\n    if (parentBounds?.width && positionMaxLeft > parentBounds?.width)\n      newWidth = parentBounds?.width - left;\n  \n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color,\n    });\n  \n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n  \n    ref.current.style.width = `${newWidth}px`;\n    ref.current.style.height = `${newHeight}px`;\n  \n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n  \n    // Verificar si el cuadro está fuera de los límites del div padre\n    const newTop = top + translateY < 0 ? 0 : top + translateY;\n    const newLeft = left + translateX < 0 ? 0 : left + translateX;\n    if (\n      parentBounds &&\n      newTop + newHeight > parentBounds.height &&\n      parentBounds.height >= newHeight\n    ) {\n      translateY = parentBounds.height - top - newHeight;\n    }\n    if (\n      parentBounds &&\n      newLeft + newWidth > parentBounds.width &&\n      parentBounds.width >= newWidth\n    ) {\n      translateX = parentBounds.width - left - newWidth;\n    }\n  \n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n  \n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: newTop,\n      left: newLeft,\n    });\n  };\n  \n  const onDrag = (e) => {\n    // ACTUALIZAR POSICIÓN\n    let newTop = top + e.drag.beforeTranslate[1];\n    let newLeft = left + e.drag.beforeTranslate[0];\n  \n    // VERIFICAR LÍMITES DEL DIV PADRE\n    const parentBounds = parent?.getBoundingClientRect();\n    if (parentBounds) {\n      const maxTop = parentBounds.height - height;\n      const maxLeft = parentBounds.width - width;\n      if (newTop < 0) {\n        newTop = 0;\n      } else if (newTop > maxTop) {\n        newTop = maxTop;\n      }\n      if (newLeft < 0) {\n        newLeft = 0;\n      } else if (newLeft > maxLeft) {\n        newLeft = maxLeft;\n      }\n    }\n  \n    updateMoveable(id, {\n      top: newTop,\n      left: newLeft,\n      width,\n      height,\n      color,\n    });\n  \n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX: 0,\n      translateY: 0,\n      top: newTop,\n      left: newLeft,\n    });\n  };\n  \nconst onResizeEnd = async (e) => {\n  let newWidth = e.lastEvent?.width;\n  let newHeight = e.lastEvent?.height;\n\n  const positionMaxTop = top + newHeight;\n  const positionMaxLeft = left + newWidth;\n\n  // Validar que el componente no se salga del contenedor\n  if (parentBounds) {\n    if (positionMaxTop > parentBounds?.height) {\n      newHeight = parentBounds?.height - top;\n    }\n    if (positionMaxLeft > parentBounds?.width) {\n      newWidth = parentBounds?.width - left;\n    }\n  }\n\n  const { lastEvent } = e;\n  const { drag } = lastEvent;\n  const { beforeTranslate } = drag;\n\n  let absoluteTop = top + beforeTranslate[1];\n  let absoluteLeft = left + beforeTranslate[0];\n\n  // Validar que el componente no se salga del contenedor\n  if (parentBounds) {\n    if (absoluteTop < 0) {\n      absoluteTop = 0;\n    } else if (absoluteTop + newHeight > parentBounds.height && parentBounds.height >= newHeight) {\n      absoluteTop = parentBounds.height - newHeight;\n    }\n\n    if (absoluteLeft < 0) {\n      absoluteLeft = 0;\n    } else if (absoluteLeft + newWidth > parentBounds.width && parentBounds.width >= newWidth) {\n      absoluteLeft = parentBounds.width - newWidth;\n    }\n  }\n\n  updateMoveable(\n    id,\n    {\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: newWidth,\n      height: newHeight,\n      color,\n    },\n    true\n  );\n};\n\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className=\"draggable\"\n        id={\"component-\" + id}\n        style={{\n          position: \"absolute\",\n          top: top,\n          left: left,\n          width: width,\n          height: height,\n          background: color,\n        }}\n        onClick={() => setSelected(id)}\n      />\n\n      <Moveable\n  target={isSelected && ref.current}\n  resizable\n  draggable\n  onDrag={onDrag}\n  onResize={onResize}\n  onResizeEnd={onResizeEnd}\n  keepRatio={false}\n  throttleResize={1}\n  renderDirections={[\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"]}\n  edge={false}\n  zoom={1}\n  origin={false}\n  padding={{ left: 0, top: 0, right: 0, bottom: 0 }}\n/>\n\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}