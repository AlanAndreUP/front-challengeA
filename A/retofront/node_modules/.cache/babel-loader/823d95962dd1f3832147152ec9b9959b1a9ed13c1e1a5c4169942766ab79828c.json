{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: react-moveable\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/moveable/blob/master/packages/react-moveable\nversion: 0.46.1\n*/\nimport getAgent from '@egjs/agent';\nimport { prefixNames, ref, refs, prefixCSS, withMethods } from 'framework-utils';\nimport { isArray, splitSpace, dot, findIndex, find, splitUnit, getKeys, decamelize, getShapeDirection, getRad, isObject, hasClass, isUndefined, isString, isFunction, convertUnitSize, between, throttle, TINY_NUM as TINY_NUM$1, average, getDist as getDist$1, throttleArray, calculateBoundSize, isNumber, addClass, requestAnimationFrame, removeClass, splitBracket, splitComma, cancelAnimationFrame } from '@daybrush/utils';\nimport { minus, calculate, plus, convertPositionMatrix, multiply, invert, fromTranslation, convertDimension, createScaleMatrix, multiplies, createOriginMatrix, convertMatrixtoCSS, rotate, createRotateMatrix, getOrigin, ignoreDimension, createIdentityMatrix, createWarpMatrix, convertCSStoMatrix } from '@scena/matrix';\nimport { parse, parseMat, toMat, calculateMatrixDist } from 'css-to-mat';\nimport ChildrenDiffer, { diff } from '@egjs/children-differ';\nimport { getMinMaxs, fitPoints, getOverlapSize, getAreaSize, isInside, getIntersectionPointsByConstants } from 'overlap-area';\nimport DragScroll from '@scena/dragscroll';\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport Gesto from 'gesto';\nimport styled from 'react-css-styled';\nimport EventEmitter from '@scena/event-emitter';\nimport { diff as diff$1 } from '@egjs/list-differ';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction makeAble(name, able) {\n  var _a;\n  return __assign({\n    events: {},\n    props: (_a = {}, _a[name] = Boolean, _a),\n    name: name\n  }, able);\n}\nfunction getSVGCursor(scale, degree) {\n  return \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(32 * scale, \"px\\\" height=\\\"\").concat(32 * scale, \"px\\\" viewBox=\\\"0 0 32 32\\\" ><path d=\\\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"1.2\\\" fill=\\\"black\\\" stroke=\\\"white\\\" style=\\\"transform:rotate(\").concat(degree, \"deg);transform-origin: 16px 16px\\\"></path></svg>\");\n}\nfunction getCursorCSS(degree) {\n  var x1 = getSVGCursor(1, degree); // const x2 = getSVGCursor(2, degree);\n\n  var degree45 = Math.round(degree / 45) * 45 % 180;\n  var defaultCursor = \"ns-resize\";\n  if (degree45 === 135) {\n    defaultCursor = \"nwse-resize\";\n  } else if (degree45 === 45) {\n    defaultCursor = \"nesw-resize\";\n  } else if (degree45 === 90) {\n    defaultCursor = \"ew-resize\";\n  } // tslint:disable-next-line: max-line-length\n\n  return \"cursor:\".concat(defaultCursor, \";cursor: url('\").concat(x1, \"') 16 16, \").concat(defaultCursor, \";\");\n}\nvar agent = getAgent();\nvar IS_WEBKIT = agent.browser.webkit;\nvar IS_WEBKIT605 = IS_WEBKIT && function () {\n  var navi = typeof window === \"undefined\" ? {\n    userAgent: \"\"\n  } : window.navigator;\n  var res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n  return res ? parseFloat(res[1]) < 605 : false;\n}();\nvar IS_FIREFOX = agent.browser.name === \"firefox\";\nvar IS_SAFARI_ABOVE15 = parseInt(agent.browser.webkitVersion, 10) >= 612 || parseInt(agent.browser.version, 10) >= 15;\nvar PREFIX = \"moveable-\";\nvar MOVEABLE_CSS = \"\\n{\\n\\tposition: absolute;\\n\\twidth: 1px;\\n\\theight: 1px;\\n\\tleft: 0;\\n\\ttop: 0;\\n    z-index: 3000;\\n    --moveable-color: #4af;\\n    --zoom: 1;\\n    --zoompx: 1px;\\n    will-change: transform;\\n    outline: 1px solid transparent;\\n}\\n.control-box {\\n    z-index: 0;\\n}\\n.line, .control {\\n    position: absolute;\\n\\tleft: 0;\\n    top: 0;\\n    will-change: transform;\\n}\\n.control {\\n\\twidth: 14px;\\n\\theight: 14px;\\n\\tborder-radius: 50%;\\n\\tborder: 2px solid #fff;\\n\\tbox-sizing: border-box;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\tmargin-top: -7px;\\n    margin-left: -7px;\\n    border: 2px solid #fff;\\n    z-index: 10;\\n}\\n.padding {\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    width: 100px;\\n    height: 100px;\\n    transform-origin: 0 0;\\n}\\n.line {\\n\\twidth: 1px;\\n    height: 1px;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\ttransform-origin: 0px 50%;\\n}\\n.line.edge {\\n    z-index: 1;\\n    background: transparent;\\n}\\n.line.dashed {\\n    box-sizing: border-box;\\n    background: transparent;\\n}\\n.line.dashed.horizontal {\\n    border-top: 1px dashed #4af;\\n    border-top-color: #4af;\\n    border-top-color: var(--moveable-color);\\n}\\n.line.dashed.vertical {\\n    border-left: 1px dashed #4af;\\n    border-left-color: #4af;\\n    border-left-color: var(--moveable-color);\\n}\\n.line.vertical {\\n    transform: translateX(-50%);\\n}\\n.line.horizontal {\\n    transform: translateY(-50%);\\n}\\n.line.vertical.bold {\\n    width: 2px;\\n}\\n.line.horizontal.bold {\\n    height: 2px;\\n}\\n\\n.control.origin {\\n\\tborder-color: #f55;\\n\\tbackground: #fff;\\n\\twidth: 12px;\\n\\theight: 12px;\\n\\tmargin-top: -6px;\\n    margin-left: -6px;\\n\\tpointer-events: none;\\n}\\n\".concat([0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(function (degree) {\n  return \"\\n.direction[data-rotation=\\\"\".concat(degree, \"\\\"], :global .view-control-rotation\").concat(degree, \" {\\n\\t\").concat(getCursorCSS(degree), \"\\n}\\n\");\n}).join(\"\\n\"), \"\\n\\n.line.direction:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 100%;\\n    height: calc(var(--moveable-line-padding, 0) * 1px);\\n    bottom: 0;\\n    left: 0;\\n}\\n.group {\\n    z-index: -1;\\n}\\n.area {\\n    position: absolute;\\n}\\n.area-pieces {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    display: none;\\n}\\n.area.avoid, .area.pass {\\n    pointer-events: none;\\n}\\n.area.avoid+.area-pieces {\\n    display: block;\\n}\\n.area-piece {\\n    position: absolute;\\n}\\n\\n\").concat(IS_WEBKIT605 ? \":global svg *:before {\\n\\tcontent:\\\"\\\";\\n\\ttransform-origin: inherit;\\n}\" : \"\", \"\\n\");\nvar NEARBY_POS = [[0, 1, 2], [1, 0, 3], [2, 0, 3], [3, 1, 2]];\nvar FLOAT_POINT_NUM = 0.0001;\nvar TINY_NUM = 0.0000001;\nvar MIN_SCALE = 0.000000001;\nvar MAX_NUM = Math.pow(10, 10);\nvar MIN_NUM = -MAX_NUM;\nvar DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nvar DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\nvar DIRECTION_REGION_TO_DIRECTION = {\n  n: [0, -1],\n  e: [1, 0],\n  s: [0, 1],\n  w: [-1, 0],\n  nw: [-1, -1],\n  ne: [1, -1],\n  sw: [-1, 1],\n  se: [1, 1]\n};\nvar DIRECTION_INDEXES = {\n  n: [0, 1],\n  e: [1, 3],\n  s: [3, 2],\n  w: [2, 0],\n  nw: [0],\n  ne: [1],\n  sw: [2],\n  se: [3]\n};\nvar DIRECTION_ROTATIONS = {\n  n: 0,\n  s: 180,\n  w: 270,\n  e: 90,\n  nw: 315,\n  ne: 45,\n  sw: 225,\n  se: 135\n};\nvar MOVEABLE_METHODS = [\"isMoveableElement\", \"updateRect\", \"updateTarget\", \"destroy\", \"dragStart\", \"isInside\", \"hitTest\", \"setState\", \"getRect\", \"request\", \"isDragging\", \"getManager\", \"forceUpdate\", \"waitToChangeTarget\", \"updateSelectors\", \"getTargets\", \"stopDrag\"];\nfunction setCustomDrag(e, state, delta, isPinch, isConvert, ableName) {\n  var _a, _b;\n  if (ableName === void 0) {\n    ableName = \"draggable\";\n  }\n  var result = (_b = (_a = state.gestos[ableName]) === null || _a === void 0 ? void 0 : _a.move(delta, e.inputEvent)) !== null && _b !== void 0 ? _b : {};\n  var datas = result.originalDatas || result.datas;\n  var ableDatas = datas[ableName] || (datas[ableName] = {});\n  return __assign(__assign({}, isConvert ? convertDragDist(state, result) : result), {\n    isPinch: !!isPinch,\n    parentEvent: true,\n    datas: ableDatas,\n    originalDatas: e.originalDatas\n  });\n}\nvar CustomGesto = /*#__PURE__*/\nfunction () {\n  function CustomGesto(ableName) {\n    var _a;\n    if (ableName === void 0) {\n      ableName = \"draggable\";\n    }\n    this.ableName = ableName;\n    this.prevX = 0;\n    this.prevY = 0;\n    this.startX = 0;\n    this.startY = 0;\n    this.isDrag = false;\n    this.isFlag = false;\n    this.datas = {\n      draggable: {}\n    };\n    this.datas = (_a = {}, _a[ableName] = {}, _a);\n  }\n  var __proto = CustomGesto.prototype;\n  __proto.dragStart = function (client, e) {\n    this.isDrag = false;\n    this.isFlag = false;\n    var originalDatas = e.originalDatas;\n    this.datas = originalDatas;\n    if (!originalDatas[this.ableName]) {\n      originalDatas[this.ableName] = {};\n    }\n    return __assign(__assign({}, this.move(client, e.inputEvent)), {\n      type: \"dragstart\"\n    });\n  };\n  __proto.drag = function (client, inputEvent) {\n    return this.move([client[0] - this.prevX, client[1] - this.prevY], inputEvent);\n  };\n  __proto.move = function (delta, inputEvent) {\n    var clientX;\n    var clientY;\n    var isFirstDrag = false;\n    if (!this.isFlag) {\n      this.prevX = delta[0];\n      this.prevY = delta[1];\n      this.startX = delta[0];\n      this.startY = delta[1];\n      clientX = delta[0];\n      clientY = delta[1];\n      this.isFlag = true;\n    } else {\n      var isPrevDrag = this.isDrag;\n      clientX = this.prevX + delta[0];\n      clientY = this.prevY + delta[1];\n      if (delta[0] || delta[1]) {\n        this.isDrag = true;\n      }\n      if (!isPrevDrag && this.isDrag) {\n        isFirstDrag = true;\n      }\n    }\n    this.prevX = clientX;\n    this.prevY = clientY;\n    return {\n      type: \"drag\",\n      clientX: clientX,\n      clientY: clientY,\n      inputEvent: inputEvent,\n      isFirstDrag: isFirstDrag,\n      isDrag: this.isDrag,\n      distX: clientX - this.startX,\n      distY: clientY - this.startY,\n      deltaX: delta[0],\n      deltaY: delta[1],\n      datas: this.datas[this.ableName],\n      originalDatas: this.datas,\n      parentEvent: true,\n      parentGesto: this\n    };\n  };\n  return CustomGesto;\n}();\nfunction calculatePointerDist(moveable, e) {\n  var clientX = e.clientX,\n    clientY = e.clientY,\n    datas = e.datas;\n  var _a = moveable.state,\n    moveableClientRect = _a.moveableClientRect,\n    rootMatrix = _a.rootMatrix,\n    is3d = _a.is3d,\n    pos1 = _a.pos1;\n  var left = moveableClientRect.left,\n    top = moveableClientRect.top;\n  var n = is3d ? 4 : 3;\n  var _b = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1),\n    posX = _b[0],\n    posY = _b[1];\n  var _c = getDragDist({\n      datas: datas,\n      distX: posX,\n      distY: posY\n    }),\n    distX = _c[0],\n    distY = _c[1];\n  return [distX, distY];\n}\nfunction setDragStart(moveable, _a) {\n  var datas = _a.datas;\n  var _b = moveable.state,\n    allMatrix = _b.allMatrix,\n    beforeMatrix = _b.beforeMatrix,\n    is3d = _b.is3d,\n    left = _b.left,\n    top = _b.top,\n    origin = _b.origin,\n    offsetMatrix = _b.offsetMatrix,\n    targetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin;\n  var n = is3d ? 4 : 3;\n  datas.is3d = is3d;\n  datas.matrix = allMatrix;\n  datas.targetMatrix = targetMatrix;\n  datas.beforeMatrix = beforeMatrix;\n  datas.offsetMatrix = offsetMatrix;\n  datas.transformOrigin = transformOrigin;\n  datas.inverseMatrix = invert(allMatrix, n);\n  datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n  datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n  datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n  datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nfunction getTransformDirection(e) {\n  return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nfunction resolveTransformEvent(event, functionName) {\n  var datas = event.datas,\n    originalDatas = event.originalDatas.beforeRenderable;\n  var index = datas.transformIndex;\n  var nextTransforms = originalDatas.nextTransforms;\n  var length = nextTransforms.length;\n  var nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n  var nextIndex = 0;\n  if (index === -1) {\n    // translate => rotate => scale\n    if (functionName === \"translate\") {\n      nextIndex = 0;\n    } else if (functionName === \"rotate\") {\n      nextIndex = findIndex(nextTransforms, function (text) {\n        return text.match(/scale\\(/g);\n      });\n    }\n    if (nextIndex === -1) {\n      nextIndex = nextTransforms.length;\n    }\n    datas.transformIndex = nextIndex;\n  } else if (find(nextTransformAppendedIndexes, function (info) {\n    return info.index === index && info.functionName === functionName;\n  })) {\n    nextIndex = index;\n  } else {\n    nextIndex = index + nextTransformAppendedIndexes.filter(function (info) {\n      return info.index < index;\n    }).length;\n  }\n  var result = convertTransformInfo(nextTransforms, nextIndex);\n  var targetFunction = result.targetFunction;\n  var matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n  datas.beforeFunctionTexts = result.beforeFunctionTexts;\n  datas.afterFunctionTexts = result.afterFunctionTexts;\n  datas.beforeTransform = result.beforeFunctionMatrix;\n  datas.beforeTransform2 = result.beforeFunctionMatrix2;\n  datas.targetTansform = result.targetFunctionMatrix;\n  datas.afterTransform = result.afterFunctionMatrix;\n  datas.afterTransform2 = result.afterFunctionMatrix2;\n  datas.targetAllTransform = result.allFunctionMatrix;\n  if (targetFunction.functionName === matFunctionName) {\n    datas.afterFunctionTexts.splice(0, 1);\n    datas.isAppendTransform = false;\n  } else if (length > nextIndex) {\n    datas.isAppendTransform = true;\n    originalDatas.nextTransformAppendedIndexes = __spreadArray(__spreadArray([], nextTransformAppendedIndexes, true), [{\n      functionName: functionName,\n      index: nextIndex,\n      isAppend: true\n    }], false);\n  }\n}\nfunction convertTransformFormat(datas, value, dist) {\n  return \"\".concat(datas.beforeFunctionTexts.join(\" \"), \" \").concat(datas.isAppendTransform ? dist : value, \" \").concat(datas.afterFunctionTexts.join(\" \"));\n}\nfunction getTransformDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var _b = getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }),\n    bx = _b[0],\n    by = _b[1]; // B * [tx, ty] * A = [bx, by] * targetMatrix;\n  // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n  var res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n  return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nfunction getTransfromMatrix(datas, targetMatrix, isAfter) {\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform,\n    beforeTransform2 = datas.beforeTransform2,\n    afterTransform2 = datas.afterTransform2,\n    targetAllTransform = datas.targetAllTransform; // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n  // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n  // nextTargetMatrix = (targetMatrix * targetAllTransform)\n\n  var nextTargetMatrix = isAfter ? multiply(targetAllTransform, targetMatrix, 4) : multiply(targetMatrix, targetAllTransform, 4); // res1 = B-1 * nextTargetMatrix\n\n  var res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4); // res3 = res2 * A-1\n\n  var afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n  return afterTargetMatrix;\n}\nfunction getBeforeDragDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY; // TT = BT\n\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3; // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n  // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n\n  return minus(calculate(inverseBeforeMatrix, plus(absoluteOrigin, [distX, distY]), n), startDragBeforeDist);\n}\nfunction getDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    inverseMatrix = datas.inverseMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? inverseBeforeMatrix : inverseMatrix, plus(absoluteOrigin, [distX, distY]), n), isBefore ? startDragBeforeDist : startDragDist);\n}\nfunction getInverseDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var beforeMatrix = datas.beforeMatrix,\n    matrix = datas.matrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? beforeMatrix : matrix, plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]), n), absoluteOrigin);\n}\nfunction calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin) {\n  if (prevWidth === void 0) {\n    prevWidth = width;\n  }\n  if (prevHeight === void 0) {\n    prevHeight = height;\n  }\n  if (prevOrigin === void 0) {\n    prevOrigin = [0, 0];\n  }\n  if (!transformOrigin) {\n    return prevOrigin;\n  }\n  return transformOrigin.map(function (pos, i) {\n    var _a = splitUnit(pos),\n      value = _a.value,\n      unit = _a.unit;\n    var prevSize = i ? prevHeight : prevWidth;\n    var size = i ? height : width;\n    if (pos === \"%\" || isNaN(value)) {\n      // no value but %\n      var measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n      return size * measureRatio;\n    } else if (unit !== \"%\") {\n      return value;\n    }\n    return size * value / 100;\n  });\n}\nfunction getPosIndexesByDirection(direction) {\n  var indexes = [];\n  if (direction[1] >= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(3);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(2);\n    }\n  }\n  if (direction[1] <= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(1);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(0);\n    }\n  }\n  return indexes;\n}\nfunction getPosesByDirection(poses, direction) {\n  /*\n  [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n  [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n  [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n  */\n  return getPosIndexesByDirection(direction).map(function (index) {\n    return poses[index];\n  });\n}\nfunction getPosByDirection(poses, direction) {\n  var xRatio = (direction[0] + 1) / 2;\n  var yRatio = (direction[1] + 1) / 2;\n  var top = [dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio), dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio)];\n  var bottom = [dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio), dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio)];\n  return [dot(top[0], bottom[0], yRatio, 1 - yRatio), dot(top[1], bottom[1], yRatio, 1 - yRatio)];\n}\nfunction getDist(startPos, matrix, width, height, n, fixedDirection) {\n  var poses = calculatePoses(matrix, width, height, n);\n  var fixedPos = getPosByDirection(poses, fixedDirection);\n  var distX = startPos[0] - fixedPos[0];\n  var distY = startPos[1] - fixedPos[1];\n  return [distX, distY];\n}\nfunction getNextMatrix(offsetMatrix, targetMatrix, origin, n) {\n  return multiply(offsetMatrix, getAbsoluteMatrix(targetMatrix, n, origin), n);\n}\nfunction getNextTransformMatrix(state, datas, transform) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d;\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform;\n  var n = is3d ? 4 : 3;\n  var targetTransform = parseMat([transform]);\n  return getNextMatrix(offsetMatrix, convertDimension(multiply(multiply(beforeTransform, targetTransform, 4), afterTransform, 4), 4, n), transformOrigin, n);\n}\nfunction scaleMatrix(state, scale) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    targetMatrix = state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  return getNextMatrix(offsetMatrix, multiply(targetMatrix, createScaleMatrix(scale, n), n), transformOrigin, n);\n}\nfunction fillTransformStartEvent(e) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  return {\n    setTransform: function (transform, index) {\n      if (index === void 0) {\n        index = -1;\n      }\n      originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      setTransformIndex(e, index);\n    },\n    setTransformIndex: function (index) {\n      setTransformIndex(e, index);\n    }\n  };\n}\nfunction setDefaultTransformIndex(e, property) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var startTransforms = originalDatas.startTransforms;\n  setTransformIndex(e, findIndex(startTransforms, function (func) {\n    return func.indexOf(\"\".concat(property, \"(\")) === 0;\n  }));\n}\nfunction setTransformIndex(e, index) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var datas = e.datas;\n  datas.transformIndex = index;\n  if (index === -1) {\n    return;\n  }\n  var transform = originalDatas.startTransforms[index];\n  if (!transform) {\n    return;\n  }\n  var info = parse([transform]);\n  datas.startValue = info[0].functionValue;\n}\nfunction fillOriginalTransform(e, transform) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  originalDatas.nextTransforms = splitSpace(transform); // originalDatas.nextTargetMatrix = parseMat(transform);\n}\n\nfunction getBeforeRenderableDatas(e) {\n  return e.originalDatas.beforeRenderable;\n}\nfunction getNextTransforms(e) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  return originalDatas.nextTransforms;\n}\nfunction getNextTransformText(e) {\n  return getNextTransforms(e).join(\" \");\n}\nfunction getNextStyle(e) {\n  return getBeforeRenderableDatas(e).nextStyle;\n}\nfunction fillTransformEvent(moveable, nextTransform, delta, isPinch, e) {\n  fillOriginalTransform(e, nextTransform);\n  var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, delta, isPinch, false));\n  var afterTransform = drag ? drag.transform : nextTransform;\n  return __assign(__assign({\n    transform: nextTransform,\n    drag: drag\n  }, fillCSSObject({\n    transform: afterTransform\n  }, e)), {\n    afterTransform: afterTransform\n  });\n}\nfunction getTranslateDist(moveable, transform, fixedDirection, fixedPosition, datas) {\n  var state = moveable.state;\n  var left = state.left,\n    top = state.top;\n  var groupable = moveable.props.groupable;\n  var nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n  var dist = minus(fixedPosition, nextFixedPosition);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getScaleDist(moveable, scaleDist, fixedDirection, fixedPosition, datas) {\n  var dist = getTranslateDist(moveable, \"scale(\".concat(scaleDist.join(\", \"), \")\"), fixedDirection, fixedPosition, datas);\n  return dist;\n}\nfunction getDirectionByPos(pos, width, height) {\n  return [-1 + pos[0] / (width / 2), -1 + pos[1] / (height / 2)];\n}\nfunction getDirectionOffset(moveable, direction, nextMatrix) {\n  if (nextMatrix === void 0) {\n    nextMatrix = moveable.state.allMatrix;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height,\n    is3d = _a.is3d;\n  var n = is3d ? 4 : 3;\n  var nextFixedOffset = [width / 2 * (1 + direction[0]), height / 2 * (1 + direction[1])];\n  return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nfunction getRotateDist(moveable, rotateDist, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var fixedPosition = datas.fixedPosition;\n  return getTranslateDist(moveable, \"rotate(\".concat(rotateDist, \"deg)\"), fixedDirection, fixedPosition, datas);\n}\nfunction getResizeDist(moveable, width, height, fixedPosition, transformOrigin, datas) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var prevOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    prevWidth = state.width,\n    prevHeight = state.height,\n    left = state.left,\n    top = state.top;\n  var fixedDirection = datas.fixedDirection;\n  var targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  var nextOrigin = calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n  var dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getAbsolutePosition(moveable, direction) {\n  return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\nfunction getGestoData(moveable, ableName) {\n  var targetGesto = moveable.targetGesto;\n  var controlGesto = moveable.controlGesto;\n  var data;\n  if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n    data = targetGesto.getEventData()[ableName];\n  }\n  if (!data && (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag())) {\n    data = controlGesto.getEventData()[ableName];\n  }\n  return data || {};\n}\nfunction multiply2(pos1, pos2) {\n  return [pos1[0] * pos2[0], pos1[1] * pos2[1]];\n}\nfunction prefix() {\n  var classNames = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classNames[_i] = arguments[_i];\n  }\n  return prefixNames.apply(void 0, __spreadArray([PREFIX], classNames, false));\n}\nfunction defaultSync(fn) {\n  fn();\n}\nfunction getTransformMatrix(transform) {\n  if (!transform || transform === \"none\") {\n    return [1, 0, 0, 1, 0, 0];\n  }\n  if (isObject(transform)) {\n    return transform;\n  }\n  return parseMat(transform);\n}\nfunction getAbsoluteMatrix(matrix, n, origin) {\n  return multiplies(n, createOriginMatrix(origin, n), matrix, createOriginMatrix(origin.map(function (a) {\n    return -a;\n  }), n));\n}\nfunction measureSVGSize(el, unit, isHorizontal) {\n  if (unit === \"%\") {\n    var viewBox = getSVGViewBox(el.ownerSVGElement);\n    return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n  }\n  return 1;\n}\nfunction getBeforeTransformOrigin(el) {\n  var relativeOrigin = getTransformOrigin(getComputedStyle$1(el, \":before\"));\n  return relativeOrigin.map(function (o, i) {\n    var _a = splitUnit(o),\n      value = _a.value,\n      unit = _a.unit;\n    return value * measureSVGSize(el, unit, i === 0);\n  });\n}\nfunction getTransformOrigin(style) {\n  var transformOrigin = style.transformOrigin;\n  return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nfunction getElementTransform(target, computedStyle) {\n  if (computedStyle === void 0) {\n    computedStyle = getComputedStyle$1(target);\n  }\n  var computedTransform = computedStyle.transform;\n  if (computedTransform && computedTransform !== \"none\") {\n    return computedStyle.transform;\n  }\n  if (\"transform\" in target) {\n    var list = target.transform;\n    var baseVal = list.baseVal;\n    if (!baseVal) {\n      return \"\";\n    }\n    var length = baseVal.length;\n    if (!length) {\n      return \"\";\n    }\n    var matrixes = [];\n    var _loop_1 = function (i) {\n      var matrix = baseVal[i].matrix;\n      matrixes.push(\"matrix(\".concat([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].map(function (chr) {\n        return matrix[chr];\n      }).join(\", \"), \")\"));\n    };\n    for (var i = 0; i < length; ++i) {\n      _loop_1(i);\n    }\n    return matrixes.join(\" \");\n  }\n  return \"\";\n}\nfunction getOffsetInfo(el, lastParent, isParent, checkZoom, targetStyle) {\n  var _a, _b, _c;\n  var doc = el && el.ownerDocument ? el.ownerDocument : document;\n  var documentElement = doc.documentElement || doc.body;\n  var hasSlot = false;\n  var target;\n  var parentSlotElement;\n  if (!el || isParent) {\n    target = el;\n  } else {\n    var assignedSlotParentElement = (_a = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _a === void 0 ? void 0 : _a.parentElement;\n    var parentElement = el.parentElement;\n    if (assignedSlotParentElement) {\n      hasSlot = true;\n      parentSlotElement = parentElement;\n      target = assignedSlotParentElement;\n    } else {\n      target = parentElement;\n    }\n  }\n  var isCustomElement = false;\n  var isEnd = el === lastParent || target === lastParent;\n  var position = \"relative\";\n  var offsetZoom = 1;\n  var targetZoom = parseFloat((_b = targetStyle) === null || _b === void 0 ? void 0 : _b.zoom) || 1;\n  var targetPosition = targetStyle === null || targetStyle === void 0 ? void 0 : targetStyle.position;\n  while (target && target !== documentElement) {\n    if (lastParent === target) {\n      isEnd = true;\n    }\n    var style = getComputedStyle$1(target);\n    var tagName = target.tagName.toLowerCase();\n    var transform = getElementTransform(target, style);\n    var willChange = style.willChange;\n    var zoom = parseFloat(style.zoom) || 1;\n    position = style.position;\n    if (checkZoom && zoom !== 1) {\n      offsetZoom = zoom;\n      break;\n    }\n    if (\n    // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n    !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\" || tagName === \"svg\" || position !== \"static\" || transform && transform !== \"none\" || willChange === \"transform\") {\n      break;\n    }\n    var slotParentNode = (_c = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _c === void 0 ? void 0 : _c.parentNode;\n    var targetParentNode = target.parentNode;\n    if (slotParentNode) {\n      hasSlot = true;\n      parentSlotElement = targetParentNode;\n    }\n    var parentNode = slotParentNode || targetParentNode;\n    if (parentNode && parentNode.nodeType === 11) {\n      // Shadow Root\n      target = parentNode.host;\n      isCustomElement = true;\n      break;\n    }\n    target = parentNode;\n    position = \"relative\";\n  }\n  return {\n    offsetZoom: offsetZoom,\n    hasSlot: hasSlot,\n    parentSlotElement: parentSlotElement,\n    isCustomElement: isCustomElement,\n    isStatic: position === \"static\",\n    isEnd: isEnd || !target || target === documentElement,\n    offsetParent: target || documentElement\n  };\n}\nfunction getOffsetPosInfo(el, target, style) {\n  var _a;\n  var tagName = el.tagName.toLowerCase();\n  var offsetLeft = el.offsetLeft;\n  var offsetTop = el.offsetTop; // svg\n\n  var isSVG = isUndefined(offsetLeft);\n  var hasOffset = !isSVG;\n  var origin;\n  var targetOrigin; // inner svg element\n\n  if (!hasOffset && tagName !== \"svg\") {\n    origin = IS_WEBKIT605 ? getBeforeTransformOrigin(el) : getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n    hasOffset = true;\n    _a = getSVGGraphicsOffset(el, origin, el === target && target.tagName.toLowerCase() === \"g\"), offsetLeft = _a[0], offsetTop = _a[1], origin[0] = _a[2], origin[1] = _a[3];\n  } else {\n    origin = getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n  }\n  return {\n    tagName: tagName,\n    isSVG: isSVG,\n    hasOffset: hasOffset,\n    offset: [offsetLeft || 0, offsetTop || 0],\n    origin: origin,\n    targetOrigin: targetOrigin\n  };\n}\nfunction getBodyOffset(el, isSVG, style) {\n  if (style === void 0) {\n    style = getComputedStyle$1(el);\n  }\n  var bodyStyle = getComputedStyle$1(document.body);\n  var bodyPosition = bodyStyle.position;\n  if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n    return [0, 0];\n  }\n  var marginLeft = parseInt(bodyStyle.marginLeft, 10);\n  var marginTop = parseInt(bodyStyle.marginTop, 10);\n  if (style.position === \"absolute\") {\n    if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n      marginTop = 0;\n    }\n    if (style.left !== \"auto\" || style.right !== \"auto\") {\n      marginLeft = 0;\n    }\n  }\n  return [marginLeft, marginTop];\n}\nfunction convert3DMatrixes(matrixes) {\n  matrixes.forEach(function (info) {\n    var matrix = info.matrix;\n    if (matrix) {\n      info.matrix = convertDimension(matrix, 3, 4);\n    }\n  });\n}\nfunction getPositionFixedInfo(el) {\n  var fixedContainer = el.parentElement;\n  var hasTransform = false;\n  while (fixedContainer) {\n    var transform = getComputedStyle$1(fixedContainer).transform;\n    if (transform && transform !== \"none\") {\n      hasTransform = true;\n      break;\n    }\n    if (fixedContainer === document.body) {\n      break;\n    }\n    fixedContainer = fixedContainer.parentElement;\n  }\n  return {\n    fixedContainer: fixedContainer || document.body,\n    hasTransform: hasTransform\n  };\n}\nfunction makeMatrixCSS(matrix, is3d) {\n  if (is3d === void 0) {\n    is3d = matrix.length > 9;\n  }\n  return \"\".concat(is3d ? \"matrix3d\" : \"matrix\", \"(\").concat(convertMatrixtoCSS(matrix, !is3d).join(\",\"), \")\");\n}\nfunction getSVGViewBox(el) {\n  var clientWidth = el.clientWidth;\n  var clientHeight = el.clientHeight;\n  if (!el) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      clientWidth: clientWidth,\n      clientHeight: clientHeight\n    };\n  }\n  var viewBox = el.viewBox;\n  var baseVal = viewBox && viewBox.baseVal || {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  return {\n    x: baseVal.x,\n    y: baseVal.y,\n    width: baseVal.width || clientWidth,\n    height: baseVal.height || clientHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight\n  };\n}\nfunction getSVGMatrix(el, n) {\n  var _a = getSVGViewBox(el),\n    viewBoxWidth = _a.width,\n    viewBoxHeight = _a.height,\n    clientWidth = _a.clientWidth,\n    clientHeight = _a.clientHeight;\n  var scaleX = clientWidth / viewBoxWidth;\n  var scaleY = clientHeight / viewBoxHeight;\n  var preserveAspectRatio = el.preserveAspectRatio.baseVal; // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n\n  var align = preserveAspectRatio.align; // 1 : meet 2: slice\n\n  var meetOrSlice = preserveAspectRatio.meetOrSlice;\n  var svgOrigin = [0, 0];\n  var scale = [scaleX, scaleY];\n  var translate = [0, 0];\n  if (align !== 1) {\n    var xAlign = (align - 2) % 3;\n    var yAlign = Math.floor((align - 2) / 3);\n    svgOrigin[0] = viewBoxWidth * xAlign / 2;\n    svgOrigin[1] = viewBoxHeight * yAlign / 2;\n    var scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n    scale[0] = scaleDimension;\n    scale[1] = scaleDimension;\n    translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n    translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n  }\n  var scaleMatrix = createScaleMatrix(scale, n);\n  scaleMatrix[n * (n - 1)] = translate[0], scaleMatrix[n * (n - 1) + 1] = translate[1];\n  return getAbsoluteMatrix(scaleMatrix, n, svgOrigin);\n}\nfunction getSVGGraphicsOffset(el, origin, isGTarget) {\n  if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n    return [0, 0, 0, 0];\n  }\n  var bbox = el.getBBox();\n  var viewBox = getSVGViewBox(el.ownerSVGElement);\n  var left = bbox.x - viewBox.x;\n  var top = bbox.y - viewBox.y;\n  return [left, top, origin[0] - left, origin[1] - top];\n}\nfunction calculatePosition(matrix, pos, n) {\n  return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nfunction calculatePoses(matrix, width, height, n) {\n  return [[0, 0], [width, 0], [0, height], [width, height]].map(function (pos) {\n    return calculatePosition(matrix, pos, n);\n  });\n}\nfunction getRect(poses) {\n  var posesX = poses.map(function (pos) {\n    return pos[0];\n  });\n  var posesY = poses.map(function (pos) {\n    return pos[1];\n  });\n  var left = Math.min.apply(Math, posesX);\n  var top = Math.min.apply(Math, posesY);\n  var right = Math.max.apply(Math, posesX);\n  var bottom = Math.max.apply(Math, posesY);\n  var rectWidth = right - left;\n  var rectHeight = bottom - top;\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    width: rectWidth,\n    height: rectHeight\n  };\n}\nfunction calculateRect(matrix, width, height, n) {\n  var poses = calculatePoses(matrix, width, height, n);\n  return getRect(poses);\n}\nfunction getSVGOffset(offsetInfo, targetInfo, container, n, beforeMatrix) {\n  var _a;\n  var target = offsetInfo.target;\n  var origin = offsetInfo.origin;\n  var targetMatrix = targetInfo.matrix;\n  var _b = getSize(target),\n    width = _b.offsetWidth,\n    height = _b.offsetHeight;\n  var containerClientRect = container.getBoundingClientRect();\n  var margin = [0, 0];\n  if (container === document.body) {\n    margin = getBodyOffset(target, true);\n  }\n  var rect = target.getBoundingClientRect();\n  var rectLeft = rect.left - containerClientRect.left + container.scrollLeft - (container.clientLeft || 0) + margin[0];\n  var rectTop = rect.top - containerClientRect.top + container.scrollTop - (container.clientTop || 0) + margin[1];\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  var mat = multiplies(n, beforeMatrix, targetMatrix);\n  var _c = calculateRect(mat, width, height, n),\n    prevLeft = _c.left,\n    prevTop = _c.top,\n    prevWidth = _c.width,\n    prevHeight = _c.height;\n  var posOrigin = calculatePosition(mat, origin, n);\n  var prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n  var rectOrigin = [rectLeft + prevOrigin[0] * rectWidth / prevWidth, rectTop + prevOrigin[1] * rectHeight / prevHeight];\n  var offset = [0, 0];\n  var count = 0;\n  while (++count < 10) {\n    var inverseBeforeMatrix = invert(beforeMatrix, n);\n    _a = minus(calculatePosition(inverseBeforeMatrix, rectOrigin, n), calculatePosition(inverseBeforeMatrix, posOrigin, n)), offset[0] = _a[0], offset[1] = _a[1];\n    var mat2 = multiplies(n, beforeMatrix, createOriginMatrix(offset, n), targetMatrix);\n    var _d = calculateRect(mat2, width, height, n),\n      nextLeft = _d.left,\n      nextTop = _d.top;\n    var distLeft = nextLeft - rectLeft;\n    var distTop = nextTop - rectTop;\n    if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n      break;\n    }\n    rectOrigin[0] -= distLeft;\n    rectOrigin[1] -= distTop;\n  }\n  return offset.map(function (p) {\n    return Math.round(p);\n  });\n}\nfunction calculateMoveableClientPositions(rootMatrix, poses, rootClientRect) {\n  var is3d = rootMatrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var rootPoses = poses.map(function (pos) {\n    return calculatePosition(rootMatrix, pos, n);\n  });\n  var left = rootClientRect.left,\n    top = rootClientRect.top;\n  return rootPoses.map(function (pos) {\n    return [pos[0] + left, pos[1] + top];\n  });\n}\nfunction calculateMoveablePosition(matrix, origin, width, height) {\n  var is3d = matrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var poses = calculatePoses(matrix, width, height, n);\n  var _a = poses[0],\n    x1 = _a[0],\n    y1 = _a[1],\n    _b = poses[1],\n    x2 = _b[0],\n    y2 = _b[1],\n    _c = poses[2],\n    x3 = _c[0],\n    y3 = _c[1],\n    _d = poses[3],\n    x4 = _d[0],\n    y4 = _d[1];\n  var _e = calculatePosition(matrix, origin, n),\n    originX = _e[0],\n    originY = _e[1];\n  var left = Math.min(x1, x2, x3, x4);\n  var top = Math.min(y1, y2, y3, y4);\n  var right = Math.max(x1, x2, x3, x4);\n  var bottom = Math.max(y1, y2, y3, y4);\n  x1 = x1 - left || 0;\n  x2 = x2 - left || 0;\n  x3 = x3 - left || 0;\n  x4 = x4 - left || 0;\n  y1 = y1 - top || 0;\n  y2 = y2 - top || 0;\n  y3 = y3 - top || 0;\n  y4 = y4 - top || 0;\n  originX = originX - left || 0;\n  originY = originY - top || 0;\n  var direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    origin: [originX, originY],\n    pos1: [x1, y1],\n    pos2: [x2, y2],\n    pos3: [x3, y3],\n    pos4: [x4, y4],\n    direction: direction\n  };\n}\nfunction getDistSize(vec) {\n  return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nfunction getDiagonalSize(pos1, pos2) {\n  return getDistSize([pos2[0] - pos1[0], pos2[1] - pos1[1]]);\n}\nfunction getLineStyle(pos1, pos2, zoom, rad) {\n  if (zoom === void 0) {\n    zoom = 1;\n  }\n  if (rad === void 0) {\n    rad = getRad(pos1, pos2);\n  }\n  var width = getDiagonalSize(pos1, pos2);\n  return {\n    transform: \"translateY(-50%) translate(\".concat(pos1[0], \"px, \").concat(pos1[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\"),\n    width: \"\".concat(width, \"px\")\n  };\n}\nfunction getControlTransform(rotation, zoom) {\n  var poses = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    poses[_i - 2] = arguments[_i];\n  }\n  var length = poses.length;\n  var x = poses.reduce(function (prev, pos) {\n    return prev + pos[0];\n  }, 0) / length;\n  var y = poses.reduce(function (prev, pos) {\n    return prev + pos[1];\n  }, 0) / length;\n  return {\n    transform: \"translateZ(0px) translate(\".concat(x, \"px, \").concat(y, \"px) rotate(\").concat(rotation, \"rad) scale(\").concat(zoom, \")\")\n  };\n}\nfunction getProps(props, ableName) {\n  var self = props[ableName];\n  if (isObject(self)) {\n    return __assign(__assign({}, props), self);\n  }\n  return props;\n}\nfunction getSize(target, style) {\n  if (style === void 0) {\n    style = target ? getComputedStyle$1(target) : null;\n  }\n  var hasOffset = target && !isUndefined(target.offsetWidth);\n  var offsetWidth = 0;\n  var offsetHeight = 0;\n  var clientWidth = 0;\n  var clientHeight = 0;\n  var cssWidth = 0;\n  var cssHeight = 0;\n  var contentWidth = 0;\n  var contentHeight = 0;\n  var minWidth = 0;\n  var minHeight = 0;\n  var minOffsetWidth = 0;\n  var minOffsetHeight = 0;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  var maxOffsetWidth = Infinity;\n  var maxOffsetHeight = Infinity;\n  var inlineCSSWidth = 0;\n  var inlineCSSHeight = 0;\n  var svg = false;\n  if (target) {\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n      var bbox = target.getBBox();\n      svg = true;\n      offsetWidth = bbox.width;\n      offsetHeight = bbox.height;\n      cssWidth = offsetWidth;\n      cssHeight = offsetHeight;\n      contentWidth = offsetWidth;\n      contentHeight = offsetHeight;\n      clientWidth = offsetWidth;\n      clientHeight = offsetHeight;\n    } else {\n      var targetStyle = target.style;\n      var boxSizing = style.boxSizing === \"border-box\";\n      var borderLeft = parseFloat(style.borderLeftWidth) || 0;\n      var borderRight = parseFloat(style.borderRightWidth) || 0;\n      var borderTop = parseFloat(style.borderTopWidth) || 0;\n      var borderBottom = parseFloat(style.borderBottomWidth) || 0;\n      var paddingLeft = parseFloat(style.paddingLeft) || 0;\n      var paddingRight = parseFloat(style.paddingRight) || 0;\n      var paddingTop = parseFloat(style.paddingTop) || 0;\n      var paddingBottom = parseFloat(style.paddingBottom) || 0;\n      var horizontalPadding = paddingLeft + paddingRight;\n      var verticalPadding = paddingTop + paddingBottom;\n      var horizontalBorder = borderLeft + borderRight;\n      var verticalBorder = borderTop + borderBottom;\n      var horizontalOffset = horizontalPadding + horizontalBorder;\n      var verticalOffset = verticalPadding + verticalBorder;\n      var position = style.position;\n      var containerWidth = 0;\n      var containerHeight = 0; // SVGSVGElement, HTMLElement\n\n      if (\"clientLeft\" in target) {\n        var parentElement = null;\n        if (position === \"absolute\") {\n          var offsetInfo = getOffsetInfo(target, document.body);\n          parentElement = offsetInfo.offsetParent;\n        } else {\n          parentElement = target.parentElement;\n        }\n        if (parentElement) {\n          var parentStyle = getComputedStyle$1(parentElement);\n          containerWidth = parseFloat(parentStyle.width);\n          containerHeight = parseFloat(parentStyle.height);\n        }\n      }\n      minWidth = Math.max(horizontalPadding, convertUnitSize(style.minWidth, containerWidth) || 0);\n      minHeight = Math.max(verticalPadding, convertUnitSize(style.minHeight, containerHeight) || 0);\n      maxWidth = convertUnitSize(style.maxWidth, containerWidth);\n      maxHeight = convertUnitSize(style.maxHeight, containerHeight);\n      if (isNaN(maxWidth)) {\n        maxWidth = Infinity;\n      }\n      if (isNaN(maxHeight)) {\n        maxHeight = Infinity;\n      }\n      inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n      inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n      cssWidth = parseFloat(style.width) || 0;\n      cssHeight = parseFloat(style.height) || 0;\n      contentWidth = Math.abs(cssWidth - inlineCSSWidth) < 1 ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth) : cssWidth;\n      contentHeight = Math.abs(cssHeight - inlineCSSHeight) < 1 ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight) : cssHeight;\n      offsetWidth = contentWidth;\n      offsetHeight = contentHeight;\n      clientWidth = contentWidth;\n      clientHeight = contentHeight;\n      if (boxSizing) {\n        maxOffsetWidth = maxWidth;\n        maxOffsetHeight = maxHeight;\n        minOffsetWidth = minWidth;\n        minOffsetHeight = minHeight;\n        contentWidth = offsetWidth - horizontalOffset;\n        contentHeight = offsetHeight - verticalOffset;\n      } else {\n        maxOffsetWidth = maxWidth + horizontalOffset;\n        maxOffsetHeight = maxHeight + verticalOffset;\n        minOffsetWidth = minWidth + horizontalOffset;\n        minOffsetHeight = minHeight + verticalOffset;\n        offsetWidth = contentWidth + horizontalOffset;\n        offsetHeight = contentHeight + verticalOffset;\n      }\n      clientWidth = contentWidth + horizontalPadding;\n      clientHeight = contentHeight + verticalPadding;\n    }\n  }\n  return {\n    svg: svg,\n    offsetWidth: offsetWidth,\n    offsetHeight: offsetHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight,\n    contentWidth: contentWidth,\n    contentHeight: contentHeight,\n    inlineCSSWidth: inlineCSSWidth,\n    inlineCSSHeight: inlineCSSHeight,\n    cssWidth: cssWidth,\n    cssHeight: cssHeight,\n    minWidth: minWidth,\n    minHeight: minHeight,\n    maxWidth: maxWidth,\n    maxHeight: maxHeight,\n    minOffsetWidth: minOffsetWidth,\n    minOffsetHeight: minOffsetHeight,\n    maxOffsetWidth: maxOffsetWidth,\n    maxOffsetHeight: maxOffsetHeight\n  };\n}\nfunction getRotationRad(poses, direction) {\n  return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nfunction resetClientRect() {\n  return {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    right: 0,\n    bottom: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0\n  };\n}\nfunction getExtendsRect(el, rect) {\n  var isRoot = el === document.body || el === document.documentElement;\n  var extendsRect = {\n    clientLeft: el.clientLeft,\n    clientTop: el.clientTop,\n    clientWidth: el.clientWidth,\n    clientHeight: el.clientHeight,\n    scrollWidth: el.scrollWidth,\n    scrollHeight: el.scrollHeight,\n    overflow: false\n  };\n  if (isRoot) {\n    extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n    extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n  }\n  extendsRect.overflow = getComputedStyle$1(el).overflow !== \"visible\";\n  return __assign(__assign({}, rect), extendsRect);\n}\nfunction getClientRectByPosition(position, base, el, isExtends) {\n  var left = position.left,\n    right = position.right,\n    top = position.top,\n    bottom = position.bottom;\n  var baseTop = base.top;\n  var baseLeft = base.left;\n  var rect = {\n    left: baseLeft + left,\n    top: baseTop + top,\n    right: baseLeft + right,\n    bottom: baseTop + bottom,\n    width: right - left,\n    height: bottom - top\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getClientRect(el, isExtends) {\n  var left = 0;\n  var top = 0;\n  var width = 0;\n  var height = 0; // let isRoot = false;\n\n  if (el) {\n    // isRoot = el === document.body || el === document.documentElement;\n    // if (isRoot) {\n    //     width = window.innerWidth;\n    //     height = window.innerHeight;\n    //     const scrollPos = getBodyScrollPos();\n    //     [left, top] = [-scrollPos[0], -scrollPos[1]];\n    // } else {\n    var clientRect = el.getBoundingClientRect();\n    left = clientRect.left;\n    top = clientRect.top;\n    width = clientRect.width;\n    height = clientRect.height; // }\n  }\n\n  var rect = {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    right: left + width,\n    bottom: top + height\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getTotalDirection(parentDirection, isPinch, inputEvent, datas) {\n  var direction;\n  if (parentDirection) {\n    direction = parentDirection;\n  } else if (isPinch) {\n    direction = [0, 0];\n  } else {\n    var target = inputEvent.target;\n    direction = getDirection(target, datas);\n  }\n  return direction;\n}\nfunction getDirection(target, datas) {\n  if (!target) {\n    return;\n  }\n  var deg = target.getAttribute(\"data-rotation\") || \"\";\n  var direciton = target.getAttribute(\"data-direction\");\n  datas.deg = deg;\n  if (!direciton) {\n    return;\n  }\n  var dir = [0, 0];\n  direciton.indexOf(\"w\") > -1 && (dir[0] = -1);\n  direciton.indexOf(\"e\") > -1 && (dir[0] = 1);\n  direciton.indexOf(\"n\") > -1 && (dir[1] = -1);\n  direciton.indexOf(\"s\") > -1 && (dir[1] = 1);\n  return dir;\n}\nfunction getAbsolutePoses(poses, dist) {\n  return [plus(dist, poses[0]), plus(dist, poses[1]), plus(dist, poses[2]), plus(dist, poses[3])];\n}\nfunction getAbsolutePosesByState(_a) {\n  var left = _a.left,\n    top = _a.top,\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nfunction roundSign(num) {\n  return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nfunction unset(self, name) {\n  var _a;\n  (_a = self[name]) === null || _a === void 0 ? void 0 : _a.unset();\n  self[name] = null;\n}\nfunction fillCSSObject(style, resolvedEvent) {\n  if (resolvedEvent) {\n    var originalDatas = getBeforeRenderableDatas(resolvedEvent);\n    originalDatas.nextStyle = __assign(__assign({}, originalDatas.nextStyle), style);\n  }\n  return {\n    style: style,\n    cssText: getKeys(style).map(function (name) {\n      return \"\".concat(decamelize(name, \"-\"), \": \").concat(style[name], \";\");\n    }).join(\"\")\n  };\n}\nfunction fillAfterTransform(prevEvent, nextEvent, resolvedEvent) {\n  var afterTransform = nextEvent.afterTransform || nextEvent.transform;\n  return __assign(__assign({}, fillCSSObject(__assign(__assign(__assign({}, prevEvent.style), nextEvent.style), {\n    transform: afterTransform\n  }), resolvedEvent)), {\n    afterTransform: afterTransform,\n    transform: prevEvent.transform\n  });\n}\nfunction fillParams(moveable, e, params, isBeforeEvent) {\n  var datas = e.datas;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  var nextParams = __assign(__assign({}, params), {\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    moveable: moveable,\n    datas: datas.datas,\n    isFirstDrag: !!e.isFirstDrag,\n    isTrusted: e.isTrusted !== false,\n    stopAble: function () {\n      datas.isEventStart = false;\n    },\n    stopDrag: function () {\n      var _a;\n      (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n    }\n  });\n  if (!datas.isStartEvent) {\n    datas.isStartEvent = true;\n  } else if (!isBeforeEvent) {\n    datas.lastEvent = nextParams;\n  }\n  return nextParams;\n}\nfunction fillEndParams(moveable, e, params) {\n  var datas = e.datas;\n  var isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  return __assign(__assign({\n    isDrag: isDrag\n  }, params), {\n    moveable: moveable,\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    lastEvent: datas.lastEvent,\n    isDouble: e.isDouble,\n    datas: datas.datas,\n    isFirstDrag: !!e.isFirstDrag\n  });\n}\nfunction catchEvent(moveable, name, callback) {\n  moveable._emitter.on(name, callback);\n}\nfunction triggerEvent(moveable, name, params, isManager) {\n  return moveable.triggerEvent(name, params, isManager);\n}\nfunction getComputedStyle$1(el, pseudoElt) {\n  return window.getComputedStyle(el, pseudoElt);\n}\nfunction filterAbles(ables, methods, triggerAblesSimultaneously) {\n  var enabledAbles = {};\n  var ableGroups = {};\n  return ables.filter(function (able) {\n    var name = able.name;\n    if (enabledAbles[name] || !methods.some(function (method) {\n      return able[method];\n    })) {\n      return false;\n    }\n    if (!triggerAblesSimultaneously && able.ableGroup) {\n      if (ableGroups[able.ableGroup]) {\n        return false;\n      }\n      ableGroups[able.ableGroup] = true;\n    }\n    enabledAbles[name] = true;\n    return true;\n  });\n}\nfunction equals(a1, a2) {\n  return a1 === a2 || a1 == null && a2 == null;\n}\nfunction selectValue() {\n  var values = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n  var length = values.length - 1;\n  for (var i = 0; i < length; ++i) {\n    var value = values[i];\n    if (!isUndefined(value)) {\n      return value;\n    }\n  }\n  return values[length];\n}\nfunction groupBy(arr, func) {\n  var groups = [];\n  var groupKeys = [];\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var keyIndex = groupKeys.indexOf(groupKey);\n    var group = groups[keyIndex] || [];\n    if (keyIndex === -1) {\n      groupKeys.push(groupKey);\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction groupByMap(arr, func) {\n  var groups = [];\n  var groupKeys = {};\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var group = groupKeys[groupKey];\n    if (!group) {\n      group = [];\n      groupKeys[groupKey] = group;\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction flat(arr) {\n  return arr.reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n}\nfunction maxOffset() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  args.sort(function (a, b) {\n    return Math.abs(b) - Math.abs(a);\n  });\n  return args[0];\n}\nfunction calculateInversePosition(matrix, pos, n) {\n  return calculate(invert(matrix, n), convertPositionMatrix(pos, n), n);\n}\nfunction convertDragDist(state, e) {\n  var _a;\n  var is3d = state.is3d,\n    rootMatrix = state.rootMatrix;\n  var n = is3d ? 4 : 3;\n  _a = calculateInversePosition(rootMatrix, [e.distX, e.distY], n), e.distX = _a[0], e.distY = _a[1];\n  return e;\n}\nfunction calculatePadding(matrix, pos, transformOrigin, origin, n) {\n  return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\nfunction convertCSSSize(value, size, isRelative) {\n  return isRelative ? \"\".concat(value / size * 100, \"%\") : \"\".concat(value, \"px\");\n}\nfunction getTinyDist(v) {\n  return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\nfunction getDirectionViewClassName(ableName) {\n  return function (moveable) {\n    if (!moveable.isDragging(ableName)) {\n      return \"\";\n    }\n    var data = getGestoData(moveable, ableName);\n    var deg = data.deg;\n    if (!deg) {\n      return \"\";\n    }\n    return prefix(\"view-control-rotation\".concat(deg));\n  };\n}\nfunction getDirectionCondition(ableName, checkAbles) {\n  if (checkAbles === void 0) {\n    checkAbles = [ableName];\n  }\n  return function (moveable, e) {\n    if (e.isRequest) {\n      if (checkAbles.some(function (name) {\n        return e.requestAble === name;\n      })) {\n        return e.parentDirection;\n      } else {\n        return false;\n      }\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n  };\n}\nfunction invertObject(obj) {\n  var nextObj = {};\n  for (var name in obj) {\n    nextObj[obj[name]] = name;\n  }\n  return nextObj;\n}\nfunction convertTransformInfo(transforms, index) {\n  var beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n  var beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n  var targetFunctionText = transforms[index] || \"\";\n  var afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n  var afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n  var beforeFunctions = parse(beforeFunctionTexts);\n  var beforeFunctions2 = parse(beforeFunctionTexts2);\n  var targetFunctions = parse([targetFunctionText]);\n  var afterFunctions = parse(afterFunctionTexts);\n  var afterFunctions2 = parse(afterFunctionTexts2);\n  var beforeFunctionMatrix = toMat(beforeFunctions);\n  var beforeFunctionMatrix2 = toMat(beforeFunctions2);\n  var afterFunctionMatrix = toMat(afterFunctions);\n  var afterFunctionMatrix2 = toMat(afterFunctions2);\n  var allFunctionMatrix = multiply(beforeFunctionMatrix, afterFunctionMatrix, 4);\n  return {\n    transforms: transforms,\n    beforeFunctionMatrix: beforeFunctionMatrix,\n    beforeFunctionMatrix2: beforeFunctionMatrix2,\n    targetFunctionMatrix: toMat(targetFunctions),\n    afterFunctionMatrix: afterFunctionMatrix,\n    afterFunctionMatrix2: afterFunctionMatrix2,\n    allFunctionMatrix: allFunctionMatrix,\n    beforeFunctions: beforeFunctions,\n    beforeFunctions2: beforeFunctions2,\n    targetFunction: targetFunctions[0],\n    afterFunctions: afterFunctions,\n    afterFunctions2: afterFunctions2,\n    beforeFunctionTexts: beforeFunctionTexts,\n    beforeFunctionTexts2: beforeFunctionTexts2,\n    targetFunctionText: targetFunctionText,\n    afterFunctionTexts: afterFunctionTexts,\n    afterFunctionTexts2: afterFunctionTexts2\n  };\n}\nfunction isArrayFormat(arr) {\n  if (!arr || !isObject(arr)) {\n    return false;\n  }\n  if (arr instanceof Element) {\n    return false;\n  }\n  return isArray(arr) || \"length\" in arr;\n}\nfunction getRefTarget(target, isSelector) {\n  if (!target) {\n    return null;\n  }\n  if (target instanceof Element) {\n    return target;\n  }\n  if (isString(target)) {\n    if (isSelector) {\n      return document.querySelector(target);\n    }\n    return target;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (\"current\" in target) {\n    return target.current;\n  }\n  return target;\n}\nfunction getRefTargets(targets, isSelector) {\n  if (!targets) {\n    return [];\n  }\n  var userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n  return userTargets.reduce(function (prev, target) {\n    if (isString(target) && isSelector) {\n      return __spreadArray(__spreadArray([], prev, true), [].slice.call(document.querySelectorAll(target)), true);\n    }\n    if (isArray(target)) {\n      prev.push(getRefTargets(target, isSelector));\n    } else {\n      prev.push(getRefTarget(target, isSelector));\n    }\n    return prev;\n  }, []);\n}\nfunction getAbsoluteRotation(pos1, pos2, direction) {\n  var deg = getRad(pos1, pos2) / Math.PI * 180;\n  deg = direction >= 0 ? deg : 180 - deg;\n  deg = deg >= 0 ? deg : 360 + deg;\n  return deg;\n}\nfunction getDragDistByState(state, dist) {\n  var rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var inverseMatrix = invert(rootMatrix, n);\n  if (!is3d) {\n    inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n  }\n  inverseMatrix[12] = 0;\n  inverseMatrix[13] = 0;\n  inverseMatrix[14] = 0;\n  return calculateMatrixDist(inverseMatrix, dist);\n}\nfunction getSizeDistByDist(startSize, dist, ratio, direction, keepRatio) {\n  var startOffsetWidth = startSize[0],\n    startOffsetHeight = startSize[1];\n  var distWidth = 0;\n  var distHeight = 0;\n  if (keepRatio && startOffsetWidth && startOffsetHeight) {\n    var rad = getRad([0, 0], dist);\n    var standardRad = getRad([0, 0], direction);\n    var size = getDistSize(dist);\n    var signSize = Math.cos(rad - standardRad) * size;\n    if (!direction[0]) {\n      // top, bottom\n      distHeight = signSize;\n      distWidth = distHeight * ratio;\n    } else if (!direction[1]) {\n      // left, right\n      distWidth = signSize;\n      distHeight = distWidth / ratio;\n    } else {\n      // two-way\n      var startWidthSize = direction[0] * 2 * startOffsetWidth;\n      var startHeightSize = direction[1] * 2 * startOffsetHeight;\n      var distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) - getDistSize([startWidthSize, startHeightSize]);\n      var ratioRad = getRad([0, 0], [ratio, 1]);\n      distWidth = Math.cos(ratioRad) * distSize;\n      distHeight = Math.sin(ratioRad) * distSize;\n    }\n  } else {\n    distWidth = direction[0] * dist[0];\n    distHeight = direction[1] * dist[1];\n  }\n  return [distWidth, distHeight];\n}\nfunction getOffsetSizeDist(sizeDirection, keepRatio, datas, e) {\n  var _a;\n  var ratio = datas.ratio,\n    startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight;\n  var distWidth = 0;\n  var distHeight = 0;\n  var distX = e.distX,\n    distY = e.distY,\n    parentDistance = e.parentDistance,\n    parentDist = e.parentDist,\n    parentScale = e.parentScale;\n  var startFixedDirection = datas.fixedDirection;\n  var directionsDists = [0, 1].map(function (index) {\n    return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n  });\n  var directionRatios = [0, 1].map(function (index) {\n    var dist = directionsDists[index];\n    if (dist !== 0) {\n      dist = 2 / dist;\n    }\n    return dist;\n  });\n  if (parentDist) {\n    distWidth = parentDist[0];\n    distHeight = parentDist[1];\n    if (keepRatio) {\n      if (!distWidth) {\n        distWidth = distHeight * ratio;\n      } else if (!distHeight) {\n        distHeight = distWidth / ratio;\n      }\n    }\n  } else if (parentScale) {\n    distWidth = (parentScale[0] - 1) * startOffsetWidth;\n    distHeight = (parentScale[1] - 1) * startOffsetHeight;\n  } else if (parentDistance) {\n    var scaleX = startOffsetWidth * directionsDists[0];\n    var scaleY = startOffsetHeight * directionsDists[1];\n    var ratioDistance = getDistSize([scaleX, scaleY]);\n    distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n    distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n  } else {\n    var dist_1 = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    });\n    dist_1 = directionRatios.map(function (ratio, i) {\n      return dist_1[i] * ratio;\n    });\n    _a = getSizeDistByDist([startOffsetWidth, startOffsetHeight], dist_1, ratio, sizeDirection, keepRatio), distWidth = _a[0], distHeight = _a[1];\n  }\n  return {\n    // direction,\n    // sizeDirection,\n    distWidth: distWidth,\n    distHeight: distHeight\n  };\n}\nfunction convertTransformUnit(origin, xy) {\n  if (xy) {\n    if (origin === \"left\") {\n      return {\n        x: \"0%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"top\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"center\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"right\") {\n      return {\n        x: \"100%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"bottom\") {\n      return {\n        x: \"50%\",\n        y: \"100%\"\n      };\n    }\n    var _a = origin.split(\" \"),\n      left = _a[0],\n      right = _a[1];\n    var leftOrigin = convertTransformUnit(left || \"\");\n    var rightOrigin = convertTransformUnit(right || \"\");\n    var originObject = __assign(__assign({}, leftOrigin), rightOrigin);\n    var nextOriginObject = {\n      x: \"50%\",\n      y: \"50%\"\n    };\n    if (originObject.x) {\n      nextOriginObject.x = originObject.x;\n    }\n    if (originObject.y) {\n      nextOriginObject.y = originObject.y;\n    }\n    if (originObject.value) {\n      if (originObject.x && !originObject.y) {\n        nextOriginObject.y = originObject.value;\n      }\n      if (!originObject.x && originObject.y) {\n        nextOriginObject.x = originObject.value;\n      }\n    }\n    return nextOriginObject;\n  }\n  if (origin === \"left\") {\n    return {\n      x: \"0%\"\n    };\n  }\n  if (origin === \"right\") {\n    return {\n      x: \"100%\"\n    };\n  }\n  if (origin === \"top\") {\n    return {\n      y: \"0%\"\n    };\n  }\n  if (origin === \"bottom\") {\n    return {\n      y: \"100%\"\n    };\n  }\n  if (!origin) {\n    return {};\n  }\n  if (origin === \"center\") {\n    return {\n      value: \"50%\"\n    };\n  }\n  return {\n    value: origin\n  };\n}\nfunction convertTransformOriginArray(transformOrigin, width, height) {\n  var _a = convertTransformUnit(transformOrigin, true),\n    x = _a.x,\n    y = _a.y;\n  return [convertUnitSize(x, width) || 0, convertUnitSize(y, height) || 0];\n}\nfunction rotatePosesInfo(poses, origin, rad) {\n  var prevPoses = poses.map(function (pos) {\n    return minus(pos, origin);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  });\n  return {\n    prev: prevPoses,\n    next: nextPoses,\n    result: nextPoses.map(function (pos) {\n      return plus(pos, origin);\n    })\n  };\n}\nfunction isDeepArrayEquals(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every(function (value1, i) {\n    var value2 = arr2[i];\n    var isArray1 = isArray(value1);\n    var isArray2 = isArray(value2);\n    if (isArray1 && isArray2) {\n      return isDeepArrayEquals(value1, value2);\n    } else if (!isArray1 && !isArray2) {\n      return value1 === value2;\n    }\n    return false;\n  });\n}\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\n\nvar Pinchable = makeAble(\"pinchable\", {\n  events: {\n    onPinchStart: \"pinchStart\",\n    onPinch: \"pinch\",\n    onPinchEnd: \"pinchEnd\",\n    onPinchGroupStart: \"pinchGroupStart\",\n    onPinchGroup: \"pinchGroup\",\n    onPinchGroupEnd: \"pinchGroupEnd\"\n  },\n  dragStart: function () {\n    return true;\n  },\n  pinchStart: function (moveable, e) {\n    var datas = e.datas,\n      targets = e.targets,\n      angle = e.angle,\n      originalDatas = e.originalDatas;\n    var _a = moveable.props,\n      pinchable = _a.pinchable,\n      ables = _a.ables;\n    if (!pinchable) {\n      return false;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"Start\");\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlStart\");\n    var pinchAbles = (pinchable === true ? moveable.controlAbles : ables.filter(function (able) {\n      return pinchable.indexOf(able.name) > -1;\n    })).filter(function (able) {\n      return able.canPinch && able[controlEventName];\n    });\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var result = triggerEvent(moveable, eventName, params);\n    datas.isPinch = result !== false;\n    datas.ables = pinchAbles;\n    var isPinch = datas.isPinch;\n    if (!isPinch) {\n      return false;\n    }\n    pinchAbles.forEach(function (able) {\n      originalDatas[able.name] = originalDatas[able.name] || {};\n      if (!able[controlEventName]) {\n        return;\n      }\n      var ableEvent = __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        parentRotate: angle,\n        isPinch: true\n      });\n      able[controlEventName](moveable, ableEvent);\n    });\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: [0, 0]\n    };\n    return isPinch;\n  },\n  pinch: function (moveable, e) {\n    var datas = e.datas,\n      pinchScale = e.scale,\n      distance = e.distance,\n      originalDatas = e.originalDatas,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      angle = e.angle;\n    if (!datas.isPinch) {\n      return;\n    }\n    var parentDistance = distance * (1 - 1 / pinchScale);\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\");\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"Control\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        parentDistance: parentDistance,\n        parentRotate: angle,\n        isPinch: true\n      }));\n    });\n    return params;\n  },\n  pinchEnd: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      originalDatas = e.originalDatas;\n    if (!datas.isPinch) {\n      return;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"End\");\n    var params = fillEndParams(moveable, e, {\n      isDrag: isPinch\n    });\n    if (targets) {\n      params.targets = targets;\n    }\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlEnd\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        isDrag: isPinch,\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        isPinch: true\n      }));\n    });\n    return isPinch;\n  },\n  pinchGroupStart: function (moveable, e) {\n    return this.pinchStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroup: function (moveable, e) {\n    return this.pinch(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroupEnd: function (moveable, e) {\n    return this.pinchEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n});\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction fillChildEvents(moveable, name, e) {\n  var datas = e.originalDatas;\n  datas.groupable = datas.groupable || {};\n  var groupableDatas = datas.groupable;\n  groupableDatas.childDatas = groupableDatas.childDatas || [];\n  var childDatas = groupableDatas.childDatas;\n  return moveable.moveables.map(function (_, i) {\n    childDatas[i] = childDatas[i] || {};\n    childDatas[i][name] = childDatas[i][name] || {};\n    return __assign(__assign({}, e), {\n      datas: childDatas[i][name],\n      originalDatas: childDatas[i]\n    });\n  });\n}\nfunction triggerChildGesto(moveable, able, type, delta, e, isConvert, ableName) {\n  var isStart = !!type.match(/Start$/g);\n  var isEnd = !!type.match(/End$/g);\n  var isPinch = e.isPinch;\n  var datas = e.datas;\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var state = childMoveable.state;\n    var gestos = state.gestos;\n    var childEvent = ev;\n    if (isStart) {\n      childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n    } else {\n      if (!gestos[ableName]) {\n        gestos[ableName] = datas.childGestos[i];\n      }\n      if (!gestos[ableName]) {\n        return;\n      }\n      childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n    }\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    if (isEnd) {\n      gestos[ableName] = null;\n    }\n    return result;\n  });\n  if (isStart) {\n    datas.childGestos = moveables.map(function (child) {\n      return child.state.gestos[ableName];\n    });\n  }\n  return childs;\n}\nfunction triggerChildAbles(moveable, able, type, e, eachEvent, callback) {\n  if (eachEvent === void 0) {\n    eachEvent = function (_, ev) {\n      return ev;\n    };\n  }\n  var isEnd = !!type.match(/End$/g);\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var childEvent = ev;\n    childEvent = eachEvent(childMoveable, ev);\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    result && callback && callback(childMoveable, ev, result, i);\n    if (isEnd) {\n      childMoveable.state.gestos = {};\n    }\n    return result;\n  });\n  return childs;\n}\nvar VERTICAL_NAMES = [\"left\", \"right\", \"center\"];\nvar HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"];\nvar VERTICAL_NAMES_MAP = {\n  start: \"left\",\n  end: \"right\",\n  center: \"center\"\n};\nvar HORIZONTAL_NAMES_MAP = {\n  start: \"top\",\n  end: \"bottom\",\n  center: \"middle\"\n};\nfunction hasGuidelines(moveable, ableName) {\n  var _a = moveable.props,\n    snappable = _a.snappable,\n    bounds = _a.bounds,\n    innerBounds = _a.innerBounds,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    snapGridWidth = _a.snapGridWidth,\n    snapGridHeight = _a.snapGridHeight,\n    _b = moveable.state,\n    guidelines = _b.guidelines,\n    enableSnap = _b.enableSnap;\n  if (!snappable || !enableSnap || ableName && snappable !== true && snappable.indexOf(ableName) < 0) {\n    return false;\n  }\n  if (snapGridWidth || snapGridHeight || bounds || innerBounds || guidelines && guidelines.length || verticalGuidelines && verticalGuidelines.length || horizontalGuidelines && horizontalGuidelines.length) {\n    return true;\n  }\n  return false;\n}\nfunction getSnapDirections(snapDirections) {\n  if (snapDirections === false) {\n    return {};\n  } else if (snapDirections === true || !snapDirections) {\n    return {\n      left: true,\n      right: true,\n      top: true,\n      bottom: true\n    };\n  }\n  return snapDirections;\n}\nfunction mapSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapDirections = getSnapDirections(snapDirections);\n  var nextSnapPoses = {};\n  for (var name in nextSnapDirections) {\n    if (name in snapPoses && nextSnapDirections[name]) {\n      nextSnapPoses[name] = snapPoses[name];\n    }\n  }\n  return nextSnapPoses;\n}\nfunction splitSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n  var horizontalNames = HORIZONTAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  var verticalNames = VERTICAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  return {\n    horizontal: horizontalNames.map(function (name) {\n      return nextSnapPoses[name];\n    }),\n    vertical: verticalNames.map(function (name) {\n      return nextSnapPoses[name];\n    })\n  };\n}\nfunction calculateContainerPos(rootMatrix, containerRect, n) {\n  var clientPos = calculatePosition(rootMatrix, [containerRect.clientLeft, containerRect.clientTop], n);\n  return [containerRect.left + clientPos[0], containerRect.top + clientPos[1]];\n}\nfunction solveLineConstants(_a) {\n  var point1 = _a[0],\n    point2 = _a[1];\n  var dx = point2[0] - point1[0];\n  var dy = point2[1] - point1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  } // b > 0\n  // ax + by + c = 0\n\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  if (!dx) {\n    // -x + 1 = 0\n    a = -1;\n    c = point1[0];\n  } else if (!dy) {\n    // y - 1 = 0\n    b = 1;\n    c = -point1[1];\n  } else {\n    // y = -a(x - x1) + y1\n    // ax + y + a * x1 - y1 = 0\n    a = -dy / dx;\n    b = 1;\n    c = a * point1[0] - point1[1];\n  }\n  return [a, b, c].map(function (v) {\n    return throttle(v, TINY_NUM$1);\n  });\n}\nfunction checkMoveableSnapPoses(moveable, posesX, posesY, customSnapThreshold) {\n  var props = moveable.props;\n  var snapThreshold = selectValue(customSnapThreshold, props.snapThreshold, 5);\n  return checkSnapPoses(moveable.state.guidelines, posesX, posesY, snapThreshold);\n}\nfunction checkSnapPoses(guidelines, posesX, posesY, snapThreshold) {\n  return {\n    vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n    horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold)\n  };\n}\nfunction checkSnapKeepRatio(moveable, startPos, endPos) {\n  var endX = endPos[0],\n    endY = endPos[1];\n  var startX = startPos[0],\n    startY = startPos[1];\n  var _a = minus(endPos, startPos),\n    dx = _a[0],\n    dy = _a[1];\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  dx = getTinyDist(dx);\n  dy = getTinyDist(dy);\n  var verticalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  }\n  var _b = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []),\n    verticalSnapInfo = _b.vertical,\n    horizontalSnapInfo = _b.horizontal;\n  verticalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isRight ? pos >= startX : pos <= startX;\n  });\n  horizontalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isBottom ? pos >= startY : pos <= startY;\n  });\n  verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n  horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n  var _c = getNearestSnapGuidelineInfo(verticalSnapInfo),\n    isVerticalSnap = _c.isSnap,\n    verticalGuideline = _c.guideline;\n  var _d = getNearestSnapGuidelineInfo(horizontalSnapInfo),\n    isHorizontalSnap = _d.isSnap,\n    horizontalGuideline = _d.guideline;\n  var horizontalPos = isHorizontalSnap ? horizontalGuideline.pos[1] : 0;\n  var verticalPos = isVerticalSnap ? verticalGuideline.pos[0] : 0;\n  if (dx === 0) {\n    if (isHorizontalSnap) {\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = horizontalGuideline.pos[1];\n      horizontalInfo.offset = endY - horizontalInfo.pos;\n    }\n  } else if (dy === 0) {\n    if (isVerticalSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = verticalPos;\n      verticalInfo.offset = endX - verticalPos;\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isSnap = false;\n    if (isVerticalSnap) {\n      x = verticalPos;\n      y = a * x + b;\n      isSnap = true;\n    } else if (isHorizontalSnap) {\n      y = horizontalPos;\n      x = (y - b) / a;\n      isSnap = true;\n    }\n    if (isSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkSnaps(moveable, rect, customSnapThreshold) {\n  var poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n  return checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal, customSnapThreshold);\n}\nfunction getNearestSnapGuidelineInfo(snapInfo) {\n  var isSnap = snapInfo.isSnap;\n  if (!isSnap) {\n    return {\n      isSnap: false,\n      offset: 0,\n      dist: -1,\n      pos: 0,\n      guideline: null\n    };\n  }\n  var posInfo = snapInfo.posInfos[0];\n  var guidelineInfo = posInfo.guidelineInfos[0];\n  var offset = guidelineInfo.offset;\n  var dist = guidelineInfo.dist;\n  var guideline = guidelineInfo.guideline;\n  return {\n    isSnap: isSnap,\n    offset: offset,\n    dist: dist,\n    pos: posInfo.pos,\n    guideline: guideline\n  };\n}\nfunction checkSnap(guidelines, targetType, targetPoses, snapThreshold) {\n  if (!guidelines || !guidelines.length) {\n    return {\n      isSnap: false,\n      index: -1,\n      posInfos: []\n    };\n  }\n  var isVertical = targetType === \"vertical\";\n  var posType = isVertical ? 0 : 1;\n  var snapPosInfos = targetPoses.map(function (targetPos, index) {\n    var guidelineInfos = guidelines.map(function (guideline) {\n      var pos = guideline.pos;\n      var offset = targetPos - pos[posType];\n      return {\n        offset: offset,\n        dist: Math.abs(offset),\n        guideline: guideline\n      };\n    }).filter(function (_a) {\n      var guideline = _a.guideline,\n        dist = _a.dist;\n      var type = guideline.type;\n      if (type !== targetType || dist > snapThreshold) {\n        return false;\n      }\n      return true;\n    }).sort(function (a, b) {\n      return a.dist - b.dist;\n    });\n    return {\n      pos: targetPos,\n      index: index,\n      guidelineInfos: guidelineInfos\n    };\n  }).filter(function (snapPosInfo) {\n    return snapPosInfo.guidelineInfos.length > 0;\n  }).sort(function (a, b) {\n    return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n  });\n  var isSnap = snapPosInfos.length > 0;\n  return {\n    isSnap: isSnap,\n    index: isSnap ? snapPosInfos[0].index : -1,\n    posInfos: snapPosInfos\n  };\n}\nfunction getSnapInfosByDirection(moveable, poses, snapDirection, snapThreshold) {\n  if (snapThreshold === void 0) {\n    snapThreshold = 1;\n  }\n  var nextPoses = [];\n  if (snapDirection[0] && snapDirection[1]) {\n    nextPoses = [snapDirection, [-snapDirection[0], snapDirection[1]], [snapDirection[0], -snapDirection[1]]].map(function (direction) {\n      return getPosByDirection(poses, direction);\n    });\n  } else if (!snapDirection[0] && !snapDirection[1]) {\n    var alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n    for (var i = 0; i < 4; ++i) {\n      nextPoses.push(alignPoses[i]);\n      nextPoses.push([(alignPoses[i][0] + alignPoses[i + 1][0]) / 2, (alignPoses[i][1] + alignPoses[i + 1][1]) / 2]);\n    }\n  } else {\n    if (moveable.props.keepRatio) {\n      nextPoses = [[-1, -1], [-1, 1], [1, -1], [1, 1], snapDirection].map(function (dir) {\n        return getPosByDirection(poses, dir);\n      });\n    } else {\n      nextPoses = getPosesByDirection(poses, snapDirection);\n      if (nextPoses.length > 1) {\n        nextPoses.push([(nextPoses[0][0] + nextPoses[1][0]) / 2, (nextPoses[0][1] + nextPoses[1][1]) / 2]);\n      }\n    }\n  }\n  return checkMoveableSnapPoses(moveable, nextPoses.map(function (pos) {\n    return pos[0];\n  }), nextPoses.map(function (pos) {\n    return pos[1];\n  }), snapThreshold);\n}\nfunction checkSnapBoundPriority(a, b) {\n  var aDist = Math.abs(a.offset);\n  var bDist = Math.abs(b.offset);\n  if (a.isBound && b.isBound) {\n    return bDist - aDist;\n  } else if (a.isBound) {\n    return -1;\n  } else if (b.isBound) {\n    return 1;\n  } else if (a.isSnap && b.isSnap) {\n    return bDist - aDist;\n  } else if (a.isSnap) {\n    return -1;\n  } else if (b.isSnap) {\n    return 1;\n  } else if (aDist < TINY_NUM) {\n    return 1;\n  } else if (bDist < TINY_NUM) {\n    return -1;\n  }\n  return aDist - bDist;\n}\nfunction getNearOffsetInfo(offsets, index) {\n  return offsets.slice().sort(function (a, b) {\n    var aSign = a.sign[index];\n    var bSign = b.sign[index];\n    var aOffset = a.offset[index];\n    var bOffset = b.offset[index]; // -1 The positions of a and b do not change.\n    // 1 The positions of a and b are reversed.\n\n    if (!aSign) {\n      return 1;\n    } else if (!bSign) {\n      return -1;\n    }\n    return checkSnapBoundPriority({\n      isBound: a.isBound,\n      isSnap: a.isSnap,\n      offset: aOffset\n    }, {\n      isBound: b.isBound,\n      isSnap: b.isSnap,\n      offset: bOffset\n    });\n  })[0];\n}\nfunction getCheckSnapDirections(direction, fixedDirection, keepRatio) {\n  var directions = []; // const fixedDirection = [-direction[0], -direction[1]];\n\n  if (keepRatio) {\n    if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n      directions.push([fixedDirection, [-1, -1]], [fixedDirection, [-1, 1]], [fixedDirection, [1, -1]], [fixedDirection, [1, 1]]);\n    } else {\n      directions.push([fixedDirection, [direction[0], -direction[1]]], [fixedDirection, [-direction[0], direction[1]]]);\n    }\n    directions.push([fixedDirection, direction]);\n  } else {\n    if (direction[0] && direction[1] || !direction[0] && !direction[1]) {\n      var endDirection_1 = direction[0] ? direction : [1, 1];\n      [1, -1].forEach(function (signX) {\n        [1, -1].forEach(function (signY) {\n          var nextDirection = [signX * endDirection_1[0], signY * endDirection_1[1]];\n          if (fixedDirection[0] === nextDirection[0] && fixedDirection[1] === nextDirection[1]) {\n            return;\n          }\n          directions.push([fixedDirection, nextDirection]);\n        });\n      });\n    } else if (direction[0]) {\n      var signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[fixedDirection[0], -1], [sign * direction[0], -1]], [[fixedDirection[0], 0], [sign * direction[0], 0]], [[fixedDirection[0], 1], [sign * direction[0], 1]]);\n      });\n    } else if (direction[1]) {\n      var signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[-1, fixedDirection[1]], [-1, sign * direction[1]]], [[0, fixedDirection[1]], [0, sign * direction[1]]], [[1, fixedDirection[1]], [1, sign * direction[1]]]);\n      });\n    }\n  }\n  return directions;\n}\nfunction isStartLine(dot, line) {\n  // l    o     => true\n  // o    l    => false\n  var cx = average([line[0][0], line[1][0]]);\n  var cy = average([line[0][1], line[1][1]]);\n  return {\n    vertical: cx <= dot[0],\n    horizontal: cy <= dot[1]\n  };\n}\nfunction hitTestLine(dot, _a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var test1;\n  var test2;\n  if (!dx) {\n    test1 = pos1[0];\n    test2 = dot[0];\n  } else if (!dy) {\n    test1 = pos1[1];\n    test2 = dot[1];\n  } else {\n    var a = dy / dx; // y = a * (x - pos1) + pos1\n\n    test1 = a * (dot[0] - pos1[0]) + pos1[1];\n    test2 = dot[1];\n  }\n  return test1 - test2;\n}\nfunction isSameStartLine(dots, line, centerSign, error) {\n  if (error === void 0) {\n    error = TINY_NUM;\n  }\n  return dots.every(function (dot) {\n    var value = hitTestLine(dot, line);\n    var sign = value <= 0;\n    return sign === centerSign || Math.abs(value) <= error;\n  });\n}\nfunction checkInnerBoundDot(pos, start, end, isStart, threshold) {\n  if (threshold === void 0) {\n    threshold = 0;\n  }\n  if (isStart && start - threshold <= pos || !isStart && pos <= end + threshold) {\n    // false 402 565 602 => 37 ([0, 37])\n    // true 400 524.9712603540036 600 => 124 ([124, 0])\n    // true 400 410 600 => 10 ([10, 0])\n    return {\n      isBound: true,\n      offset: isStart ? start - pos : end - pos\n    };\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction checkInnerBound(moveable, _a) {\n  var line = _a.line,\n    centerSign = _a.centerSign,\n    verticalSign = _a.verticalSign,\n    horizontalSign = _a.horizontalSign,\n    lineConstants = _a.lineConstants;\n  var bounds = moveable.props.innerBounds;\n  if (!bounds) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  if (isSameStartLine([[left, top], [left + width, top], [left, top + height], [left + width, top + height]], line, centerSign)) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  } // test vertical\n\n  var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n  var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign); // test horizontal\n\n  var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n  var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n  var isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n  var isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n  var isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n  var isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n  var verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n  var horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n  var offset = [0, 0];\n  var isBound = false;\n  var isAllBound = false;\n  if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n    offset = [verticalOffset, 0];\n    isBound = isVerticalBound;\n    isAllBound = isAllVerticalBound;\n  } else {\n    offset = [0, horizontalOffset];\n    isBound = isHorizontalBound;\n    isAllBound = isAllHorizontalBound;\n  }\n  return {\n    isAllBound: isAllBound,\n    isVerticalBound: isVerticalBound,\n    isHorizontalBound: isHorizontalBound,\n    isBound: isBound,\n    offset: offset\n  };\n}\nfunction checkLineBoundCollision(line, _a, boundLine, isStart, threshold, isRender) {\n  var a = _a[0],\n    b = _a[1];\n  var dot1 = line[0]; // const dot2 = line[1];\n\n  var boundDot1 = boundLine[0];\n  var boundDot2 = boundLine[1]; // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n  // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n  var dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n  var dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n  var hasDx = b;\n  var hasDy = a;\n  var slope = -a / b; // lineConstants\n  // ax + by + c = 0\n  // dx2 or dy2 is zero\n\n  if (!dx2) {\n    // vertical\n    // by + c = 0\n    if (isRender && !hasDy) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDx) {\n      // ax + by + c = 0\n      // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n      var y = slope * (boundDot1[0] - dot1[0]) + dot1[1]; // boundDot1[1] <= y  <= boundDot2[1]\n\n      return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n    } else {\n      // ax + c = 0\n      var offset = boundDot1[0] - dot1[0];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  } else if (!dy2) {\n    // horizontal\n    if (isRender && !hasDx) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDy) {\n      // y = a * (x - x1) + y1\n      // x = (y - y1) / a + x1\n      // const a = dy1 / dx1;\n      // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n      var x = (boundDot1[1] - dot1[1]) / slope + dot1[0]; // boundDot1[0] <= x && x <= boundDot2[0]\n\n      return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n    } else {\n      var offset = boundDot1[1] - dot1[1];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction getInnerBoundInfo(moveable, lineInfos, datas) {\n  return lineInfos.map(function (info) {\n    var _a = checkInnerBound(moveable, info),\n      isBound = _a.isBound,\n      offset = _a.offset,\n      isVerticalBound = _a.isVerticalBound,\n      isHorizontalBound = _a.isHorizontalBound;\n    var multiple = info.multiple;\n    var sizeOffset = getDragDist({\n      datas: datas,\n      distX: offset[0],\n      distY: offset[1]\n    }).map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isBound,\n      isVerticalBound: isVerticalBound,\n      isHorizontalBound: isHorizontalBound,\n      isSnap: false,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getInnerBoundDragInfo(moveable, poses, datas) {\n  var _a;\n  var lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(function (info) {\n    return __assign(__assign({}, info), {\n      multiple: info.multiple.map(function (dir) {\n        return Math.abs(dir) * 2;\n      })\n    });\n  });\n  var innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n  var widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n  var heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n  var verticalOffset = 0;\n  var horizontalOffset = 0;\n  var isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n  var isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n  if (isVerticalBound || isHorizontalBound) {\n    _a = getInverseDragDist({\n      datas: datas,\n      distX: -widthOffsetInfo.offset[0],\n      distY: -heightOffsetInfo.offset[1]\n    }), verticalOffset = _a[0], horizontalOffset = _a[1];\n  }\n  return {\n    vertical: {\n      isBound: isVerticalBound,\n      offset: verticalOffset\n    },\n    horizontal: {\n      isBound: isHorizontalBound,\n      offset: horizontalOffset\n    }\n  };\n}\nfunction getCheckSnapLineDirections(direction, keepRatio) {\n  var lineDirections = [];\n  var x = direction[0];\n  var y = direction[1];\n  if (x && y) {\n    lineDirections.push([[0, y * 2], direction, [-x, y]], [[x * 2, 0], direction, [x, -y]]);\n  } else if (x) {\n    // vertcal\n    lineDirections.push([[x * 2, 0], [x, 1], [x, -1]]);\n    if (keepRatio) {\n      lineDirections.push([[0, -1], [x, -1], [-x, -1]], [[0, 1], [x, 1], [-x, 1]]);\n    }\n  } else if (y) {\n    // horizontal\n    lineDirections.push([[0, y * 2], [1, y], [-1, y]]);\n    if (keepRatio) {\n      lineDirections.push([[-1, 0], [-1, y], [-1, -y]], [[1, 0], [1, y], [1, -y]]);\n    }\n  } else {\n    // [0, 0] to all direction\n    lineDirections.push([[-1, 0], [-1, -1], [-1, 1]], [[1, 0], [1, -1], [1, 1]], [[0, -1], [-1, -1], [1, -1]], [[0, 1], [-1, 1], [1, 1]]);\n  }\n  return lineDirections;\n}\nfunction getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio) {\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  var virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n  var center = getPosByDirection(virtualPoses, [0, 0]);\n  return getCheckSnapLineDirections(direction, keepRatio).map(function (_a) {\n    var multiple = _a[0],\n      dir1 = _a[1],\n      dir2 = _a[2];\n    var virtualLine = [getPosByDirection(virtualPoses, dir1), getPosByDirection(virtualPoses, dir2)];\n    var lineConstants = solveLineConstants(virtualLine);\n    var _b = isStartLine(center, virtualLine),\n      verticalSign = _b.vertical,\n      horizontalSign = _b.horizontal;\n    var centerSign = hitTestLine(center, virtualLine) <= 0;\n    return {\n      multiple: multiple,\n      centerSign: centerSign,\n      verticalSign: verticalSign,\n      horizontalSign: horizontalSign,\n      lineConstants: lineConstants,\n      line: [getPosByDirection(poses, dir1), getPosByDirection(poses, dir2)]\n    };\n  });\n}\nfunction isBoundRotate$1(relativePoses, boundDots, center, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].some(function (line) {\n    var centerSign = hitTestLine(center, line) <= 0;\n    return !isSameStartLine(boundDots, line, centerSign);\n  });\n}\nfunction getDistPointLine(_a) {\n  // x = 0, y = 0\n  // d = (ax + by + c) / root(a2 + b2)\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return Math.abs(pos1[0]);\n  }\n  if (!dy) {\n    return Math.abs(pos1[1]);\n  } // y - y1 = a(x - x1)\n  // 0 = ax -y + -a * x1 + y1\n\n  var a = dy / dx;\n  return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine(_a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return [pos1[0], 0];\n  }\n  if (!dy) {\n    return [0, pos1[1]];\n  }\n  var a = dy / dx; // y - y1 = a (x  - x1)\n  // y = ax - a * x1 + y1\n\n  var b = -a * pos1[0] + pos1[1]; // y = ax + b = -1/a x\n  // x = -b / (a + 1 / a)\n  // y = b / (1 + 1 / a^2)\n\n  return [-b / (a + 1 / a), b / (a * a + 1)];\n}\nfunction checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  var bounds = moveable.props.innerBounds;\n  var rad = rotation * Math.PI / 180;\n  if (!bounds) {\n    return [];\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var relativeLeft = left - origin[0];\n  var relativeRight = left + width - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = top + height - origin[1];\n  var dots = [[relativeLeft, relativeTop], [relativeRight, relativeTop], [relativeLeft, relativeBottom], [relativeRight, relativeBottom]];\n  var center = getPosByDirection(nextPoses, [0, 0]);\n  if (!isBoundRotate$1(nextPoses, dots, center, 0)) {\n    return [];\n  }\n  var result = [];\n  var dotInfos = dots.map(function (dot) {\n    return [getDistSize(dot), getRad([0, 0], dot)];\n  });\n  [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].forEach(function (line) {\n    var lineRad = getRad([0, 0], solveReverseLine(line));\n    var lineDist = getDistPointLine(line);\n    result.push.apply(result, dotInfos.filter(function (_a) {\n      var dotDist = _a[0];\n      return dotDist && lineDist <= dotDist;\n    }).map(function (_a) {\n      var dotDist = _a[0],\n        dotRad = _a[1];\n      var distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n      var nextRad1 = dotRad + distRad;\n      var nextRad2 = dotRad - distRad;\n      return [rad + nextRad1 - lineRad, rad + nextRad2 - lineRad];\n    }).reduce(function (prev, cur) {\n      prev.push.apply(prev, cur);\n      return prev;\n    }, []).filter(function (nextRad) {\n      return !isBoundRotate$1(prevPoses, dots, center, nextRad);\n    }).map(function (nextRad) {\n      return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n    }));\n  });\n  return result;\n}\nfunction checkInnerBoundPoses(moveable) {\n  var innerBounds = moveable.props.innerBounds;\n  if (!innerBounds) {\n    return {\n      vertical: [],\n      horizontal: []\n    };\n  }\n  var _a = moveable.getRect(),\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  var poses = [pos1, pos2, pos3, pos4];\n  var center = getPosByDirection(poses, [0, 0]);\n  var left = innerBounds.left,\n    top = innerBounds.top,\n    width = innerBounds.width,\n    height = innerBounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  var lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n  var horizontalPoses = [];\n  var verticalPoses = [];\n  var boundMap = {\n    top: false,\n    bottom: false,\n    left: false,\n    right: false\n  };\n  lineInfos.forEach(function (lineInfo) {\n    var line = lineInfo.line,\n      lineConstants = lineInfo.lineConstants;\n    var _a = isStartLine(center, line),\n      isHorizontalStart = _a.horizontal,\n      isVerticalStart = _a.vertical; // test vertical\n\n    var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n    var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true); // test horizontal\n\n    var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n    var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n    if (topBoundInfo.isBound && !boundMap.top) {\n      horizontalPoses.push(top);\n      boundMap.top = true;\n    }\n    if (bottomBoundInfo.isBound && !boundMap.bottom) {\n      horizontalPoses.push(top + height);\n      boundMap.bottom = true;\n    }\n    if (leftBoundInfo.isBound && !boundMap.left) {\n      verticalPoses.push(left);\n      boundMap.left = true;\n    }\n    if (rightBoundInfo.isBound && !boundMap.right) {\n      verticalPoses.push(left + width);\n      boundMap.right = true;\n    }\n  });\n  return {\n    horizontal: horizontalPoses,\n    vertical: verticalPoses\n  };\n}\nfunction checkBoundPoses(bounds, verticalPoses, horizontalPoses) {\n  var _a = bounds || {},\n    _b = _a.position,\n    position = _b === void 0 ? \"client\" : _b,\n    _c = _a.left,\n    left = _c === void 0 ? -Infinity : _c,\n    _d = _a.top,\n    top = _d === void 0 ? -Infinity : _d,\n    _e = _a.right,\n    right = _e === void 0 ? Infinity : _e,\n    _f = _a.bottom,\n    bottom = _f === void 0 ? Infinity : _f;\n  var nextBounds = {\n    position: position,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n  return {\n    vertical: checkBounds(nextBounds, verticalPoses, true),\n    horizontal: checkBounds(nextBounds, horizontalPoses, false)\n  };\n}\nfunction getBounds(moveable, externalBounds) {\n  var _a = moveable.state,\n    _b = _a.containerClientRect,\n    containerHeight = _b.clientHeight,\n    containerWidth = _b.clientWidth,\n    clientLeft = _b.clientLeft,\n    clientTop = _b.clientTop,\n    _c = _a.snapOffset,\n    snapOffsetLeft = _c.left,\n    snapOffsetTop = _c.top,\n    snapOffsetRight = _c.right,\n    snapOffsetBottom = _c.bottom;\n  var bounds = externalBounds || moveable.props.bounds || {};\n  var position = bounds.position || \"client\";\n  var isCSS = position === \"css\";\n  var _d = bounds.left,\n    left = _d === void 0 ? -Infinity : _d,\n    _e = bounds.top,\n    top = _e === void 0 ? -Infinity : _e;\n  var _f = bounds.right,\n    right = _f === void 0 ? isCSS ? -Infinity : Infinity : _f,\n    _g = bounds.bottom,\n    bottom = _g === void 0 ? isCSS ? -Infinity : Infinity : _g;\n  if (isCSS) {\n    right = containerWidth + snapOffsetRight - snapOffsetLeft - right;\n    bottom = containerHeight + snapOffsetBottom - snapOffsetTop - bottom;\n  }\n  return {\n    left: left + snapOffsetLeft - clientLeft,\n    right: right + snapOffsetLeft - clientLeft,\n    top: top + snapOffsetTop - clientTop,\n    bottom: bottom + snapOffsetTop - clientTop\n  };\n}\nfunction checkBoundKeepRatio(moveable, startPos, endPos) {\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var endX = endPos[0],\n    endY = endPos[1];\n  var _b = minus(endPos, startPos),\n    dx = _b[0],\n    dy = _b[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  var verticalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  } else if (dx === 0) {\n    if (isBottom) {\n      if (bottom < endY) {\n        horizontalInfo.pos = bottom;\n        horizontalInfo.offset = endY - bottom;\n      }\n    } else {\n      if (top > endY) {\n        horizontalInfo.pos = top;\n        horizontalInfo.offset = endY - top;\n      }\n    }\n  } else if (dy === 0) {\n    if (isRight) {\n      if (right < endX) {\n        verticalInfo.pos = right;\n        verticalInfo.offset = endX - right;\n      }\n    } else {\n      if (left > endX) {\n        verticalInfo.pos = left;\n        verticalInfo.offset = endX - left;\n      }\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isBound = false;\n    if (isRight && right <= endX) {\n      y = a * right + b;\n      x = right;\n      isBound = true;\n    } else if (!isRight && endX <= left) {\n      y = a * left + b;\n      x = left;\n      isBound = true;\n    }\n    if (isBound) {\n      if (y < top || y > bottom) {\n        isBound = false;\n      }\n    }\n    if (!isBound) {\n      if (isBottom && bottom <= endY) {\n        y = bottom;\n        x = (y - b) / a;\n        isBound = true;\n      } else if (!isBottom && endY <= top) {\n        y = top;\n        x = (y - b) / a;\n        isBound = true;\n      }\n    }\n    if (isBound) {\n      verticalInfo.isBound = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isBound = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkBounds(bounds, poses, isVertical) {\n  // 0   [100 - 200]  300\n  var startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n  var endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"]; // 450\n\n  var minPos = Math.min.apply(Math, poses);\n  var maxPos = Math.max.apply(Math, poses);\n  var boundInfos = [];\n  if (startBoundPos + 1 > minPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: minPos - startBoundPos,\n      pos: startBoundPos\n    });\n  }\n  if (endBoundPos - 1 < maxPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: maxPos - endBoundPos,\n      pos: endBoundPos\n    });\n  }\n  if (!boundInfos.length) {\n    boundInfos.push({\n      isBound: false,\n      offset: 0,\n      pos: 0\n    });\n  }\n  return boundInfos.sort(function (a, b) {\n    return Math.abs(b.offset) - Math.abs(a.offset);\n  });\n}\nfunction isBoundRotate(relativePoses, boundRect, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return nextPoses.some(function (pos) {\n    return pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1 || pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1 || pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1 || pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1;\n  });\n}\nfunction boundRotate(vec, boundPos, index) {\n  var r = getDistSize(vec);\n  var nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n  return [nextPos, -nextPos].sort(function (a, b) {\n    return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n  }).map(function (pos) {\n    return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n  });\n}\nfunction checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  if (!moveable.props.bounds) {\n    return [];\n  }\n  var rad = rotation * Math.PI / 180;\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var relativeLeft = left - origin[0];\n  var relativeRight = right - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = bottom - origin[1];\n  var boundRect = {\n    left: relativeLeft,\n    top: relativeTop,\n    right: relativeRight,\n    bottom: relativeBottom\n  };\n  if (!isBoundRotate(nextPoses, boundRect, 0)) {\n    return [];\n  }\n  var result = [];\n  [[relativeLeft, 0], [relativeRight, 0], [relativeTop, 1], [relativeBottom, 1]].forEach(function (_a) {\n    var boundPos = _a[0],\n      index = _a[1];\n    nextPoses.forEach(function (nextPos) {\n      var relativeRad1 = getRad([0, 0], nextPos);\n      result.push.apply(result, boundRotate(nextPos, boundPos, index).map(function (relativeRad2) {\n        return rad + relativeRad2 - relativeRad1;\n      }).filter(function (nextRad) {\n        return !isBoundRotate(prevPoses, boundRect, nextRad);\n      }).map(function (nextRad) {\n        return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n      }));\n    });\n  });\n  return result;\n}\nfunction renderGuideline(info, React) {\n  var _a;\n  var direction = info.direction,\n    classNames = info.classNames,\n    size = info.size,\n    pos = info.pos,\n    zoom = info.zoom,\n    key = info.key;\n  var isHorizontal = direction === \"horizontal\";\n  var scaleType = isHorizontal ? \"Y\" : \"X\"; // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n  return React.createElement(\"div\", {\n    key: key,\n    className: classNames.join(\" \"),\n    style: (_a = {}, _a[isHorizontal ? \"width\" : \"height\"] = \"\".concat(size), _a.transform = \"translate(\".concat(pos[0], \", \").concat(pos[1], \") translate\").concat(scaleType, \"(-50%) scale\").concat(scaleType, \"(\").concat(zoom, \")\"), _a)\n  });\n}\nfunction renderInnerGuideline(info, React) {\n  return renderGuideline(__assign(__assign({}, info), {\n    classNames: __spreadArray([prefix(\"line\", \"guideline\", info.direction)], info.classNames, true).filter(function (className) {\n      return className;\n    }),\n    size: info.size || \"\".concat(info.sizeValue, \"px\"),\n    pos: info.pos || info.posValue.map(function (v) {\n      return \"\".concat(throttle(v, 0.1), \"px\");\n    })\n  }), React);\n}\nfunction renderSnapPoses(moveable, direction, snapPoses, minPos, targetPos, size, index, React) {\n  var zoom = moveable.props.zoom;\n  return snapPoses.map(function (_a, i) {\n    var type = _a.type,\n      pos = _a.pos;\n    var renderPos = [0, 0];\n    renderPos[index] = minPos;\n    renderPos[index ? 0 : 1] = -targetPos + pos;\n    return renderInnerGuideline({\n      key: \"\".concat(direction, \"TargetGuideline\").concat(i),\n      classNames: [prefix(\"target\", \"bold\", type)],\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom,\n      direction: direction\n    }, React);\n  });\n}\nfunction renderGuidelines(moveable, type, guidelines, targetPos, targetRect, React) {\n  var _a = moveable.props,\n    zoom = _a.zoom,\n    isDisplayInnerSnapDigit = _a.isDisplayInnerSnapDigit;\n  var mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[mainNames.start];\n  var targetEnd = targetRect[mainNames.end];\n  return guidelines.filter(function (_a) {\n    var hide = _a.hide,\n      elementRect = _a.elementRect;\n    if (hide) {\n      return false;\n    }\n    if (isDisplayInnerSnapDigit && elementRect) {\n      // inner\n      var rect = elementRect.rect;\n      if (rect[mainNames.start] <= targetStart && targetEnd <= rect[mainNames.end]) {\n        return false;\n      }\n    }\n    return true;\n  }).map(function (guideline, i) {\n    var pos = guideline.pos,\n      size = guideline.size,\n      element = guideline.element,\n      className = guideline.className;\n    var renderPos = [-targetPos[0] + pos[0], -targetPos[1] + pos[1]];\n    return renderInnerGuideline({\n      key: \"\".concat(type, \"-default-guideline-\").concat(i),\n      classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n      direction: type,\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom\n    }, React);\n  });\n}\nfunction renderDigitLine(moveable, type, lineType, index, gap, renderPos, className, React) {\n  var _a;\n  var _b = moveable.props,\n    _c = _b.snapDigit,\n    snapDigit = _c === void 0 ? 0 : _c,\n    _d = _b.isDisplaySnapDigit,\n    isDisplaySnapDigit = _d === void 0 ? true : _d,\n    _e = _b.snapDistFormat,\n    snapDistFormat = _e === void 0 ? function (v, type) {\n      // Type can be used render different values.\n      if (type === 'vertical') {\n        return v;\n      }\n      return v;\n    } : _e,\n    zoom = _b.zoom;\n  var scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n  var sizeName = type === \"vertical\" ? \"height\" : \"width\";\n  var absGap = Math.abs(gap);\n  var snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n  return React.createElement(\"div\", {\n    key: \"\".concat(type, \"-\").concat(lineType, \"-guideline-\").concat(index),\n    className: prefix(\"guideline-group\", type),\n    style: (_a = {\n      left: \"\".concat(renderPos[0], \"px\"),\n      top: \"\".concat(renderPos[1], \"px\")\n    }, _a[sizeName] = \"\".concat(absGap, \"px\"), _a)\n  }, renderInnerGuideline({\n    direction: type,\n    classNames: [prefix(lineType), className],\n    size: \"100%\",\n    posValue: [0, 0],\n    sizeValue: absGap,\n    zoom: zoom\n  }, React), React.createElement(\"div\", {\n    className: prefix(\"size-value\", \"gap\"),\n    style: {\n      transform: \"translate\".concat(scaleType, \"(-50%) scale(\").concat(zoom, \")\")\n    }\n  }, snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"));\n}\nfunction groupByElementGuidelines(type, guidelines, targetRect, isDisplayInnerSnapDigit) {\n  var index = type === \"vertical\" ? 0 : 1;\n  var otherIndex = type === \"vertical\" ? 1 : 0;\n  var names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[names.start];\n  var targetEnd = targetRect[names.end];\n  return groupBy(guidelines, function (guideline) {\n    return guideline.pos[index];\n  }).map(function (nextGuidelines) {\n    var start = [];\n    var end = [];\n    var inner = [];\n    nextGuidelines.forEach(function (guideline) {\n      var _a, _b;\n      var element = guideline.element;\n      var rect = guideline.elementRect.rect;\n      if (rect[names.end] < targetStart) {\n        start.push(guideline);\n      } else if (targetEnd < rect[names.start]) {\n        end.push(guideline);\n      } else if (rect[names.start] <= targetStart && targetEnd <= rect[names.end] && isDisplayInnerSnapDigit) {\n        var pos = guideline.pos;\n        var elementRect1 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_a = {}, _a[names.end] = rect[names.start], _a))\n        };\n        var elementRect2 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_b = {}, _b[names.start] = rect[names.end], _b))\n        };\n        var nextPos1 = [0, 0];\n        var nextPos2 = [0, 0];\n        nextPos1[index] = pos[index];\n        nextPos1[otherIndex] = pos[otherIndex];\n        nextPos2[index] = pos[index];\n        nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n        start.push({\n          type: type,\n          pos: nextPos1,\n          size: 0,\n          elementRect: elementRect1\n        });\n        end.push({\n          type: type,\n          pos: nextPos2,\n          size: 0,\n          elementRect: elementRect2\n        }); // inner.push(guideline);\n      }\n    });\n\n    start.sort(function (a, b) {\n      return b.pos[otherIndex] - a.pos[otherIndex];\n    });\n    end.sort(function (a, b) {\n      return a.pos[otherIndex] - b.pos[otherIndex];\n    });\n    return {\n      total: nextGuidelines,\n      start: start,\n      end: end,\n      inner: inner\n    };\n  });\n}\nfunction renderDashedGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var isDisplayInnerSnapDigit = moveable.props.isDisplayInnerSnapDigit;\n  var rendered = [];\n  [\"vertical\", \"horizontal\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    });\n    var index = type === \"vertical\" ? 1 : 0;\n    var otherIndex = index ? 0 : 1;\n    var groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit);\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    groups.forEach(function (_a) {\n      var total = _a.total,\n        start = _a.start,\n        end = _a.end,\n        inner = _a.inner;\n      var sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start];\n      var prevRect = targetRect;\n      start.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = prevRect[mainNames.start] - nextRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.start] - targetStart - size;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      prevRect = targetRect;\n      end.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = nextRect[mainNames.start] - prevRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.end] - targetStart;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      inner.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size1 = targetStart - nextRect[mainNames.start];\n        var size2 = nextRect[mainNames.end] - targetEnd;\n        var renderPos1 = [0, 0];\n        var renderPos2 = [0, 0];\n        renderPos1[index] = targetPos[index] - size1;\n        renderPos1[otherIndex] = sidePos;\n        renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n        renderPos2[otherIndex] = sidePos;\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size1, renderPos1, guideline.className, React));\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size2, renderPos2, guideline.className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction renderGapGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var rendered = [];\n  [\"horizontal\", \"vertical\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    }).slice(0, 1);\n    var index = type === \"vertical\" ? 0 : 1;\n    var otherIndex = index ? 0 : 1;\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetSideStart = targetRect[sideNames.start];\n    var targetSideEnd = targetRect[sideNames.end];\n    nextGuidelines.forEach(function (_a) {\n      var gap = _a.gap,\n        gapRects = _a.gapRects;\n      var sideStartPos = Math.max.apply(Math, __spreadArray([targetSideStart], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.start];\n      }), false));\n      var sideEndPos = Math.min.apply(Math, __spreadArray([targetSideEnd], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.end];\n      }), false));\n      var sideCenterPos = (sideStartPos + sideEndPos) / 2;\n      if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd) / 2) {\n        return;\n      }\n      gapRects.forEach(function (_a) {\n        var rect = _a.rect,\n          className = _a.className;\n        var renderPos = [targetPos[0], targetPos[1]];\n        if (rect[mainNames.end] < targetStart) {\n          renderPos[index] += rect[mainNames.end] - targetStart;\n        } else if (targetEnd < rect[mainNames.start]) {\n          renderPos[index] += rect[mainNames.start] - targetStart - gap;\n        } else {\n          return;\n        }\n        renderPos[otherIndex] += sideCenterPos - targetSideStart;\n        rendered.push(renderDigitLine(moveable, index ? \"vertical\" : \"horizontal\", \"gap\", rendered.length, gap, renderPos, className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction solveEquation(pos1, pos2, snapOffset, isVertical) {\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  }\n  if (!dx) {\n    // y = 0 * x + b\n    // only horizontal\n    if (!isVertical) {\n      return [0, snapOffset];\n    }\n    return [0, 0];\n  }\n  if (!dy) {\n    // only vertical\n    if (isVertical) {\n      return [snapOffset, 0];\n    }\n    return [0, 0];\n  } // y = ax + b\n\n  var a = dy / dx;\n  var b = pos1[1] - a * pos1[0];\n  if (isVertical) {\n    // y = a * x + b\n    var y = a * (pos2[0] + snapOffset) + b;\n    return [snapOffset, y - pos2[1]];\n  } else {\n    // x = (y - b) / a\n    var x = (pos2[1] + snapOffset - b) / a;\n    return [x - pos2[0], snapOffset];\n  }\n}\nfunction solveNextOffset(pos1, pos2, offset, isVertical, datas) {\n  var sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n  if (!sizeOffset) {\n    return {\n      isOutside: false,\n      offset: [0, 0]\n    };\n  }\n  var size = getDist$1(pos1, pos2);\n  var dist1 = getDist$1(sizeOffset, pos1);\n  var dist2 = getDist$1(sizeOffset, pos2);\n  var isOutside = dist1 > size || dist2 > size;\n  var _a = getDragDist({\n      datas: datas,\n      distX: sizeOffset[0],\n      distY: sizeOffset[1]\n    }),\n    widthOffset = _a[0],\n    heightOffset = _a[1];\n  return {\n    offset: [widthOffset, heightOffset],\n    isOutside: isOutside\n  };\n}\nfunction getSnapBound(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return getNearestSnapGuidelineInfo(snapInfo).offset;\n  }\n  return 0;\n}\nfunction checkThrottleDragRotate(throttleDragRotate, _a, _b, _c, _d) {\n  var distX = _a[0],\n    distY = _a[1];\n  var isVerticalBound = _b[0],\n    isHorizontalBound = _b[1];\n  var isVerticalSnap = _c[0],\n    isHorizontalSnap = _c[1];\n  var verticalOffset = _d[0],\n    horizontalOffset = _d[1];\n  var offsetX = -verticalOffset;\n  var offsetY = -horizontalOffset;\n  if (throttleDragRotate && distX && distY) {\n    offsetX = 0;\n    offsetY = 0;\n    var adjustPoses = [];\n    if (isVerticalBound && isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalBound) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset]);\n    } else if (isVerticalSnap && isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalSnap) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset]);\n    }\n    if (adjustPoses.length) {\n      adjustPoses.sort(function (a, b) {\n        return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n      });\n      var adjustPos = adjustPoses[0];\n      if (adjustPos[0] && Math.abs(distX) > TINY_NUM$1) {\n        offsetX = -adjustPos[0];\n        offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n      } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM$1) {\n        var prevDistY = distY;\n        offsetY = -adjustPos[1];\n        offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n      }\n      if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n        if (Math.abs(offsetX) > TINY_NUM$1 && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n          var scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else if (Math.abs(offsetY) > TINY_NUM$1 && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n          var scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else {\n          offsetX = maxOffset(-verticalOffset, offsetX);\n          offsetY = maxOffset(-horizontalOffset, offsetY);\n        }\n      }\n    }\n  } else {\n    offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n    offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n  }\n  return [offsetX, offsetY];\n}\nfunction checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"draggable\")) {\n    return [{\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }, {\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }];\n  }\n  var poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n  var _a = getRect(poses),\n    left = _a.left,\n    right = _a.right,\n    top = _a.top,\n    bottom = _a.bottom;\n  var boundPoses = {\n    horizontal: poses.map(function (pos) {\n      return pos[1];\n    }),\n    vertical: poses.map(function (pos) {\n      return pos[0];\n    })\n  };\n  var snapDirections = getSnapDirections(moveable.props.snapDirections);\n  var snapPoses = splitSnapDirectionPoses(snapDirections, {\n    left: left,\n    right: right,\n    top: top,\n    bottom: bottom,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  });\n  var _b = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses),\n    verticalSnapBoundInfo = _b.vertical,\n    horizontalSnapBoundInfo = _b.horizontal;\n  var _c = getInnerBoundDragInfo(moveable, poses, datas),\n    verticalInnerBoundInfo = _c.vertical,\n    horizontalInnerBoundInfo = _c.horizontal;\n  var isVerticalSnap = verticalSnapBoundInfo.isSnap;\n  var isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n  var isVerticalBound = verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n  var isHorizontalBound = horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n  var verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n  var horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n  var _d = checkThrottleDragRotate(throttleDragRotate, [distX, distY], [isVerticalBound, isHorizontalBound], [isVerticalSnap, isHorizontalSnap], [verticalOffset, horizontalOffset]),\n    offsetX = _d[0],\n    offsetY = _d[1];\n  return [{\n    isBound: isVerticalBound,\n    isSnap: isVerticalSnap,\n    offset: offsetX\n  }, {\n    isBound: isHorizontalBound,\n    isSnap: isHorizontalSnap,\n    offset: offsetY\n  }];\n}\nfunction checkMoveableSnapBounds(moveable, isRequest, poses, boundPoses) {\n  if (boundPoses === void 0) {\n    boundPoses = poses;\n  }\n  var _a = checkBoundPoses(getBounds(moveable), boundPoses.vertical, boundPoses.horizontal),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false,\n        index: -1\n      },\n      vertical: {\n        isSnap: false,\n        index: -1\n      }\n    } : checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapBounds(guideines, bounds, posesX, posesY, snapThreshold) {\n  var _a = checkBoundPoses(bounds, posesX, posesY),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical; // options.isRequest ? {\n  //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n  //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n  // } :\n\n  var _b = checkSnapPoses(guideines, posesX, posesY, snapThreshold),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapRightLine(startPos, endPos, snapBoundInfo, keepRatio) {\n  var rad = getRad(startPos, endPos) / Math.PI * 180;\n  var _a = snapBoundInfo.vertical,\n    isVerticalBound = _a.isBound,\n    isVerticalSnap = _a.isSnap,\n    verticalDist = _a.dist,\n    _b = snapBoundInfo.horizontal,\n    isHorizontalBound = _b.isBound,\n    isHorizontalSnap = _b.isSnap,\n    horizontalDist = _b.dist;\n  var rad180 = rad % 180;\n  var isHorizontalLine = rad180 < 3 || rad180 > 177;\n  var isVerticalLine = rad180 > 87 && rad180 < 93;\n  if (horizontalDist < verticalDist) {\n    if (isVerticalBound || isVerticalSnap && !isVerticalLine && (!keepRatio || !isHorizontalLine)) {\n      return \"vertical\";\n    }\n  }\n  if (isHorizontalBound || isHorizontalSnap && !isHorizontalLine && (!keepRatio || !isVerticalLine)) {\n    return \"horizontal\";\n  }\n  return \"\";\n}\nfunction getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas) {\n  return directions.map(function (_a) {\n    var startDirection = _a[0],\n      endDirection = _a[1];\n    var otherStartPos = getPosByDirection(poses, startDirection);\n    var otherEndPos = getPosByDirection(poses, endDirection);\n    var snapBoundInfo = keepRatio ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos, isRequest) : checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [otherEndPos[0]],\n      horizontal: [otherEndPos[1]]\n    });\n    var _b = snapBoundInfo.horizontal,\n      // dist: otherHorizontalDist,\n      otherHorizontalOffset = _b.offset,\n      isOtherHorizontalBound = _b.isBound,\n      isOtherHorizontalSnap = _b.isSnap,\n      _c = snapBoundInfo.vertical,\n      // dist: otherVerticalDist,\n      otherVerticalOffset = _c.offset,\n      isOtherVerticalBound = _c.isBound,\n      isOtherVerticalSnap = _c.isSnap;\n    var multiple = minus(endDirection, startDirection);\n    if (!otherVerticalOffset && !otherHorizontalOffset) {\n      return {\n        isBound: isOtherVerticalBound || isOtherHorizontalBound,\n        isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n        sign: multiple,\n        offset: [0, 0]\n      };\n    }\n    var snapLine = checkSnapRightLine(otherStartPos, otherEndPos, snapBoundInfo, keepRatio);\n    if (!snapLine) {\n      return {\n        sign: multiple,\n        isBound: false,\n        isSnap: false,\n        offset: [0, 0]\n      };\n    }\n    var isVertical = snapLine === \"vertical\";\n    var sizeOffset = [0, 0];\n    if (!keepRatio && Math.abs(endDirection[0]) === 1 && Math.abs(endDirection[1]) === 1 && startDirection[0] !== endDirection[0] && startDirection[1] !== endDirection[1]) {\n      sizeOffset = getDragDist({\n        datas: datas,\n        distX: -otherVerticalOffset,\n        distY: -otherHorizontalOffset\n      });\n    } else {\n      sizeOffset = solveNextOffset(otherStartPos, otherEndPos, -(isVertical ? otherVerticalOffset : otherHorizontalOffset), isVertical, datas).offset;\n    }\n    sizeOffset = sizeOffset.map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n      isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getSnapBoundOffset(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return snapInfo.offset;\n  }\n  return 0;\n}\nfunction checkSnapBoundsKeepRatio(moveable, startPos, endPos, isRequest) {\n  var _a = checkBoundKeepRatio(moveable, startPos, endPos),\n    horizontalBoundInfo = _a.horizontal,\n    verticalBoundInfo = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false\n      },\n      vertical: {\n        isSnap: false\n      }\n    } : checkSnapKeepRatio(moveable, startPos, endPos),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n  var verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfo.isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      offset: horizontalOffset,\n      dist: horizontalDist\n    },\n    vertical: {\n      isBound: verticalBoundInfo.isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      offset: verticalOffset,\n      dist: verticalDist\n    }\n  };\n}\nfunction checkMaxBounds(moveable, poses, direction, fixedPosition, datas) {\n  var fixedDirection = [-direction[0], -direction[1]];\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var bounds = moveable.props.bounds;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  if (bounds) {\n    var directions = [[direction[0], -direction[1]], [-direction[0], direction[1]]];\n    var _b = bounds.left,\n      left_1 = _b === void 0 ? -Infinity : _b,\n      _c = bounds.top,\n      top_1 = _c === void 0 ? -Infinity : _c,\n      _d = bounds.right,\n      right_1 = _d === void 0 ? Infinity : _d,\n      _e = bounds.bottom,\n      bottom_1 = _e === void 0 ? Infinity : _e;\n    directions.forEach(function (otherDirection) {\n      var isCheckVertical = otherDirection[0] !== fixedDirection[0];\n      var isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n      var otherPos = getPosByDirection(poses, otherDirection);\n      var deg = getRad(fixedPosition, otherPos) * 360 / Math.PI;\n      if (isCheckHorizontal) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n          nextOtherPos[1] = fixedPosition[1];\n        }\n        var _a = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[1] < otherPos[1] ? bottom_1 : top_1) - otherPos[1], false, datas),\n          _b = _a.offset,\n          heightOffset = _b[1],\n          isHeightOutside = _a.isOutside;\n        if (!isNaN(heightOffset)) {\n          maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n        }\n      }\n      if (isCheckVertical) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n          nextOtherPos[0] = fixedPosition[0];\n        }\n        var _c = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[0] < otherPos[0] ? right_1 : left_1) - otherPos[0], true, datas),\n          widthOffset = _c.offset[0],\n          isWidthOutside = _c.isOutside;\n        if (!isNaN(widthOffset)) {\n          maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n        }\n      }\n    });\n  }\n  return {\n    maxWidth: maxWidth,\n    maxHeight: maxHeight\n  };\n}\nfunction getTotalGuidelines(moveable) {\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    hasFixed = state.hasFixed;\n  var overflow = containerClientRect.overflow,\n    containerHeight = containerClientRect.scrollHeight,\n    containerWidth = containerClientRect.scrollWidth,\n    containerClientHeight = containerClientRect.clientHeight,\n    containerClientWidth = containerClientRect.clientWidth,\n    clientLeft = containerClientRect.clientLeft,\n    clientTop = containerClientRect.clientTop;\n  var _a = moveable.props,\n    _b = _a.snapGap,\n    snapGap = _b === void 0 ? true : _b,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    _c = _a.snapThreshold,\n    snapThreshold = _c === void 0 ? 5 : _c,\n    _d = _a.snapGridWidth,\n    snapGridWidth = _d === void 0 ? 0 : _d,\n    _e = _a.snapGridHeight,\n    snapGridHeight = _e === void 0 ? 0 : _e,\n    _f = _a.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _f === void 0 ? Infinity : _f;\n  var _g = getRect(getAbsolutePosesByState(moveable.state)),\n    top = _g.top,\n    left = _g.left,\n    bottom = _g.bottom,\n    right = _g.right;\n  var targetRect = {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  };\n  var elementGuidelines = getElementGuidelines(moveable);\n  var totalGuidelines = __spreadArray([], elementGuidelines, true);\n  if (snapGap) {\n    totalGuidelines.push.apply(totalGuidelines, getGapGuidelines(moveable, targetRect, snapThreshold));\n  }\n  totalGuidelines.push.apply(totalGuidelines, getGridGuidelines(snapGridWidth, snapGridHeight, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop));\n  var snapOffset = __assign({}, state.snapOffset || {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  });\n  if (hasFixed) {\n    var left_1 = containerClientRect.left,\n      top_1 = containerClientRect.top;\n    snapOffset.left += left_1;\n    snapOffset.top += top_1;\n    snapOffset.right += left_1;\n    snapOffset.bottom += top_1;\n  }\n  totalGuidelines.push.apply(totalGuidelines, getDefaultGuidelines(horizontalGuidelines || false, verticalGuidelines || false, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop, snapOffset));\n  totalGuidelines = totalGuidelines.filter(function (_a) {\n    var element = _a.element,\n      elementRect = _a.elementRect,\n      type = _a.type;\n    if (!element || !elementRect) {\n      return true;\n    }\n    var rect = elementRect.rect;\n    return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n  });\n  return totalGuidelines;\n}\nfunction getGapGuidelines(moveable, targetRect, snapThreshold) {\n  var _a = moveable.props,\n    _b = _a.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _b === void 0 ? Infinity : _b,\n    _c = _a.maxSnapElementGapDistance,\n    maxSnapElementGapDistance = _c === void 0 ? Infinity : _c;\n  var elementRects = moveable.state.elementRects;\n  var gapGuidelines = [];\n  [[\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP], [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP]].forEach(function (_a) {\n    var type = _a[0],\n      mainNames = _a[1],\n      sideNames = _a[2];\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetCenter = targetRect[mainNames.center];\n    var targetStart2 = targetRect[sideNames.start];\n    var targetEnd2 = targetRect[sideNames.end]; // element : moveable\n\n    function getDist(elementRect) {\n      var rect = elementRect.rect;\n      if (rect[mainNames.end] < targetStart + snapThreshold) {\n        return targetStart - rect[mainNames.end];\n      } else if (targetEnd - snapThreshold < rect[mainNames.start]) {\n        return rect[mainNames.start] - targetEnd;\n      } else {\n        return -1;\n      }\n    }\n    var nextElementRects = elementRects.filter(function (elementRect) {\n      var rect = elementRect.rect;\n      if (rect[sideNames.start] > targetEnd2 || rect[sideNames.end] < targetStart2) {\n        return false;\n      }\n      return getDist(elementRect) > 0;\n    }).sort(function (a, b) {\n      return getDist(a) - getDist(b);\n    });\n    var groups = [];\n    nextElementRects.forEach(function (snapRect1) {\n      nextElementRects.forEach(function (snapRect2) {\n        if (snapRect1 === snapRect2) {\n          return;\n        }\n        var rect1 = snapRect1.rect;\n        var rect2 = snapRect2.rect;\n        var rect1Start = rect1[sideNames.start];\n        var rect1End = rect1[sideNames.end];\n        var rect2Start = rect2[sideNames.start];\n        var rect2End = rect2[sideNames.end];\n        if (rect1Start > rect2End || rect2Start > rect1End) {\n          return;\n        }\n        groups.push([snapRect1, snapRect2]);\n      });\n    });\n    groups.forEach(function (_a) {\n      var snapRect1 = _a[0],\n        snapRect2 = _a[1];\n      var rect1 = snapRect1.rect;\n      var rect2 = snapRect2.rect;\n      var rect1Start = rect1[mainNames.start];\n      var rect1End = rect1[mainNames.end];\n      var rect2Start = rect2[mainNames.start];\n      var rect2End = rect2[mainNames.end];\n      var gap = 0;\n      var pos = 0;\n      var isStart = false;\n      var isCenter = false;\n      var isEnd = false;\n      if (rect1End <= targetStart && targetEnd <= rect2Start) {\n        // (l)element1(r) : (l)target(r) : (l)element2(r)\n        isCenter = true;\n        gap = (rect2Start - rect1End - (targetEnd - targetStart)) / 2;\n        pos = rect1End + gap + (targetEnd - targetStart) / 2;\n        if (Math.abs(pos - targetCenter) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n        // (l)element1(r) : (l)element2(r) : (l)target\n        isStart = true;\n        gap = rect2Start - rect1End;\n        pos = rect2End + gap;\n        if (Math.abs(pos - targetStart) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n        // target(r) : (l)element1(r) : (l)element2(r)\n        isEnd = true;\n        gap = rect2Start - rect1End;\n        pos = rect1Start - gap;\n        if (Math.abs(pos - targetEnd) > snapThreshold) {\n          return;\n        }\n      } else {\n        return;\n      }\n      if (!gap) {\n        return;\n      }\n      if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n        return;\n      }\n      if (gap > maxSnapElementGapDistance) {\n        return;\n      }\n      gapGuidelines.push({\n        type: type,\n        pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n        element: snapRect2.element,\n        size: 0,\n        className: snapRect2.className,\n        isStart: isStart,\n        isCenter: isCenter,\n        isEnd: isEnd,\n        gap: gap,\n        hide: true,\n        gapRects: [snapRect1, snapRect2]\n      });\n    });\n  });\n  return gapGuidelines;\n}\nfunction getGridGuidelines(snapGridWidth, snapGridHeight, containerWidth, containerHeight, clientLeft, clientTop) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  var guidelines = [];\n  if (snapGridHeight) {\n    for (var pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n      guidelines.push({\n        type: \"horizontal\",\n        pos: [0, throttle(pos - clientTop, 0.1)],\n        size: containerWidth,\n        hide: true\n      });\n    }\n  }\n  if (snapGridWidth) {\n    for (var pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n      guidelines.push({\n        type: \"vertical\",\n        pos: [throttle(pos - clientLeft, 0.1), 0],\n        size: containerHeight,\n        hide: true\n      });\n    }\n  }\n  return guidelines;\n}\nfunction checkBetweenRects(rect1, rect2, type, distance) {\n  if (type === \"horizontal\") {\n    return Math.abs(rect1.right - rect2.left) <= distance || Math.abs(rect1.left - rect2.right) <= distance || rect1.left <= rect2.right && rect2.left <= rect1.right;\n  } else if (type === \"vertical\") {\n    return Math.abs(rect1.bottom - rect2.top) <= distance || Math.abs(rect1.top - rect2.bottom) <= distance || rect1.top <= rect2.bottom && rect2.top <= rect1.bottom;\n  }\n  return true;\n}\nfunction getElementGuidelines(moveable) {\n  var state = moveable.state;\n  var _a = moveable.props.elementGuidelines,\n    elementGuidelines = _a === void 0 ? [] : _a;\n  if (!elementGuidelines.length) {\n    state.elementRects = [];\n    return [];\n  }\n  var prevValues = (state.elementRects || []).filter(function (snapRect) {\n    return !snapRect.refresh;\n  });\n  var nextElementGuidelines = elementGuidelines.map(function (el) {\n    if (isObject(el) && \"element\" in el) {\n      return __assign(__assign({}, el), {\n        element: getRefTarget(el.element, true)\n      });\n    }\n    return {\n      element: getRefTarget(el, true)\n    };\n  }).filter(function (value) {\n    return value.element;\n  });\n  var _b = diff(prevValues.map(function (v) {\n      return v.element;\n    }), nextElementGuidelines.map(function (v) {\n      return v.element;\n    })),\n    maintained = _b.maintained,\n    added = _b.added;\n  var nextValues = [];\n  maintained.forEach(function (_a) {\n    var prevIndex = _a[0],\n      nextIndex = _a[1];\n    nextValues[nextIndex] = prevValues[prevIndex];\n  });\n  getSnapElementRects(moveable, added.map(function (index) {\n    return nextElementGuidelines[index];\n  })).map(function (rect, i) {\n    nextValues[added[i]] = rect;\n  });\n  state.elementRects = nextValues;\n  var elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n  var nextGuidelines = [];\n  nextValues.forEach(function (snapRect) {\n    var element = snapRect.element,\n      _a = snapRect.top,\n      topValue = _a === void 0 ? elementSnapDirections.top : _a,\n      _b = snapRect.left,\n      leftValue = _b === void 0 ? elementSnapDirections.left : _b,\n      _c = snapRect.right,\n      rightValue = _c === void 0 ? elementSnapDirections.right : _c,\n      _d = snapRect.bottom,\n      bottomValue = _d === void 0 ? elementSnapDirections.bottom : _d,\n      _e = snapRect.center,\n      centerValue = _e === void 0 ? elementSnapDirections.center : _e,\n      _f = snapRect.middle,\n      middleValue = _f === void 0 ? elementSnapDirections.middle : _f,\n      className = snapRect.className,\n      rect = snapRect.rect;\n    var _g = splitSnapDirectionPoses({\n        top: topValue,\n        right: rightValue,\n        left: leftValue,\n        bottom: bottomValue,\n        center: centerValue,\n        middle: middleValue\n      }, rect),\n      horizontal = _g.horizontal,\n      vertical = _g.vertical;\n    var rectTop = rect.top;\n    var rectLeft = rect.left;\n    var width = rect.right - rectLeft;\n    var height = rect.bottom - rectTop;\n    var sizes = [width, height];\n    vertical.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"vertical\",\n        element: element,\n        pos: [throttle(pos, 0.1), rectTop],\n        size: height,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n    horizontal.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"horizontal\",\n        element: element,\n        pos: [rectLeft, throttle(pos, 0.1)],\n        size: width,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n  });\n  return nextGuidelines;\n}\nfunction getDefaultGuidelines(horizontalGuidelines, verticalGuidelines, width, height, clientLeft, clientTop, snapOffset) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  if (snapOffset === void 0) {\n    snapOffset = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n  var guidelines = [];\n  var snapOffsetLeft = snapOffset.left,\n    snapOffsetTop = snapOffset.top,\n    snapOffsetBottom = snapOffset.bottom,\n    snapOffsetRight = snapOffset.right;\n  var snapWidth = width + snapOffsetRight - snapOffsetLeft;\n  var snapHeight = height + snapOffsetBottom - snapOffsetTop;\n  horizontalGuidelines && horizontalGuidelines.forEach(function (posInfo) {\n    var nextPosInfo = isObject(posInfo) ? posInfo : {\n      pos: posInfo\n    };\n    guidelines.push({\n      type: \"horizontal\",\n      pos: [snapOffsetLeft, throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1)],\n      size: snapWidth,\n      className: nextPosInfo.className\n    });\n  });\n  verticalGuidelines && verticalGuidelines.forEach(function (posInfo) {\n    var nextPosInfo = isObject(posInfo) ? posInfo : {\n      pos: posInfo\n    };\n    guidelines.push({\n      type: \"vertical\",\n      pos: [throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1), snapOffsetTop],\n      size: snapHeight,\n      className: nextPosInfo.className\n    });\n  });\n  return guidelines;\n}\nfunction getSnapElementRects(moveable, values) {\n  if (!values.length) {\n    return [];\n  }\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    _a = state.targetClientRect,\n    clientTop = _a.top,\n    clientLeft = _a.left,\n    rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var _b = calculateContainerPos(rootMatrix, containerClientRect, n),\n    containerLeft = _b[0],\n    containerTop = _b[1];\n  var poses = getAbsolutePosesByState(state);\n  var _c = getMinMaxs(poses),\n    targetLeft = _c.minX,\n    targetTop = _c.minY;\n  var _d = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [clientLeft - containerLeft, clientTop - containerTop], n)).map(function (pos) {\n      return roundSign(pos);\n    }),\n    distLeft = _d[0],\n    distTop = _d[1];\n  return values.map(function (value) {\n    var rect = value.element.getBoundingClientRect();\n    var left = rect.left - containerLeft;\n    var top = rect.top - containerTop;\n    var bottom = top + rect.height;\n    var right = left + rect.width;\n    var _a = calculateInversePosition(rootMatrix, [left, top], n),\n      elementLeft = _a[0],\n      elementTop = _a[1];\n    var _b = calculateInversePosition(rootMatrix, [right, bottom], n),\n      elementRight = _b[0],\n      elementBottom = _b[1];\n    return __assign(__assign({}, value), {\n      rect: {\n        left: elementLeft + distLeft,\n        right: elementRight + distLeft,\n        top: elementTop + distTop,\n        bottom: elementBottom + distTop,\n        center: (elementLeft + elementRight) / 2 + distLeft,\n        middle: (elementTop + elementBottom) / 2 + distTop\n      }\n    });\n  });\n}\nfunction checkSnapInfo(moveable) {\n  var state = moveable.state;\n  var container = state.container;\n  var snapContainer = moveable.props.snapContainer || container;\n  if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n    return false;\n  }\n  var containerClientRect = state.containerClientRect;\n  var snapOffset = {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  };\n  if (container !== snapContainer) {\n    var snapContainerTarget = getRefTarget(snapContainer, true);\n    if (snapContainerTarget) {\n      var snapContainerRect = getClientRect(snapContainerTarget);\n      var offset1 = getDragDistByState(state, [snapContainerRect.left - containerClientRect.left, snapContainerRect.top - containerClientRect.top]);\n      var offset2 = getDragDistByState(state, [snapContainerRect.right - containerClientRect.right, snapContainerRect.bottom - containerClientRect.bottom]);\n      snapOffset.left = throttle(offset1[0], 0.00001);\n      snapOffset.top = throttle(offset1[1], 0.00001);\n      snapOffset.right = throttle(offset2[0], 0.00001);\n      snapOffset.bottom = throttle(offset2[1], 0.00001);\n    }\n  }\n  state.snapContainer = snapContainer;\n  state.snapOffset = snapOffset;\n  state.guidelines = getTotalGuidelines(moveable);\n  state.enableSnap = true;\n  return true;\n}\nfunction getNextFixedPoses(matrix, width, height, fixedDirection, fixedPos, is3d) {\n  var nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n  var nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n  return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\nfunction getSizeOffsetInfo(moveable, poses, direction, keepRatio, isRequest, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n  var innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n  var offsets = __spreadArray(__spreadArray([], getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas), true), getInnerBoundInfo(moveable, innerBoundLineInfos, datas), true);\n  var widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n  var heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n  return {\n    width: {\n      isBound: widthOffsetInfo.isBound,\n      offset: widthOffsetInfo.offset[0]\n    },\n    height: {\n      isBound: heightOffsetInfo.isBound,\n      offset: heightOffsetInfo.offset[1]\n    }\n  };\n}\nfunction recheckSizeByTwoDirection(moveable, poses, width, height, maxWidth, maxHeight, direction, isRequest, datas) {\n  var snapPos = getPosByDirection(poses, direction);\n  var _a = checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [snapPos[0]],\n      horizontal: [snapPos[1]]\n    }),\n    horizontalOffset = _a.horizontal.offset,\n    verticalOffset = _a.vertical.offset;\n  if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n    var _b = getDragDist({\n        datas: datas,\n        distX: -verticalOffset,\n        distY: -horizontalOffset\n      }),\n      nextWidthOffset = _b[0],\n      nextHeightOffset = _b[1];\n    var nextWidth = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n    var nextHeight = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n    return [nextWidth - width, nextHeight - height];\n  }\n  return [0, 0];\n}\nfunction checkSizeDist(moveable, getNextPoses, width, height, direction, fixedPosition, isRequest, datas) {\n  var poses = getAbsolutePosesByState(moveable.state);\n  var keepRatio = moveable.props.keepRatio;\n  var widthOffset = 0;\n  var heightOffset = 0;\n  for (var i = 0; i < 2; ++i) {\n    var nextPoses = getNextPoses(widthOffset, heightOffset);\n    var _a = getSizeOffsetInfo(moveable, nextPoses, direction, keepRatio, isRequest, datas),\n      widthOffsetInfo = _a.width,\n      heightOffsetInfo = _a.height;\n    var isWidthBound = widthOffsetInfo.isBound;\n    var isHeightBound = heightOffsetInfo.isBound;\n    var nextWidthOffset = widthOffsetInfo.offset;\n    var nextHeightOffset = heightOffsetInfo.offset;\n    if (i === 1) {\n      if (!isWidthBound) {\n        nextWidthOffset = 0;\n      }\n      if (!isHeightBound) {\n        nextHeightOffset = 0;\n      }\n    }\n    if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n      return [0, 0];\n    }\n    if (keepRatio) {\n      var widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n      var heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n      var isGetWidthOffset = isWidthBound && isHeightBound ? widthDist < heightDist : isHeightBound || !isWidthBound && widthDist < heightDist;\n      if (isGetWidthOffset) {\n        // width : height = ? : heightOffset\n        nextWidthOffset = width * nextHeightOffset / height;\n      } else {\n        // width : height = widthOffset : ?\n        nextHeightOffset = height * nextWidthOffset / width;\n      }\n    }\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  if (direction[0] && direction[1]) {\n    var _b = checkMaxBounds(moveable, poses, direction, fixedPosition, datas),\n      maxWidth = _b.maxWidth,\n      maxHeight = _b.maxHeight;\n    var _c = recheckSizeByTwoDirection(moveable, getNextPoses(widthOffset, heightOffset).map(function (pos) {\n        return pos.map(function (p) {\n          return throttle(p, FLOAT_POINT_NUM);\n        });\n      }), width + widthOffset, height + heightOffset, maxWidth, maxHeight, direction, isRequest, datas),\n      nextWidthOffset = _c[0],\n      nextHeightOffset = _c[1];\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  return [widthOffset, heightOffset];\n}\nfunction checkSnapRotate(moveable, rect, rotation) {\n  if (!hasGuidelines(moveable, \"rotatable\")) {\n    return {\n      isSnap: false,\n      rotation: rotation\n    };\n  }\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4,\n    origin2 = rect.origin;\n  var rad = rotation * Math.PI / 180;\n  var prevPoses = [pos1, pos2, pos3, pos4].map(function (pos) {\n    return minus(pos, origin2);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  }); // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n  // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n\n  var result = __spreadArray(__spreadArray([], checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation), true), checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin2, rotation), true);\n  result.sort(function (a, b) {\n    return Math.abs(a - rotation) - Math.abs(b - rotation);\n  });\n  var isSnap = result.length > 0;\n  return {\n    isSnap: isSnap,\n    rotation: isSnap ? result[0] : rotation\n  };\n}\nfunction checkSnapResize(moveable, width, height, direction, fixedPosition, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"resizable\")) {\n    return [0, 0];\n  }\n  var fixedDirection = datas.fixedDirection,\n    nextAllMatrix = datas.nextAllMatrix;\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  return checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(nextAllMatrix || allMatrix, width + widthOffset, height + heightOffset, fixedDirection, fixedPosition, is3d);\n  }, width, height, direction, fixedPosition, isRequest, datas);\n}\nfunction checkSnapScale(moveable, scale, direction, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"scalable\")) {\n    return [0, 0];\n  }\n  var startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight,\n    fixedPosition = datas.fixedPosition,\n    fixedDirection = datas.fixedDirection,\n    is3d = datas.is3d;\n  var sizeDist = checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(scaleMatrix(datas, plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight])), startOffsetWidth, startOffsetHeight, fixedDirection, fixedPosition, is3d);\n  }, startOffsetWidth, startOffsetHeight, direction, fixedPosition, isRequest, datas);\n  return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\nfunction startCheckSnapDrag(moveable, datas) {\n  datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\nfunction getSnapGuidelines(posInfos) {\n  var guidelines = [];\n  posInfos.forEach(function (posInfo) {\n    posInfo.guidelineInfos.forEach(function (_a) {\n      var guideline = _a.guideline;\n      if (guidelines.indexOf(guideline) > -1) {\n        return;\n      }\n      guidelines.push(guideline);\n    });\n  });\n  return guidelines;\n}\nfunction addBoundGuidelines(moveable, verticalPoses, horizontalPoses, verticalSnapPoses, horizontalSnapPoses, externalBounds) {\n  var _a = checkBoundPoses(getBounds(moveable, externalBounds), verticalPoses, horizontalPoses),\n    verticalBoundInfos = _a.vertical,\n    horizontalBoundInfos = _a.horizontal;\n  verticalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      verticalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  horizontalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      horizontalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  var _b = checkInnerBoundPoses(moveable),\n    verticalInnerBoundPoses = _b.vertical,\n    horizontalInnerBoundPoses = _b.horizontal;\n  verticalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(verticalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    verticalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n  horizontalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(horizontalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    horizontalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n}\nvar directionCondition$2 = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\n\nvar Snappable = {\n  name: \"snappable\",\n  dragRelation: \"strong\",\n  props: {\n    snappable: [Boolean, Array],\n    snapContainer: Object,\n    snapDirections: [Boolean, Object],\n    elementSnapDirections: [Boolean, Object],\n    snapGap: Boolean,\n    snapGridWidth: Number,\n    snapGridHeight: Number,\n    isDisplaySnapDigit: Boolean,\n    isDisplayInnerSnapDigit: Boolean,\n    snapDigit: Number,\n    snapThreshold: Number,\n    snapRenderThreshold: Number,\n    horizontalGuidelines: Array,\n    verticalGuidelines: Array,\n    elementGuidelines: Array,\n    bounds: Object,\n    innerBounds: Object,\n    snapDistFormat: Function,\n    maxSnapElementGuidelineDistance: Number,\n    maxSnapElementGapDistance: Number\n  },\n  events: {\n    onSnap: \"snap\"\n  },\n  css: [\":host {\\n    --bounds-color: #d66;\\n}\\n.guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\\n.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\\n.guideline-group {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.guideline-group .size-value {\\n    position: absolute;\\n    color: #f55;\\n    font-size: 12px;\\n    font-weight: bold;\\n}\\n.guideline-group.horizontal .size-value {\\n    transform-origin: 50% 100%;\\n    transform: translateX(-50%);\\n    left: 50%;\\n    bottom: 5px;\\n}\\n.guideline-group.vertical .size-value {\\n    transform-origin: 0% 50%;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    left: 5px;\\n}\\n.guideline.gap {\\n    background: #f55;\\n}\\n.size-value.gap {\\n    color: #f55;\\n}\\n\"],\n  render: function (moveable, React) {\n    var state = moveable.state;\n    var targetTop = state.top,\n      targetLeft = state.left,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      snapRenderInfo = state.snapRenderInfo;\n    var _a = moveable.props.snapRenderThreshold,\n      snapRenderThreshold = _a === void 0 ? 1 : _a;\n    if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n      return [];\n    }\n    state.guidelines = getTotalGuidelines(moveable);\n    var minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n    var minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n    var externalPoses = snapRenderInfo.externalPoses || [];\n    var poses = getAbsolutePosesByState(moveable.state);\n    var verticalSnapPoses = [];\n    var horizontalSnapPoses = [];\n    var verticalGuidelines = [];\n    var horizontalGuidelines = [];\n    var snapInfos = [];\n    var _b = getRect(poses),\n      width = _b.width,\n      height = _b.height,\n      top = _b.top,\n      left = _b.left,\n      bottom = _b.bottom,\n      right = _b.right;\n    var targetRect = {\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom,\n      center: (left + right) / 2,\n      middle: (top + bottom) / 2\n    };\n    var hasExternalPoses = externalPoses.length > 0;\n    var externalRect = hasExternalPoses ? getRect(externalPoses) : {};\n    if (!snapRenderInfo.request) {\n      if (snapRenderInfo.direction) {\n        snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction, snapRenderThreshold));\n      }\n      if (snapRenderInfo.snap) {\n        var rect = getRect(poses);\n        if (snapRenderInfo.center) {\n          rect.middle = (rect.top + rect.bottom) / 2;\n          rect.center = (rect.left + rect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n      }\n      if (hasExternalPoses) {\n        if (snapRenderInfo.center) {\n          externalRect.middle = (externalRect.top + externalRect.bottom) / 2;\n          externalRect.center = (externalRect.left + externalRect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n      }\n      snapInfos.forEach(function (snapInfo) {\n        var verticalPosInfos = snapInfo.vertical.posInfos,\n          horizontalPosInfos = snapInfo.horizontal.posInfos;\n        verticalSnapPoses.push.apply(verticalSnapPoses, verticalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        horizontalSnapPoses.push.apply(horizontalSnapPoses, horizontalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        verticalGuidelines.push.apply(verticalGuidelines, getSnapGuidelines(verticalPosInfos));\n        horizontalGuidelines.push.apply(horizontalGuidelines, getSnapGuidelines(horizontalPosInfos));\n      });\n    }\n    addBoundGuidelines(moveable, [left, right], [top, bottom], verticalSnapPoses, horizontalSnapPoses);\n    if (hasExternalPoses) {\n      addBoundGuidelines(moveable, [externalRect.left, externalRect.right], [externalRect.top, externalRect.bottom], verticalSnapPoses, horizontalSnapPoses, snapRenderInfo.externalBounds);\n    }\n    var allGuidelines = __spreadArray(__spreadArray([], verticalGuidelines, true), horizontalGuidelines, true);\n    var elementGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.element && !guideline.gapRects;\n    });\n    var gapGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.gapRects;\n    }).sort(function (a, b) {\n      return a.gap - b.gap;\n    });\n    triggerEvent(moveable, \"onSnap\", {\n      guidelines: allGuidelines.filter(function (_a) {\n        var element = _a.element;\n        return !element;\n      }),\n      elements: elementGuidelines,\n      gaps: gapGuidelines\n    }, true);\n    return __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], renderDashedGuidelines(moveable, elementGuidelines, [minLeft, minTop], targetRect, React), true), renderGapGuidelines(moveable, gapGuidelines, [minLeft, minTop], targetRect, React), true), renderGuidelines(moveable, \"horizontal\", horizontalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderGuidelines(moveable, \"vertical\", verticalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderSnapPoses(moveable, \"horizontal\", horizontalSnapPoses, minLeft, targetTop, width, 0, React), true), renderSnapPoses(moveable, \"vertical\", verticalSnapPoses, minTop, targetLeft, height, 1, React), true);\n  },\n  dragStart: function (moveable, e) {\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      snap: true,\n      center: true\n    };\n    checkSnapInfo(moveable);\n  },\n  drag: function (moveable) {\n    var state = moveable.state;\n    if (!checkSnapInfo(moveable)) {\n      state.guidelines = getTotalGuidelines(moveable);\n    }\n    if (state.snapRenderInfo) {\n      state.snapRenderInfo.render = true;\n    }\n  },\n  pinchStart: function (moveable) {\n    this.unset(moveable);\n  },\n  dragEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (directionCondition$2(moveable, e) || dragControlCondition(moveable, e)) {\n      return true;\n    }\n    if (!e.isRequest && e.inputEvent) {\n      return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n    }\n  },\n  dragControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragGroupControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  unset: function (moveable) {\n    var state = moveable.state;\n    state.enableSnap = false;\n    state.guidelines = [];\n    state.snapRenderInfo = null;\n    state.elementRects = [];\n  }\n};\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n\nfunction renderDirectionControlsByInfos(moveable, ableName, renderDirections, React) {\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var zoom = getProps(moveable.props, ableName).zoom;\n  var sign = direction > 0 ? 1 : -1;\n  var degRotation = rotationRad / Math.PI * 180;\n  var directionMap = {};\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var renderDirectionMap = renderState.renderDirectionMap;\n  renderDirections.forEach(function (_a) {\n    var dir = _a.dir;\n    directionMap[dir] = true;\n  });\n  return renderDirections.map(function (_a) {\n    var data = _a.data,\n      classNames = _a.classNames,\n      dir = _a.dir;\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes || !directionMap[dir]) {\n      return null;\n    }\n    renderDirectionMap[dir] = true;\n    var directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    var dataAttrs = {};\n    getKeys(data).forEach(function (name) {\n      dataAttrs[\"data-\".concat(name)] = data[name];\n    });\n    return React.createElement(\"div\", __assign({\n      className: prefix.apply(void 0, __spreadArray([\"control\", \"direction\", dir, ableName], classNames, false)),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir\n    }, dataAttrs, {\n      key: \"direction-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], indexes.map(function (index) {\n        return renderPoses[index];\n      }), false))\n    }));\n  });\n}\nfunction renderDirectionControls(moveable, defaultDirections, ableName, React) {\n  var _a = getProps(moveable.props, ableName).renderDirections,\n    directions = _a === void 0 ? defaultDirections : _a;\n  if (!directions) {\n    return [];\n  }\n  var renderDirections = directions === true ? DIRECTIONS : directions;\n  return renderDirectionControlsByInfos(moveable, ableName, renderDirections.map(function (dir) {\n    return {\n      data: {},\n      classNames: [],\n      dir: dir\n    };\n  }), React);\n}\nfunction renderAroundControls(moveable, React) {\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var renderDirectionMap = renderState.renderDirectionMap;\n  var zoom = moveable.props.zoom;\n  var sign = direction > 0 ? 1 : -1;\n  var degRotation = rotationRad / Math.PI * 180;\n  return getKeys(renderDirectionMap).map(function (dir) {\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes) {\n      return null;\n    }\n    var directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    return React.createElement(\"div\", {\n      className: prefix(\"around-control\"),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir,\n      key: \"direction-around-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], indexes.map(function (index) {\n        return renderPoses[index];\n      }), false))\n    });\n  });\n}\nfunction renderLine(React, direction, pos1, pos2, zoom, key) {\n  var classNames = [];\n  for (var _i = 6; _i < arguments.length; _i++) {\n    classNames[_i - 6] = arguments[_i];\n  }\n  var rad = getRad(pos1, pos2);\n  var rotation = direction ? throttle(rad / Math.PI * 180, 15) % 180 : -1;\n  return React.createElement(\"div\", {\n    key: \"line-\".concat(key),\n    className: prefix.apply(void 0, __spreadArray([\"line\", \"direction\", direction ? \"edge\" : \"\", direction], classNames, false)),\n    \"data-rotation\": rotation,\n    \"data-line-key\": key,\n    \"data-direction\": direction,\n    style: getLineStyle(pos1, pos2, zoom, rad)\n  });\n}\nfunction renderEdgeLines(React, ableName, edge, poses, zoom) {\n  var directions = edge === true ? DIRECTIONS4 : edge;\n  return directions.map(function (direction, i) {\n    var _a = DIRECTION_INDEXES[direction],\n      index1 = _a[0],\n      index2 = _a[1];\n    if (index2 == null) {\n      return;\n    }\n    return renderLine(React, direction, poses[index1], poses[index2], zoom, \"\".concat(ableName, \"Edge\").concat(i), ableName);\n  }).filter(Boolean);\n}\nfunction getRenderDirections(ableName) {\n  return function (moveable, React) {\n    var edge = getProps(moveable.props, ableName).edge;\n    if (edge && (edge === true || edge.length)) {\n      return __spreadArray(__spreadArray([], renderEdgeLines(React, ableName, edge, moveable.getState().renderPoses, moveable.props.zoom), true), renderDiagonalDirections(moveable, ableName, React), true);\n    }\n    return renderAllDirections(moveable, ableName, React);\n  };\n}\nfunction renderAllDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nfunction renderDiagonalDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\n\nvar Draggable = {\n  name: \"draggable\",\n  props: {\n    draggable: Boolean,\n    throttleDrag: Number,\n    throttleDragRotate: Number,\n    startDragRotate: Number,\n    edgeDraggable: Boolean\n  },\n  events: {\n    onDragStart: \"dragStart\",\n    onDrag: \"drag\",\n    onDragEnd: \"dragEnd\",\n    onDragGroupStart: \"dragGroupStart\",\n    onDragGroup: \"dragGroup\",\n    onDragGroupEnd: \"dragGroupEnd\"\n  },\n  requestStyle: function () {\n    return [\"left\", \"top\", \"right\", \"bottom\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      throttleDragRotate = _a.throttleDragRotate,\n      zoom = _a.zoom;\n    var _b = moveable.getState(),\n      dragInfo = _b.dragInfo,\n      beforeOrigin = _b.beforeOrigin;\n    if (!throttleDragRotate || !dragInfo) {\n      return [];\n    }\n    var dist = dragInfo.dist;\n    if (!dist[0] && !dist[1]) {\n      return [];\n    }\n    var width = getDistSize(dist);\n    var rad = getRad(dist, [0, 0]);\n    return [React.createElement(\"div\", {\n      className: prefix(\"line\", \"horizontal\", \"dragline\", \"dashed\"),\n      key: \"dragRotateGuideline\",\n      style: {\n        width: \"\".concat(width, \"px\"),\n        transform: \"translate(\".concat(beforeOrigin[0], \"px, \").concat(beforeOrigin[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n      }\n    })];\n  },\n  dragStart: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentGesto = e.parentGesto;\n    var state = moveable.state;\n    var gestos = state.gestos,\n      style = state.style;\n    if (gestos.draggable) {\n      return false;\n    }\n    gestos.draggable = parentGesto || moveable.targetGesto;\n    datas.datas = {};\n    datas.left = parseFloat(style.left || \"\") || 0;\n    datas.top = parseFloat(style.top || \"\") || 0;\n    datas.bottom = parseFloat(style.bottom || \"\") || 0;\n    datas.right = parseFloat(style.right || \"\") || 0;\n    datas.startValue = [0, 0];\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"translate\");\n    startCheckSnapDrag(moveable, datas);\n    datas.prevDist = [0, 0];\n    datas.prevBeforeDist = [0, 0];\n    datas.isDrag = false;\n    datas.deltaOffset = [0, 0];\n    var params = fillParams(moveable, e, __assign({\n      set: function (translate) {\n        datas.startValue = translate;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n    if (result !== false) {\n      datas.isDrag = true;\n      moveable.state.dragInfo = {\n        startRect: moveable.getRect(),\n        dist: [0, 0]\n      };\n    } else {\n      gestos.draggable = null;\n      datas.isPinch = false;\n    }\n    return datas.isDrag ? params : false;\n  },\n  drag: function (moveable, e) {\n    if (!e) {\n      return;\n    }\n    resolveTransformEvent(e, \"translate\");\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest,\n      deltaOffset = e.deltaOffset;\n    var distX = e.distX,\n      distY = e.distY;\n    var isDrag = datas.isDrag,\n      prevDist = datas.prevDist,\n      prevBeforeDist = datas.prevBeforeDist,\n      startValue = datas.startValue;\n    if (!isDrag) {\n      return;\n    }\n    if (deltaOffset) {\n      distX += deltaOffset[0];\n      distY += deltaOffset[1];\n    }\n    var props = moveable.props;\n    var parentMoveable = props.parentMoveable;\n    var throttleDrag = parentEvent ? 0 : props.throttleDrag || 0;\n    var throttleDragRotate = parentEvent ? 0 : props.throttleDragRotate || 0;\n    var dragRotateRad = 0;\n    var isVerticalSnap = false;\n    var isVerticalBound = false;\n    var isHorizontalSnap = false;\n    var isHorizontalBound = false;\n    if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n      var startDragRotate = props.startDragRotate || 0;\n      var deg = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate) - startDragRotate;\n      var ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n      var rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n      var r = getDistSize([rx, ry]);\n      dragRotateRad = deg * Math.PI / 180;\n      distX = r * Math.cos(dragRotateRad);\n      distY = r * Math.sin(dragRotateRad);\n    }\n    if (!isPinch && !parentEvent && !parentFlag) {\n      var _a = checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas),\n        verticalInfo = _a[0],\n        horizontalInfo = _a[1];\n      isVerticalSnap = verticalInfo.isSnap;\n      isVerticalBound = verticalInfo.isBound;\n      isHorizontalSnap = horizontalInfo.isSnap;\n      isHorizontalBound = horizontalInfo.isBound;\n      var verticalOffset = verticalInfo.offset;\n      var horizontalOffset = horizontalInfo.offset;\n      distX += verticalOffset;\n      distY += horizontalOffset;\n    }\n    var beforeTranslate = plus(getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    var translate = plus(getTransformDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    throttleArray(translate, TINY_NUM);\n    throttleArray(beforeTranslate, TINY_NUM);\n    if (!throttleDragRotate) {\n      if (!isVerticalSnap && !isVerticalBound) {\n        translate[0] = throttle(translate[0], throttleDrag);\n        beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n      }\n      if (!isHorizontalSnap && !isHorizontalBound) {\n        translate[1] = throttle(translate[1], throttleDrag);\n        beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n      }\n    }\n    var beforeDist = minus(beforeTranslate, startValue);\n    var dist = minus(translate, startValue);\n    var delta = minus(dist, prevDist);\n    var beforeDelta = minus(beforeDist, prevBeforeDist);\n    datas.prevDist = dist;\n    datas.prevBeforeDist = beforeDist;\n    datas.passDelta = delta; //distX - (datas.passDistX || 0);\n    // datas.passDeltaY = distY - (datas.passDistY || 0);\n\n    datas.passDist = dist; //distX;\n    // datas.passDistY = distY;\n\n    var left = datas.left + beforeDist[0];\n    var top = datas.top + beforeDist[1];\n    var right = datas.right - beforeDist[0];\n    var bottom = datas.bottom - beforeDist[1];\n    var nextTransform = convertTransformFormat(datas, \"translate(\".concat(translate[0], \"px, \").concat(translate[1], \"px)\"), \"translate(\".concat(dist[0], \"px, \").concat(dist[1], \"px)\"));\n    fillOriginalTransform(e, nextTransform);\n    moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n    if (!parentEvent && !parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && beforeDelta.some(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var _b = moveable.state,\n      width = _b.width,\n      height = _b.height;\n    var params = fillParams(moveable, e, __assign({\n      transform: nextTransform,\n      dist: dist,\n      delta: delta,\n      translate: translate,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeTranslate: beforeTranslate,\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      width: width,\n      height: height,\n      isPinch: isPinch\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e)));\n    !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n    return params;\n  },\n  dragAfter: function (moveable, e) {\n    var datas = e.datas;\n    var deltaOffset = datas.deltaOffset;\n    if (deltaOffset[0] || deltaOffset[1]) {\n      datas.deltaOffset = [0, 0];\n      return this.drag(moveable, __assign(__assign({}, e), {\n        deltaOffset: deltaOffset\n      }));\n    }\n    return false;\n  },\n  dragEnd: function (moveable, e) {\n    var parentEvent = e.parentEvent,\n      datas = e.datas;\n    moveable.state.dragInfo = null;\n    if (!datas.isDrag) {\n      return;\n    }\n    datas.isDrag = false;\n    var param = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n    return param;\n  },\n  dragGroupStart: function (moveable, e) {\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY;\n    var params = this.dragStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var events = triggerChildGesto(moveable, this, \"dragStart\", [clientX || 0, clientY || 0], e, false, \"draggable\");\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n    datas.isDrag = result !== false;\n    return datas.isDrag ? params : false;\n  },\n  dragGroup: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    var params = this.drag(moveable, e);\n    var passDelta = e.datas.passDelta;\n    var events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n    if (!params) {\n      return;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onDragGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    this.dragEnd(moveable, e);\n    var events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n    triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    }));\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Draggable#request\n   * @param {object} [e] - the draggable's request parameter\n   * @param {number} [e.x] - x position\n   * @param {number} [e.y] - y position\n   * @param {number} [e.deltaX] - X number to move\n   * @param {number} [e.deltaY] - Y number to move\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"draggable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 });\n   * moveable.request(\"draggable\", { x: 220, y: 100 });\n   * moveable.request(\"draggable\", { x: 240, y: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    return {\n      isControl: false,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"x\" in e) {\n          distX = e.x - rect.left;\n        } else if (\"deltaX\" in e) {\n          distX += e.deltaX;\n        }\n        if (\"y\" in e) {\n          distY = e.y - rect.top;\n        } else if (\"deltaY\" in e) {\n          distY += e.deltaY;\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.draggable = null;\n    moveable.state.dragInfo = null;\n  }\n};\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nvar directionCondition$1 = getDirectionCondition(\"resizable\");\nvar Resizable = {\n  name: \"resizable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    resizable: Boolean,\n    throttleResize: Number,\n    renderDirections: Array,\n    keepRatio: Boolean,\n    resizeFormat: Function,\n    keepRatioFinally: Boolean,\n    edge: Boolean,\n    checkResizableError: Boolean\n  },\n  events: {\n    onResizeStart: \"resizeStart\",\n    onBeforeResize: \"beforeResize\",\n    onResize: \"resize\",\n    onResizeEnd: \"resizeEnd\",\n    onResizeGroupStart: \"resizeGroupStart\",\n    onBeforeResizeGroup: \"beforeResizeGroup\",\n    onResizeGroup: \"resizeGroup\",\n    onResizeGroupEnd: \"resizeGroupEnd\"\n  },\n  render: getRenderDirections(\"resizable\"),\n  dragControlCondition: directionCondition$1,\n  viewClassName: getDirectionViewClassName(\"resizable\"),\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var inputEvent = e.inputEvent,\n      isPinch = e.isPinch,\n      isGroup = e.isGroup,\n      parentDirection = e.parentDirection,\n      parentGesto = e.parentGesto,\n      datas = e.datas,\n      parentFixedDirection = e.parentFixedDirection,\n      parentEvent = e.parentEvent;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var state = moveable.state;\n    var target = state.target,\n      width = state.width,\n      height = state.height,\n      gestos = state.gestos;\n    if (!direction || !target) {\n      return false;\n    }\n    if (gestos.resizable) {\n      return false;\n    }\n    gestos.resizable = parentGesto || moveable.controlGesto;\n    !isPinch && setDragStart(moveable, e);\n    datas.datas = {};\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.prevWidth = 0;\n    datas.prevHeight = 0;\n    datas.minSize = [0, 0];\n    datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n    datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n    datas.maxSize = [Infinity, Infinity];\n    if (!isGroup) {\n      datas.minSize = [state.minOffsetWidth, state.minOffsetHeight];\n      datas.maxSize = [state.maxOffsetWidth, state.maxOffsetHeight];\n    }\n    var transformOrigin = moveable.props.transformOrigin || \"% %\";\n    datas.transformOrigin = transformOrigin && isString(transformOrigin) ? transformOrigin.split(\" \") : transformOrigin;\n    datas.startOffsetMatrix = state.offsetMatrix;\n    datas.startTransformOrigin = state.transformOrigin;\n    datas.isWidth = (_a = e === null || e === void 0 ? void 0 : e.parentIsWidth) !== null && _a !== void 0 ? _a : !direction[0] && !direction[1] || direction[0] || !direction[1];\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    function setFixedPosition(fixedPosition) {\n      var _a = moveable.state,\n        width = _a.width,\n        height = _a.height;\n      datas.fixedPosition = fixedPosition;\n      datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n    }\n    function setMin(minSize) {\n      datas.minSize = [convertUnitSize(\"\".concat(minSize[0]), 0) || 0, convertUnitSize(\"\".concat(minSize[1]), 0) || 0];\n    }\n    function setMax(maxSize) {\n      var nextMaxSize = [maxSize[0] || Infinity, maxSize[1] || Infinity];\n      if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n        nextMaxSize[0] = convertUnitSize(\"\".concat(nextMaxSize[0]), 0) || Infinity;\n      }\n      if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n        nextMaxSize[1] = convertUnitSize(\"\".concat(nextMaxSize[1]), 0) || Infinity;\n      }\n      datas.maxSize = nextMaxSize;\n    }\n    setRatio(width / height);\n    setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n    datas.setFixedDirection = setFixedDirection;\n    datas.setFixedPosition = setFixedPosition;\n    datas.setMin = setMin;\n    datas.setMax = setMax;\n    var params = fillParams(moveable, e, {\n      direction: direction,\n      startRatio: datas.ratio,\n      set: function (_a) {\n        var startWidth = _a[0],\n          startHeight = _a[1];\n        datas.startWidth = startWidth;\n        datas.startHeight = startHeight;\n      },\n      setMin: setMin,\n      setMax: setMax,\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition,\n      setOrigin: function (origin) {\n        datas.transformOrigin = origin;\n      },\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    datas.startFixedPosition = datas.fixedPosition;\n    if (result !== false) {\n      datas.isResize = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isResize ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a;\n    var datas = e.datas,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      parentKeepRatio = e.parentKeepRatio,\n      dragClient = e.dragClient,\n      parentDist = e.parentDist,\n      isRequest = e.isRequest,\n      isGroup = e.isGroup,\n      parentEvent = e.parentEvent,\n      resolveMatrix = e.resolveMatrix;\n    var isResize = datas.isResize,\n      transformOrigin = datas.transformOrigin,\n      startWidth = datas.startWidth,\n      startHeight = datas.startHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight,\n      minSize = datas.minSize,\n      maxSize = datas.maxSize,\n      ratio = datas.ratio,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isWidth = datas.isWidth;\n    if (!isResize) {\n      return;\n    }\n    if (resolveMatrix) {\n      var is3d = moveable.state.is3d;\n      var startOffsetMatrix = datas.startOffsetMatrix,\n        startTransformOrigin = datas.startTransformOrigin;\n      var n = is3d ? 4 : 3;\n      var targetMatrix = parseMat(getNextTransforms(e));\n      var targetN = Math.sqrt(targetMatrix.length);\n      if (n !== targetN) {\n        targetMatrix = convertDimension(targetMatrix, targetN, n);\n      }\n      var nextAllMatrix = getNextMatrix(startOffsetMatrix, targetMatrix, startTransformOrigin, n);\n      var poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n      datas.startPositions = poses;\n      datas.nextTargetMatrix = targetMatrix;\n      datas.nextAllMatrix = nextAllMatrix;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    var resizeFormat = props.resizeFormat,\n      _b = props.throttleResize,\n      throttleResize = _b === void 0 ? parentFlag ? 0 : 1 : _b,\n      parentMoveable = props.parentMoveable,\n      keepRatioFinally = props.keepRatioFinally;\n    var direction = datas.direction;\n    var sizeDirection = direction;\n    var distWidth = 0;\n    var distHeight = 0;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    function getNextBoundingSize() {\n      var fixedDirection = datas.fixedDirection;\n      var nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n      distWidth = nextSize.distWidth;\n      distHeight = nextSize.distHeight;\n      var nextWidth = sizeDirection[0] - fixedDirection[0] || keepRatio ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n      var nextHeight = sizeDirection[1] - fixedDirection[1] || keepRatio ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n      if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n        if (isWidth) {\n          nextHeight = nextWidth / ratio;\n        } else {\n          nextWidth = nextHeight * ratio;\n        }\n      }\n      return [nextWidth, nextHeight];\n    }\n    var _c = getNextBoundingSize(),\n      boundingWidth = _c[0],\n      boundingHeight = _c[1];\n    if (!parentEvent) {\n      datas.setFixedDirection(datas.fixedDirection);\n      triggerEvent(moveable, \"onBeforeResize\", fillParams(moveable, e, {\n        startFixedDirection: datas.startFixedDirection,\n        startFixedPosition: datas.startFixedPosition,\n        setFixedDirection: function (nextFixedDirection) {\n          var _a;\n          datas.setFixedDirection(nextFixedDirection);\n          _a = getNextBoundingSize(), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        setFixedPosition: function (nextFixedPosition) {\n          var _a;\n          datas.setFixedPosition(nextFixedPosition);\n          _a = getNextBoundingSize(), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        boundingWidth: boundingWidth,\n        boundingHeight: boundingHeight,\n        setSize: function (size) {\n          boundingWidth = size[0], boundingHeight = size[1];\n        }\n      }, true));\n    }\n    var fixedPosition = dragClient;\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    var snapDist = [0, 0];\n    if (!isPinch) {\n      snapDist = checkSnapResize(moveable, boundingWidth, boundingHeight, direction, fixedPosition, isRequest, datas);\n    }\n    if (parentDist) {\n      !parentDist[0] && (snapDist[0] = 0);\n      !parentDist[1] && (snapDist[1] = 0);\n    }\n    function computeSize() {\n      var _a;\n      if (resizeFormat) {\n        _a = resizeFormat([boundingWidth, boundingHeight]), boundingWidth = _a[0], boundingHeight = _a[1];\n      }\n      boundingWidth = throttle(boundingWidth, throttleResize);\n      boundingHeight = throttle(boundingHeight, throttleResize);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        // pre-compute before maintaining the ratio\n        computeSize();\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        boundingWidth += snapDist[0];\n        boundingHeight = boundingWidth / ratio;\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        boundingHeight += snapDist[1];\n        boundingWidth = boundingHeight * ratio;\n      }\n    } else {\n      boundingWidth += snapDist[0];\n      boundingHeight += snapDist[1];\n      boundingWidth = Math.max(0, boundingWidth);\n      boundingHeight = Math.max(0, boundingHeight);\n    }\n    _a = calculateBoundSize([boundingWidth, boundingHeight], minSize, maxSize, keepRatio ? ratio : false), boundingWidth = _a[0], boundingHeight = _a[1];\n    computeSize();\n    if (keepRatio && (isGroup || keepRatioFinally)) {\n      if (isWidth) {\n        boundingHeight = boundingWidth / ratio;\n      } else {\n        boundingWidth = boundingHeight * ratio;\n      }\n    }\n    distWidth = boundingWidth - startOffsetWidth;\n    distHeight = boundingHeight - startOffsetHeight;\n    var delta = [distWidth - prevWidth, distHeight - prevHeight];\n    datas.prevWidth = distWidth;\n    datas.prevHeight = distHeight;\n    var inverseDelta = getResizeDist(moveable, boundingWidth, boundingHeight, fixedPosition, transformOrigin, datas);\n    if (!parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && inverseDelta.every(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"));\n    var transform = drag.transform;\n    var nextWidth = startWidth + distWidth;\n    var nextHeight = startHeight + distHeight;\n    var params = fillParams(moveable, e, __assign({\n      width: nextWidth,\n      height: nextHeight,\n      offsetWidth: Math.round(boundingWidth),\n      offsetHeight: Math.round(boundingHeight),\n      startRatio: ratio,\n      boundingWidth: boundingWidth,\n      boundingHeight: boundingHeight,\n      direction: direction,\n      dist: [distWidth, distHeight],\n      delta: delta,\n      isPinch: !!isPinch,\n      drag: drag\n    }, fillAfterTransform({\n      style: {\n        width: \"\".concat(nextWidth, \"px\"),\n        height: \"\".concat(nextHeight, \"px\")\n      },\n      transform: transform\n    }, drag, e)));\n    !parentEvent && triggerEvent(moveable, \"onResize\", params);\n    return params;\n  },\n  dragControlAfter: function (moveable, e) {\n    var datas = e.datas;\n    var isResize = datas.isResize,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight;\n    if (!isResize || moveable.props.checkResizableError === false) {\n      return;\n    }\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height;\n    var errorWidth = width - (startOffsetWidth + prevWidth);\n    var errorHeight = height - (startOffsetHeight + prevHeight);\n    var isErrorWidth = Math.abs(errorWidth) > 3;\n    var isErrorHeight = Math.abs(errorHeight) > 3;\n    if (isErrorWidth) {\n      datas.startWidth += errorWidth;\n      datas.startOffsetWidth += errorWidth;\n      datas.prevWidth += errorWidth;\n    }\n    if (isErrorHeight) {\n      datas.startHeight += errorHeight;\n      datas.startOffsetHeight += errorHeight;\n      datas.prevHeight += errorHeight;\n    }\n    if (isErrorWidth || isErrorHeight) {\n      return this.dragControl(moveable, e);\n    }\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent;\n    if (!datas.isResize) {\n      return;\n    }\n    datas.isResize = false;\n    var params = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: directionCondition$1,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    var parentStartOffsetWidth = datas.startOffsetWidth,\n      parentStartOffsetHeight = datas.startOffsetHeight;\n    function updateGroupMin() {\n      var originalMinSize = datas.minSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMinSize = _a.minSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMinWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n        var parentMinHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n        originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n        originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n      });\n    }\n    function updateGroupMax() {\n      var originalMaxSize = datas.maxSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMaxSize = _a.maxSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMaxWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n        var parentMaxHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n        originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n        originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n      });\n    }\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    updateGroupMin();\n    updateGroupMax();\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events.map(function (ev) {\n        return __assign(__assign({}, ev), {\n          setMin: function (minSize) {\n            ev.setMin(minSize);\n            updateGroupMin();\n          },\n          setMax: function (maxSize) {\n            ev.setMax(maxSize);\n            updateGroupMax();\n          }\n        });\n      }),\n      setFixedDirection: setFixedDirection,\n      setMin: function (minSize) {\n        params.setMin(minSize);\n        updateGroupMin();\n      },\n      setMax: function (maxSize) {\n        params.setMax(maxSize);\n        updateGroupMax();\n      }\n    });\n    var result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n    datas.isResize = result !== false;\n    return datas.isResize ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    catchEvent(moveable, \"onBeforeResize\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return;\n    }\n    var boundingWidth = params.boundingWidth,\n      boundingHeight = params.boundingHeight,\n      dist = params.dist;\n    var keepRatio = props.keepRatio;\n    var parentScale = [boundingWidth / (boundingWidth - dist[0]), boundingHeight / (boundingHeight - dist[1])];\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * parentScale[0], ev.datas.originalY * parentScale[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: parentScale,\n        dragClient: plus(fixedPosition, [clientX, clientY]),\n        parentKeepRatio: keepRatio\n      });\n    });\n    var nextParams = __assign({\n      targets: props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onResizeGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Resizable#request\n   * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"resizable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    var rect = moveable.getRect();\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        var _a;\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1],\n          parentIsWidth: (_a = e === null || e === void 0 ? void 0 : e.horizontal) !== null && _a !== void 0 ? _a : true\n        };\n      },\n      request: function (e) {\n        if (\"offsetWidth\" in e) {\n          distWidth = e.offsetWidth - rect.offsetWidth;\n        } else if (\"deltaWidth\" in e) {\n          distWidth += e.deltaWidth;\n        }\n        if (\"offsetHeight\" in e) {\n          distHeight = e.offsetHeight - rect.offsetHeight;\n        } else if (\"deltaHeight\" in e) {\n          distHeight += e.deltaHeight;\n        }\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.resizable = null;\n  }\n};\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(moveable, datas, clientX, clientY, rect) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var n = state.is3d ? 4 : 3;\n  var origin = datas.origin;\n  var nextOrigin = calculatePosition(moveable.state.rootMatrix,\n  // TO-DO #710\n  minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]), n);\n  var startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n  datas.startAbsoluteOrigin = startAbsoluteOrigin;\n  datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n  datas.defaultDeg = datas.prevDeg;\n  datas.prevSnapDeg = 0;\n  datas.loop = 0;\n  datas.startDist = getDist$1(startAbsoluteOrigin, [clientX, clientY]);\n}\nfunction getAbsoluteDist(deg, direction, datas) {\n  var defaultDeg = datas.defaultDeg,\n    prevDeg = datas.prevDeg;\n  var normalizedPrevDeg = prevDeg % 360;\n  var loop = Math.floor(prevDeg / 360);\n  if (normalizedPrevDeg < 0) {\n    normalizedPrevDeg += 360;\n  }\n  if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n    // 360 => 0\n    ++loop;\n  } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n    // 0 => 360\n    --loop;\n  }\n  var dist = direction * (loop * 360 + deg - defaultDeg);\n  datas.prevDeg = defaultDeg + dist;\n  return dist;\n}\nfunction getAbsoluteDistByClient(clientX, clientY, direction, datas) {\n  return getAbsoluteDist(getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180, direction, datas);\n}\nfunction getRotateInfo(moveable, moveableRect, datas, dist, startValue, checkSnap) {\n  var _a = moveable.props.throttleRotate,\n    throttleRotate = _a === void 0 ? 0 : _a;\n  var prevSnapDeg = datas.prevSnapDeg;\n  var snapRotation = 0;\n  var isSnap = false;\n  if (checkSnap) {\n    var result = checkSnapRotate(moveable, moveableRect, dist);\n    isSnap = result.isSnap;\n    snapRotation = startValue + result.rotation;\n  }\n  if (!isSnap) {\n    snapRotation = throttle(startValue + dist, throttleRotate);\n  }\n  var snapDeg = snapRotation - startValue;\n  datas.prevSnapDeg = snapDeg;\n  return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n}\nfunction getRotationPositions(rotationPosition, _a, direction) {\n  var pos1 = _a[0],\n    pos2 = _a[1],\n    pos3 = _a[2],\n    pos4 = _a[3];\n  if (rotationPosition === \"none\") {\n    return [];\n  }\n  if (isArray(rotationPosition)) {\n    return rotationPosition.map(function (child) {\n      return getRotationPositions(child, [pos1, pos2, pos3, pos4], direction)[0];\n    });\n  }\n  var _b = (rotationPosition || \"top\").split(\"-\"),\n    dir1 = _b[0],\n    dir2 = _b[1];\n  var radPoses = [pos1, pos2];\n  if (dir1 === \"left\") {\n    radPoses = [pos3, pos1];\n  } else if (dir1 === \"right\") {\n    radPoses = [pos2, pos4];\n  } else if (dir1 === \"bottom\") {\n    radPoses = [pos4, pos3];\n  }\n  var pos = [(radPoses[0][0] + radPoses[1][0]) / 2, (radPoses[0][1] + radPoses[1][1]) / 2];\n  var rad = getRotationRad(radPoses, direction);\n  if (dir2) {\n    var isStart = dir2 === \"top\" || dir2 === \"left\";\n    var isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n    pos = radPoses[isStart && !isReverse || !isStart && isReverse ? 0 : 1];\n  }\n  return [[pos, rad]];\n}\nfunction dragControlCondition(moveable, e) {\n  if (e.isRequest) {\n    return e.requestAble === \"rotatable\";\n  }\n  var target = e.inputEvent.target;\n  if (hasClass(target, prefix(\"rotation-control\")) || hasClass(target, prefix(\"around-control\")) || hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\"))) {\n    return true;\n  }\n  var rotationTarget = moveable.props.rotationTarget;\n  if (rotationTarget) {\n    return getRefTargets(rotationTarget, true).some(function (element) {\n      if (!element) {\n        return false;\n      }\n      return target === element || target.contains(element);\n    });\n  }\n  return false;\n}\nvar directionCSS = DIRECTIONS.map(function (dir) {\n  var top = \"\";\n  var left = \"\";\n  var originX = \"center\";\n  var originY = \"center\";\n  if (dir.indexOf(\"n\") > -1) {\n    top = \"top: -20px;\";\n    originY = \"bottom\";\n  }\n  if (dir.indexOf(\"s\") > -1) {\n    top = \"top: 0px;\";\n    originY = \"top\";\n  }\n  if (dir.indexOf(\"w\") > -1) {\n    left = \"left: -20px;\";\n    originX = \"right\";\n  }\n  if (dir.indexOf(\"e\") > -1) {\n    left = \"left: 0px;\";\n    originX = \"left\";\n  }\n  return \".around-control[data-direction*=\\\"\".concat(dir, \"\\\"] {\\n        \").concat(left).concat(top, \"\\n        transform-origin: \").concat(originX, \" \").concat(originY, \";\\n    }\");\n}).join(\"\\n\");\nvar css = \".rotation {\\n    position: absolute;\\n    height: 40px;\\n    width: 1px;\\n    transform-origin: 50% 100%;\\n    height: calc(40px * var(--zoom));\\n    top: auto;\\n    left: 0;\\n    bottom: 100%;\\n    will-change: transform;\\n}\\n.rotation .rotation-line {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    transform-origin: 50% 50%;\\n}\\n.rotation .rotation-control {\\n    border-color: #4af;\\n    border-color: var(--moveable-color);\\n    background:#fff;\\n    cursor: alias;\\n}\\n:global .view-rotation-dragging, .rotatable.direction.control {\\n    cursor: alias;\\n}\\n.around-control {\\n    position: absolute;\\n    will-change: transform;\\n    width: 20px;\\n    height: 20px;\\n    left: -10px;\\n    top: -10px;\\n    box-sizing: border-box;\\n    background: transparent;\\n    z-index: 8;\\n    cursor: alias;\\n    transform-origin: center center;\\n}\\n.rotatable.direction.control.move {\\n    cursor: move;\\n}\\n\".concat(directionCSS, \"\\n\");\nvar Rotatable = {\n  name: \"rotatable\",\n  canPinch: true,\n  props: {\n    rotatable: Boolean,\n    rotationPosition: String,\n    throttleRotate: Number,\n    renderDirections: Object,\n    rotationTarget: Object,\n    rotateAroundControls: Boolean,\n    edge: Boolean,\n    resolveAblesWithRotatable: Object\n  },\n  events: {\n    onRotateStart: \"rotateStart\",\n    onBeforeRotate: \"beforeRotate\",\n    onRotate: \"rotate\",\n    onRotateEnd: \"rotateEnd\",\n    onRotateGroupStart: \"rotateGroupStart\",\n    onBeforeRotateGroup: \"beforeRotateGroup\",\n    onRotateGroup: \"rotateGroup\",\n    onRotateGroupEnd: \"rotateGroupEnd\"\n  },\n  css: [css],\n  viewClassName: function (moveable) {\n    if (!moveable.isDragging(\"rotatable\")) {\n      return \"\";\n    }\n    return prefix(\"view-rotation-dragging\");\n  },\n  render: function (moveable, React) {\n    var _a = getProps(moveable.props, \"rotatable\"),\n      rotatable = _a.rotatable,\n      rotationPosition = _a.rotationPosition,\n      zoom = _a.zoom,\n      renderDirections = _a.renderDirections,\n      rotateAroundControls = _a.rotateAroundControls,\n      resolveAblesWithRotatable = _a.resolveAblesWithRotatable;\n    var _b = moveable.getState(),\n      renderPoses = _b.renderPoses,\n      direction = _b.direction;\n    if (!rotatable) {\n      return null;\n    }\n    var positions = getRotationPositions(rotationPosition, renderPoses, direction);\n    var jsxs = [];\n    positions.forEach(function (_a, i) {\n      var pos = _a[0],\n        rad = _a[1];\n      jsxs.push(React.createElement(\"div\", {\n        key: \"rotation\".concat(i),\n        className: prefix(\"rotation\"),\n        style: {\n          // tslint:disable-next-line: max-line-length\n          transform: \"translate(-50%) translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rad, \"rad)\")\n        }\n      }, React.createElement(\"div\", {\n        className: prefix(\"line rotation-line\"),\n        style: {\n          transform: \"scaleX(\".concat(zoom, \")\")\n        }\n      }), React.createElement(\"div\", {\n        className: prefix(\"control rotation-control\"),\n        style: {\n          transform: \"translate(0.5px) scale(\".concat(zoom, \")\")\n        }\n      })));\n    });\n    if (renderDirections) {\n      var ables = getKeys(resolveAblesWithRotatable || {});\n      var resolveMap_1 = {};\n      ables.forEach(function (name) {\n        resolveAblesWithRotatable[name].forEach(function (direction) {\n          resolveMap_1[direction] = name;\n        });\n      });\n      var directionControlInfos = [];\n      if (isArray(renderDirections)) {\n        directionControlInfos = renderDirections.map(function (dir) {\n          var able = resolveMap_1[dir];\n          return {\n            data: able ? {\n              resolve: able\n            } : {},\n            classNames: able ? [\"move\"] : [],\n            dir: dir\n          };\n        });\n      }\n      jsxs.push.apply(jsxs, renderDirectionControlsByInfos(moveable, \"rotatable\", directionControlInfos, React));\n    }\n    if (rotateAroundControls) {\n      jsxs.push.apply(jsxs, renderAroundControls(moveable, React));\n    }\n    return jsxs;\n  },\n  dragControlCondition: dragControlCondition,\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var _b;\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    var state = moveable.state;\n    var target = state.target,\n      left = state.left,\n      top = state.top,\n      direction = state.direction,\n      beforeDirection = state.beforeDirection,\n      targetTransform = state.targetTransform,\n      moveableClientRect = state.moveableClientRect,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      allMatrix = state.allMatrix,\n      width = state.width,\n      height = state.height;\n    if (!isRequest && !target) {\n      return false;\n    }\n    var rect = moveable.getRect();\n    datas.rect = rect;\n    datas.transform = targetTransform;\n    datas.left = left;\n    datas.top = top;\n    var setFixedPosition = function (fixedPosition) {\n      var _a = moveable.state,\n        allMatrix = _a.allMatrix,\n        is3d = _a.is3d,\n        width = _a.width,\n        height = _a.height;\n      var fixedDirection = getDirectionByPos(fixedPosition, width, height);\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n      if (resizeStart) {\n        resizeStart.setFixedPosition(fixedPosition);\n      }\n    };\n    var setFixedDirection = function (fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n      if (resizeStart) {\n        resizeStart.setFixedDirection(fixedDirection);\n      }\n    };\n    var startClientX = clientX;\n    var startClientY = clientY;\n    if (isRequest || isPinch || parentFlag) {\n      var externalRotate = parentRotate || 0;\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin,\n        prevDeg: externalRotate,\n        defaultDeg: externalRotate,\n        prevSnapDeg: 0,\n        startDist: 0\n      };\n      datas.afterInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin\n      });\n      datas.absoluteInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin,\n        startValue: externalRotate\n      });\n    } else {\n      var inputTarget = (_b = e.inputEvent) === null || _b === void 0 ? void 0 : _b.target;\n      if (inputTarget) {\n        var regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n        var controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n        if (controlDirection) {\n          datas.isControl = true;\n          datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n          datas.controlDirection = controlDirection;\n          var resolve = inputTarget.getAttribute(\"data-resolve\");\n          if (resolve) {\n            datas.resolveAble = resolve;\n          }\n          var clientPoses = calculateMoveableClientPositions(state.rootMatrix, state.renderPoses, moveableClientRect);\n          _a = getPosByDirection(clientPoses, controlDirection), startClientX = _a[0], startClientY = _a[1];\n        }\n      }\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin\n      };\n      datas.afterInfo = {\n        origin: rect.origin\n      };\n      datas.absoluteInfo = {\n        origin: rect.origin,\n        startValue: rect.rotation\n      };\n      var originalFixedPosition_1 = setFixedPosition;\n      setFixedPosition = function (fixedPosition) {\n        var n = state.is3d ? 4 : 3;\n        var _a = plus(getOrigin(targetMatrix, n), fixedPosition),\n          originX = _a[0],\n          originY = _a[1];\n        var fixedBeforeOrigin = calculate(offsetMatrix, convertPositionMatrix([originX, originY], n));\n        var fixedAfterOrigin = calculate(allMatrix, convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n));\n        originalFixedPosition_1(fixedPosition);\n        var posDelta = state.posDelta;\n        datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n        datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n        datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n        setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n      };\n      setFixedDirection = function (fixedDirection) {\n        var fixedPosition = getPosByDirection([[0, 0], [width, 0], [0, height], [width, height]], fixedDirection);\n        setFixedPosition(fixedPosition);\n      };\n    }\n    datas.startClientX = startClientX;\n    datas.startClientY = startClientY;\n    datas.direction = direction;\n    datas.beforeDirection = beforeDirection;\n    datas.startValue = 0;\n    datas.datas = {};\n    setDefaultTransformIndex(e, \"rotate\");\n    var dragStart = false;\n    var resizeStart = false;\n    if (datas.isControl && datas.resolveAble) {\n      var resolveAble = datas.resolveAble;\n      if (resolveAble === \"resizable\") {\n        resizeStart = Resizable.dragControlStart(moveable, __assign(__assign({}, new CustomGesto(\"resizable\").dragStart([0, 0], e)), {\n          parentPosition: datas.controlPosition,\n          parentFixedPosition: datas.fixedPosition\n        }));\n      }\n    }\n    if (!resizeStart) {\n      dragStart = Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e));\n    }\n    setFixedPosition(state.transformOrigin);\n    var params = fillParams(moveable, e, __assign(__assign({\n      set: function (rotatation) {\n        datas.startValue = rotatation * Math.PI / 180;\n      },\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition\n    }, fillTransformStartEvent(e)), {\n      dragStart: dragStart,\n      resizeStart: resizeStart\n    }));\n    var result = triggerEvent(moveable, \"onRotateStart\", params);\n    datas.isRotate = result !== false;\n    state.snapRenderInfo = {\n      request: e.isRequest\n    };\n    return datas.isRotate ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b, _c;\n    var datas = e.datas,\n      clientDistX = e.clientDistX,\n      clientDistY = e.clientDistY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      groupDelta = e.groupDelta;\n    var beforeDirection = datas.beforeDirection,\n      beforeInfo = datas.beforeInfo,\n      afterInfo = datas.afterInfo,\n      absoluteInfo = datas.absoluteInfo,\n      isRotate = datas.isRotate,\n      startValue = datas.startValue,\n      rect = datas.rect,\n      startClientX = datas.startClientX,\n      startClientY = datas.startClientY;\n    if (!isRotate) {\n      return;\n    }\n    resolveTransformEvent(e, \"rotate\");\n    var targetDirection = getTransformDirection(e);\n    var direction = beforeDirection * targetDirection;\n    var parentMoveable = moveable.props.parentMoveable;\n    var beforeDelta = 0;\n    var beforeDist;\n    var beforeRotation;\n    var delta = 0;\n    var dist;\n    var rotation;\n    var absoluteDelta = 0;\n    var absoluteDist;\n    var absoluteRotation;\n    var startRotation = 180 / Math.PI * startValue;\n    var absoluteStartRotation = absoluteInfo.startValue;\n    var isSnap = false;\n    var nextClientX = startClientX + clientDistX;\n    var nextClientY = startClientY + clientDistY;\n    if (!parentFlag && \"parentDist\" in e) {\n      var parentDist = e.parentDist;\n      beforeDist = parentDist;\n      dist = parentDist;\n      absoluteDist = parentDist;\n    } else if (isPinch || parentFlag) {\n      beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n      dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n      absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n    } else {\n      beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n      dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n      absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n      isSnap = true;\n    }\n    beforeRotation = startRotation + beforeDist;\n    rotation = startRotation + dist;\n    absoluteRotation = absoluteStartRotation + absoluteDist;\n    triggerEvent(moveable, \"onBeforeRotate\", fillParams(moveable, e, {\n      beforeRotation: beforeRotation,\n      rotation: rotation,\n      absoluteRotation: absoluteRotation,\n      setRotation: function (nextRotation) {\n        dist = nextRotation - startRotation;\n        beforeDist = dist;\n        absoluteDist = dist;\n      }\n    }, true));\n    _a = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap), beforeDelta = _a[0], beforeDist = _a[1], beforeRotation = _a[2];\n    _b = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap), delta = _b[0], dist = _b[1], rotation = _b[2];\n    _c = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap), absoluteDelta = _c[0], absoluteDist = _c[1], absoluteRotation = _c[2];\n    if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n      return;\n    }\n    var nextTransform = convertTransformFormat(datas, \"rotate(\".concat(rotation, \"deg)\"), \"rotate(\".concat(dist, \"deg)\"));\n    var inverseDist = getRotateDist(moveable, dist, datas);\n    var inverseDelta = minus(plus(groupDelta || [0, 0], inverseDist), datas.prevInverseDist || [0, 0]);\n    datas.prevInverseDist = inverseDist;\n    datas.requestValue = null;\n    var dragEvent = fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e);\n    var transformEvent = dragEvent;\n    var parentDistance = getDist$1([nextClientX, nextClientY], absoluteInfo.startAbsoluteOrigin) - absoluteInfo.startDist;\n    var resize = undefined;\n    if (datas.resolveAble === \"resizable\") {\n      var resizeEvent = Resizable.dragControl(moveable, __assign(__assign({}, setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\")), {\n        resolveMatrix: true,\n        parentDistance: parentDistance\n      }));\n      if (resizeEvent) {\n        resize = resizeEvent;\n        transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n      }\n    }\n    var params = fillParams(moveable, e, __assign(__assign({\n      delta: delta,\n      dist: dist,\n      rotate: rotation,\n      rotation: rotation,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeRotate: beforeRotation,\n      beforeRotation: beforeRotation,\n      absoluteDist: absoluteDist,\n      absoluteDelta: absoluteDelta,\n      absoluteRotate: absoluteRotation,\n      absoluteRotation: absoluteRotation,\n      isPinch: !!isPinch,\n      resize: resize\n    }, dragEvent), transformEvent));\n    triggerEvent(moveable, \"onRotate\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    datas.isRotate = false;\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRotateEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: dragControlCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var _a = moveable.state,\n      parentLeft = _a.left,\n      parentTop = _a.top,\n      parentBeforeOrigin = _a.beforeOrigin;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    params.set(datas.beforeDirection * moveable.rotation);\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      var _a = child.state,\n        left = _a.left,\n        top = _a.top,\n        beforeOrigin = _a.beforeOrigin;\n      var childClient = plus(minus([left, top], [parentLeft, parentTop]), minus(beforeOrigin, parentBeforeOrigin));\n      ev.datas.startGroupClient = childClient;\n      ev.datas.groupClient = childClient;\n      return __assign(__assign({}, ev), {\n        parentRotate: 0\n      });\n    });\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n    datas.isRotate = result !== false;\n    return datas.isRotate ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeRotate\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var direction = datas.beforeDirection;\n    var parentRotate = params.beforeDist;\n    var rad = parentRotate / 180 * Math.PI;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var startGroupClient = ev.datas.startGroupClient;\n      var _a = ev.datas.groupClient,\n        prevClientX = _a[0],\n        prevClientY = _a[1];\n      var _b = rotate(startGroupClient, rad * direction),\n        clientX = _b[0],\n        clientY = _b[1];\n      var delta = [clientX - prevClientX, clientY - prevClientY];\n      ev.datas.groupClient = [clientX, clientY];\n      return __assign(__assign({}, ev), {\n        parentRotate: parentRotate,\n        groupDelta: delta\n      });\n    });\n    moveable.rotation = direction * params.beforeRotation;\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events,\n      set: function (rotation) {\n        moveable.rotation = rotation;\n      },\n      setGroupRotation: function (rotation) {\n        moveable.rotation = rotation;\n      }\n    }, params);\n    triggerEvent(moveable, \"onRotateGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Rotatable#request\n   * @param {object} [e] - the Resizable's request parameter\n   * @param {number} [e.deltaRotate=0] -  delta number of rotation\n   * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n   *\n   * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"rotatable\");\n   *\n   * // request\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   *\n   * requester.request({ rotate: 10 });\n   * requester.request({ rotate: 20 });\n   * requester.request({ rotate: 30 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distRotate = 0;\n    var startRotation = moveable.getRotation();\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaRotate\" in e) {\n          distRotate += e.deltaRotate;\n        } else if (\"rotate\" in e) {\n          distRotate = e.rotate - startRotation;\n        }\n        return {\n          datas: datas,\n          parentDist: distRotate\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n\nvar directionCondition = getDirectionCondition(\"scalable\");\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\n\nvar Scalable = {\n  name: \"scalable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    scalable: Boolean,\n    throttleScale: Number,\n    renderDirections: String,\n    keepRatio: Boolean,\n    edge: Boolean\n  },\n  events: {\n    onScaleStart: \"scaleStart\",\n    onBeforeScale: \"beforeScale\",\n    onScale: \"scale\",\n    onScaleEnd: \"scaleEnd\",\n    onScaleGroupStart: \"scaleGroupStart\",\n    onBeforeScaleGroup: \"beforeScaleGroup\",\n    onScaleGroup: \"scaleGroup\",\n    onScaleGroupEnd: \"scaleGroupEnd\"\n  },\n  render: getRenderDirections(\"scalable\"),\n  dragControlCondition: directionCondition,\n  viewClassName: getDirectionViewClassName(\"scalable\"),\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      parentDirection = e.parentDirection;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height,\n      targetTransform = _a.targetTransform,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos4 = _a.pos4;\n    if (!direction || !target) {\n      return false;\n    }\n    if (!isPinch) {\n      setDragStart(moveable, e);\n    }\n    datas.datas = {};\n    datas.transform = targetTransform;\n    datas.prevDist = [1, 1];\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.startValue = [1, 1];\n    var scaleWidth = getDist$1(pos1, pos2);\n    var scaleHeight = getDist$1(pos2, pos4);\n    var isWidth = !direction[0] && !direction[1] || direction[0] || !direction[1];\n    datas.scaleWidth = scaleWidth;\n    datas.scaleHeight = scaleHeight;\n    datas.scaleXRatio = scaleWidth / width;\n    datas.scaleYRatio = scaleHeight / height;\n    setDefaultTransformIndex(e, \"scale\");\n    datas.isWidth = isWidth;\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    datas.setFixedDirection = setFixedDirection;\n    setRatio(getDist$1(pos1, pos2) / getDist$1(pos2, pos4));\n    setFixedDirection([-direction[0], -direction[1]]);\n    var params = fillParams(moveable, e, __assign(__assign({\n      direction: direction,\n      set: function (scale) {\n        datas.startValue = scale;\n      },\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection\n    }, fillTransformStartEvent(e)), {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    }));\n    var result = triggerEvent(moveable, \"onScaleStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    if (result !== false) {\n      datas.isScale = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isScale ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    resolveTransformEvent(e, \"scale\");\n    var datas = e.datas,\n      parentKeepRatio = e.parentKeepRatio,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      dragClient = e.dragClient,\n      isRequest = e.isRequest;\n    var prevDist = datas.prevDist,\n      direction = datas.direction,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isScale = datas.isScale,\n      startValue = datas.startValue,\n      isWidth = datas.isWidth,\n      ratio = datas.ratio;\n    if (!isScale) {\n      return false;\n    }\n    var props = moveable.props;\n    var throttleScale = props.throttleScale,\n      parentMoveable = props.parentMoveable;\n    var sizeDirection = direction;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    var state = moveable.state;\n    function getNextScale() {\n      var _a = getOffsetSizeDist(sizeDirection, keepRatio, datas, e),\n        distWidth = _a.distWidth,\n        distHeight = _a.distHeight;\n      var scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n      var scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n      scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n      scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n      if (scaleX === 0) {\n        scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      if (scaleY === 0) {\n        scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      return [scaleX, scaleY];\n    }\n    var scale = getNextScale();\n    if (!isPinch && moveable.props.groupable) {\n      var snapRenderInfo = state.snapRenderInfo || {};\n      var stateDirection = snapRenderInfo.direction;\n      if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n        state.snapRenderInfo = {\n          direction: direction,\n          request: e.isRequest\n        };\n      }\n    }\n    triggerEvent(moveable, \"onBeforeScale\", fillParams(moveable, e, {\n      scale: scale,\n      setFixedDirection: function (nextFixedDirection) {\n        datas.setFixedDirection(nextFixedDirection);\n        scale = getNextScale();\n        return scale;\n      },\n      startFixedDirection: datas.startFixedDirection,\n      setScale: function (nextScale) {\n        scale = nextScale;\n      }\n    }, true));\n    var dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n    var fixedPosition = dragClient;\n    var snapDist = [0, 0];\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    if (!isPinch) {\n      snapDist = checkSnapScale(moveable, dist, direction, isRequest, datas);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        if (isWidth) {\n          dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n        } else {\n          dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n        }\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        dist[0] += snapDist[0];\n        var snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n        dist[1] = snapHeight / startOffsetHeight / startValue[1];\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        dist[1] += snapDist[1];\n        var snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n        dist[0] = snapWidth / startOffsetWidth / startValue[0];\n      }\n    } else {\n      dist[0] += snapDist[0];\n      dist[1] += snapDist[1];\n      if (!snapDist[0]) {\n        dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n      }\n      if (!snapDist[1]) {\n        dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n      }\n    }\n    if (dist[0] === 0) {\n      dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    if (dist[1] === 0) {\n      dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    var delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n    scale = multiply2(dist, startValue);\n    var inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n    var inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n    datas.prevDist = dist;\n    datas.prevInverseDist = inverseDist;\n    if (scale[0] === prevDist[0] && scale[1] === prevDist[1] && inverseDelta.every(function (num) {\n      return !num;\n    }) && !parentMoveable) {\n      return false;\n    }\n    var nextTransform = convertTransformFormat(datas, \"scale(\".concat(scale.join(\", \"), \")\"), \"scale(\".concat(dist.join(\", \"), \")\"));\n    var params = fillParams(moveable, e, __assign({\n      offsetWidth: startOffsetWidth,\n      offsetHeight: startOffsetHeight,\n      direction: direction,\n      scale: scale,\n      dist: dist,\n      delta: delta,\n      isPinch: !!isPinch\n    }, fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e)));\n    triggerEvent(moveable, \"onScale\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return false;\n    }\n    datas.isScale = false;\n    var scaleEndParam = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n    return scaleEndParam;\n  },\n  dragGroupControlCondition: directionCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    datas.moveableScale = moveable.scale;\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events,\n      setFixedDirection: setFixedDirection\n    });\n    var result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n    datas.isScale = result !== false;\n    return datas.isScale ? nextParams : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeScale\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var moveableScale = datas.moveableScale;\n    moveable.scale = [params.scale[0] * moveableScale[0], params.scale[1] * moveableScale[1]];\n    var keepRatio = moveable.props.keepRatio;\n    var dist = params.dist,\n      scale = params.scale;\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * dist[0], ev.datas.originalY * dist[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: scale,\n        parentKeepRatio: keepRatio,\n        dragClient: plus(fixedPosition, [clientX, clientY])\n      });\n    });\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onScaleGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Scalable#request\n   * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"scalable\");\n   *\n   * // request\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function () {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1]\n        };\n      },\n      request: function (e) {\n        distWidth += e.deltaWidth;\n        distHeight += e.deltaHeight;\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction getMiddleLinePos(pos1, pos2) {\n  return pos1.map(function (pos, i) {\n    return dot(pos, pos2[i], 1, 2);\n  });\n}\nfunction getTriangleRad(pos1, pos2, pos3) {\n  // pos1 Rad\n  var rad1 = getRad(pos1, pos2);\n  var rad2 = getRad(pos1, pos3);\n  var rad = rad2 - rad1;\n  return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\nfunction isValidPos(poses1, poses2) {\n  var rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n  var rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n  var pi = Math.PI;\n  if (rad1 >= pi && rad2 <= pi || rad1 <= pi && rad2 >= pi) {\n    return false;\n  }\n  return true;\n}\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\n\nvar Warpable = {\n  name: \"warpable\",\n  ableGroup: \"size\",\n  props: {\n    warpable: Boolean,\n    renderDirections: Array,\n    edge: Boolean\n  },\n  events: {\n    onWarpStart: \"warpStart\",\n    onWarp: \"warp\",\n    onWarpEnd: \"warpEnd\"\n  },\n  viewClassName: getDirectionViewClassName(\"warpable\"),\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      scalable = _a.scalable,\n      warpable = _a.warpable,\n      zoom = _a.zoom;\n    if (resizable || scalable || !warpable) {\n      return [];\n    }\n    var _b = moveable.state,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4;\n    var linePosFrom1 = getMiddleLinePos(pos1, pos2);\n    var linePosFrom2 = getMiddleLinePos(pos2, pos1);\n    var linePosFrom3 = getMiddleLinePos(pos1, pos3);\n    var linePosFrom4 = getMiddleLinePos(pos3, pos1);\n    var linePosTo1 = getMiddleLinePos(pos3, pos4);\n    var linePosTo2 = getMiddleLinePos(pos4, pos3);\n    var linePosTo3 = getMiddleLinePos(pos2, pos4);\n    var linePosTo4 = getMiddleLinePos(pos4, pos2);\n    return __spreadArray([React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine1\",\n      style: getLineStyle(linePosFrom1, linePosTo1, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine2\",\n      style: getLineStyle(linePosFrom2, linePosTo2, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine3\",\n      style: getLineStyle(linePosFrom3, linePosTo3, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine4\",\n      style: getLineStyle(linePosFrom4, linePosTo4, zoom)\n    })], renderAllDirections(moveable, \"warpable\", React), true);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (e.isRequest) {\n      return false;\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      inputEvent = e.inputEvent;\n    var target = moveable.props.target;\n    var inputTarget = inputEvent.target;\n    var direction = getDirection(inputTarget, datas);\n    if (!direction || !target) {\n      return false;\n    }\n    var state = moveable.state;\n    var transformOrigin = state.transformOrigin,\n      is3d = state.is3d,\n      targetTransform = state.targetTransform,\n      targetMatrix = state.targetMatrix,\n      width = state.width,\n      height = state.height,\n      left = state.left,\n      top = state.top;\n    datas.datas = {};\n    datas.targetTransform = targetTransform;\n    datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n    datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n    datas.direction = direction;\n    datas.left = left;\n    datas.top = top;\n    datas.poses = [[0, 0], [width, 0], [0, height], [width, height]].map(function (p) {\n      return minus(p, transformOrigin);\n    });\n    datas.nextPoses = datas.poses.map(function (_a) {\n      var x = _a[0],\n        y = _a[1];\n      return calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4);\n    });\n    datas.startValue = createIdentityMatrix(4);\n    datas.prevMatrix = createIdentityMatrix(4);\n    datas.absolutePoses = getAbsolutePosesByState(state);\n    datas.posIndexes = getPosIndexesByDirection(direction);\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"matrix3d\");\n    state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: direction\n    };\n    var params = fillParams(moveable, e, __assign({\n      set: function (matrix) {\n        datas.startValue = matrix;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = triggerEvent(moveable, \"onWarpStart\", params);\n    if (result !== false) {\n      datas.isWarp = true;\n    }\n    return datas.isWarp;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isRequest = e.isRequest;\n    var distX = e.distX,\n      distY = e.distY;\n    var targetInverseMatrix = datas.targetInverseMatrix,\n      prevMatrix = datas.prevMatrix,\n      isWarp = datas.isWarp,\n      startValue = datas.startValue,\n      poses = datas.poses,\n      posIndexes = datas.posIndexes,\n      absolutePoses = datas.absolutePoses;\n    if (!isWarp) {\n      return false;\n    }\n    resolveTransformEvent(e, \"matrix3d\");\n    if (hasGuidelines(moveable, \"warpable\")) {\n      var selectedPoses = posIndexes.map(function (index) {\n        return absolutePoses[index];\n      });\n      if (selectedPoses.length > 1) {\n        selectedPoses.push([(selectedPoses[0][0] + selectedPoses[1][0]) / 2, (selectedPoses[0][1] + selectedPoses[1][1]) / 2]);\n      }\n      var _a = checkMoveableSnapBounds(moveable, isRequest, {\n          horizontal: selectedPoses.map(function (pos) {\n            return pos[1] + distY;\n          }),\n          vertical: selectedPoses.map(function (pos) {\n            return pos[0] + distX;\n          })\n        }),\n        horizontalSnapInfo = _a.horizontal,\n        verticalSnapInfo = _a.vertical;\n      distY -= horizontalSnapInfo.offset;\n      distX -= verticalSnapInfo.offset;\n    }\n    var dist = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }, true);\n    var nextPoses = datas.nextPoses.slice();\n    posIndexes.forEach(function (index) {\n      nextPoses[index] = plus(nextPoses[index], dist);\n    });\n    if (!NEARBY_POS.every(function (nearByPoses) {\n      return isValidPos(nearByPoses.map(function (i) {\n        return poses[i];\n      }), nearByPoses.map(function (i) {\n        return nextPoses[i];\n      }));\n    })) {\n      return false;\n    }\n    var h = createWarpMatrix(poses[0], poses[2], poses[1], poses[3], nextPoses[0], nextPoses[2], nextPoses[1], nextPoses[3]);\n    if (!h.length) {\n      return false;\n    } // B * A * M\n\n    var afterMatrix = multiply(targetInverseMatrix, h, 4); // B * M * A\n\n    var matrix = getTransfromMatrix(datas, afterMatrix, true);\n    var delta = multiply(invert(prevMatrix, 4), matrix, 4);\n    datas.prevMatrix = matrix;\n    var totalMatrix = multiply(startValue, matrix, 4);\n    var nextTransform = convertTransformFormat(datas, \"matrix3d(\".concat(totalMatrix.join(\", \"), \")\"), \"matrix3d(\".concat(matrix.join(\", \"), \")\"));\n    fillOriginalTransform(e, nextTransform);\n    triggerEvent(moveable, \"onWarp\", fillParams(moveable, e, __assign({\n      delta: delta,\n      matrix: totalMatrix,\n      dist: matrix,\n      multiply: multiply,\n      transform: nextTransform\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      isDrag = e.isDrag;\n    if (!datas.isWarp) {\n      return false;\n    }\n    datas.isWarp = false;\n    triggerEvent(moveable, \"onWarpEnd\", fillEndParams(moveable, e, {}));\n    return isDrag;\n  }\n};\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\nvar AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nvar AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nvar AVOID = /*#__PURE__*/prefix(\"avoid\");\nvar VIEW_DRAGGING = prefix(\"view-dragging\");\nfunction restoreStyle(moveable) {\n  var el = moveable.areaElement;\n  if (!el) {\n    return;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  removeClass(el, AVOID);\n  el.style.cssText += \"left: 0px; top: 0px; width: \".concat(width, \"px; height: \").concat(height, \"px\");\n}\nfunction renderPieces(React) {\n  return React.createElement(\"div\", {\n    key: \"area_pieces\",\n    className: AREA_PIECES\n  }, React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }));\n}\nvar DragArea = {\n  name: \"dragArea\",\n  props: {\n    dragArea: Boolean,\n    passDragArea: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      target = _a.target,\n      dragArea = _a.dragArea,\n      groupable = _a.groupable,\n      passDragArea = _a.passDragArea;\n    var _b = moveable.getState(),\n      width = _b.width,\n      height = _b.height,\n      renderPoses = _b.renderPoses;\n    var className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n    if (groupable) {\n      return [React.createElement(\"div\", {\n        key: \"area\",\n        ref: ref(moveable, \"areaElement\"),\n        className: className\n      }), renderPieces(React)];\n    }\n    if (!target || !dragArea) {\n      return [];\n    }\n    var h = createWarpMatrix([0, 0], [width, 0], [0, height], [width, height], renderPoses[0], renderPoses[1], renderPoses[2], renderPoses[3]);\n    var transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n    return [React.createElement(\"div\", {\n      key: \"area\",\n      ref: ref(moveable, \"areaElement\"),\n      className: className,\n      style: {\n        top: \"0px\",\n        left: \"0px\",\n        width: \"\".concat(width, \"px\"),\n        height: \"\".concat(height, \"px\"),\n        transformOrigin: \"0 0\",\n        transform: transform\n      }\n    }), renderPieces(React)];\n  },\n  dragStart: function (moveable, _a) {\n    var datas = _a.datas,\n      clientX = _a.clientX,\n      clientY = _a.clientY,\n      inputEvent = _a.inputEvent;\n    if (!inputEvent) {\n      return false;\n    }\n    datas.isDragArea = false;\n    var areaElement = moveable.areaElement;\n    var state = moveable.state;\n    var moveableClientRect = state.moveableClientRect,\n      renderPoses = state.renderPoses,\n      rootMatrix = state.rootMatrix,\n      is3d = state.is3d;\n    var left = moveableClientRect.left,\n      top = moveableClientRect.top;\n    var _b = getRect(renderPoses),\n      relativeLeft = _b.left,\n      relativeTop = _b.top,\n      width = _b.width,\n      height = _b.height;\n    var n = is3d ? 4 : 3;\n    var _c = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n),\n      posX = _c[0],\n      posY = _c[1];\n    posX -= relativeLeft;\n    posY -= relativeTop;\n    var rects = [{\n      left: relativeLeft,\n      top: relativeTop,\n      width: width,\n      height: posY - 10\n    }, {\n      left: relativeLeft,\n      top: relativeTop,\n      width: posX - 10,\n      height: height\n    }, {\n      left: relativeLeft,\n      top: relativeTop + posY + 10,\n      width: width,\n      height: height - posY - 10\n    }, {\n      left: relativeLeft + posX + 10,\n      top: relativeTop,\n      width: width - posX - 10,\n      height: height\n    }];\n    var children = [].slice.call(areaElement.nextElementSibling.children);\n    rects.forEach(function (rect, i) {\n      children[i].style.cssText = \"left: \".concat(rect.left, \"px;top: \").concat(rect.top, \"px; width: \").concat(rect.width, \"px; height: \").concat(rect.height, \"px;\");\n    });\n    addClass(areaElement, AVOID);\n    state.disableNativeEvent = true;\n    return;\n  },\n  drag: function (moveable, _a) {\n    var datas = _a.datas,\n      inputEvent = _a.inputEvent;\n    this.enableNativeEvent(moveable);\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      datas.isDragArea = true;\n      restoreStyle(moveable);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    this.enableNativeEvent(moveable);\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      restoreStyle(moveable);\n    }\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  unset: function (moveable) {\n    restoreStyle(moveable);\n    moveable.state.disableNativeEvent = false;\n  },\n  enableNativeEvent: function (moveable) {\n    var state = moveable.state;\n    if (state.disableNativeEvent) {\n      requestAnimationFrame(function () {\n        state.disableNativeEvent = false;\n      });\n    }\n  }\n};\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\nvar Origin = makeAble(\"origin\", {\n  render: function (moveable, React) {\n    var zoom = moveable.props.zoom;\n    var _a = moveable.getState(),\n      beforeOrigin = _a.beforeOrigin,\n      rotation = _a.rotation;\n    return [React.createElement(\"div\", {\n      className: prefix(\"control\", \"origin\"),\n      style: getControlTransform(rotation, zoom, beforeOrigin),\n      key: \"beforeOrigin\"\n    })];\n  }\n});\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n\nfunction getDefaultScrollPosition(e) {\n  var scrollContainer = e.scrollContainer;\n  return [scrollContainer.scrollLeft, scrollContainer.scrollTop];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\n\nvar Scrollable = {\n  name: \"scrollable\",\n  canPinch: true,\n  props: {\n    scrollable: Boolean,\n    scrollContainer: Object,\n    scrollThreshold: Number,\n    scrollThrottleTime: Number,\n    getScrollPosition: Function,\n    scrollOptions: Object\n  },\n  events: {\n    onScroll: \"scroll\",\n    onScrollGroup: \"scrollGroup\"\n  },\n  dragRelation: \"strong\",\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.scrollContainer,\n      scrollContainer = _a === void 0 ? moveable.getContainer() : _a,\n      scrollOptions = props.scrollOptions;\n    var dragScroll = new DragScroll();\n    var scrollContainerElement = getRefTarget(scrollContainer, true);\n    e.datas.dragScroll = dragScroll;\n    moveable.state.dragScroll = dragScroll;\n    var gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n    var targets = e.targets;\n    dragScroll.on(\"scroll\", function (_a) {\n      var container = _a.container,\n        direction = _a.direction;\n      var params = fillParams(moveable, e, {\n        scrollContainer: container,\n        direction: direction\n      });\n      var eventName = targets ? \"onScrollGroup\" : \"onScroll\";\n      if (targets) {\n        params.targets = targets;\n      }\n      triggerEvent(moveable, eventName, params);\n    }).on(\"move\", function (_a) {\n      var offsetX = _a.offsetX,\n        offsetY = _a.offsetY,\n        inputEvent = _a.inputEvent;\n      moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, true);\n    }).on(\"scrollDrag\", function (_a) {\n      var next = _a.next;\n      next(moveable[gestoName].getCurrentEvent());\n    });\n    dragScroll.dragStart(e, __assign({\n      container: scrollContainerElement\n    }, scrollOptions));\n  },\n  checkScroll: function (moveable, e) {\n    var dragScroll = e.datas.dragScroll;\n    if (!dragScroll) {\n      return;\n    }\n    var _a = moveable.props,\n      _b = _a.scrollContainer,\n      scrollContainer = _b === void 0 ? moveable.getContainer() : _b,\n      _c = _a.scrollThreshold,\n      scrollThreshold = _c === void 0 ? 0 : _c,\n      _d = _a.scrollThrottleTime,\n      scrollThrottleTime = _d === void 0 ? 0 : _d,\n      _e = _a.getScrollPosition,\n      getScrollPosition = _e === void 0 ? getDefaultScrollPosition : _e,\n      scrollOptions = _a.scrollOptions;\n    dragScroll.drag(e, __assign({\n      container: scrollContainer,\n      threshold: scrollThreshold,\n      throttleTime: scrollThrottleTime,\n      getScrollPosition: function (ev) {\n        return getScrollPosition({\n          scrollContainer: ev.container,\n          direction: ev.direction\n        });\n      }\n    }, scrollOptions));\n    return true;\n  },\n  drag: function (moveable, e) {\n    return this.checkScroll(moveable, e);\n  },\n  dragEnd: function (moveable, e) {\n    e.datas.dragScroll.dragEnd();\n    e.datas.dragScroll = null;\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      isControl: true\n    }));\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets,\n      isControl: true\n    }));\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  unset: function (moveable) {\n    var _a;\n    var state = moveable.state;\n    (_a = state.dragScroll) === null || _a === void 0 ? void 0 : _a.dragEnd();\n    state.dragScroll = null;\n  }\n};\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\nvar Default = {\n  name: \"\",\n  props: {\n    target: Object,\n    dragTarget: Object,\n    container: Object,\n    portalContainer: Object,\n    rootContainer: Object,\n    useResizeObserver: Boolean,\n    zoom: Number,\n    transformOrigin: Array,\n    edge: Object,\n    ables: Array,\n    className: String,\n    pinchThreshold: Number,\n    pinchOutside: Boolean,\n    triggerAblesSimultaneously: Boolean,\n    checkInput: Boolean,\n    cspNonce: String,\n    translateZ: Number,\n    hideDefaultLines: Boolean,\n    props: Object,\n    flushSync: Function,\n    stopPropagation: Boolean,\n    preventClickEventOnDrag: Boolean,\n    preventClickDefault: Boolean,\n    viewContainer: Object,\n    persistData: Object,\n    useAccuratePosition: Boolean,\n    firstRenderState: Object,\n    linePadding: Boolean\n  },\n  events: {\n    onChangeTargets: \"changeTargets\"\n  }\n};\nvar Padding = makeAble(\"padding\", {\n  render: function (moveable, React) {\n    var props = moveable.props;\n    if (props.dragArea) {\n      return [];\n    }\n    var padding = props.padding || {};\n    var _a = padding.left,\n      left = _a === void 0 ? 0 : _a,\n      _b = padding.top,\n      top = _b === void 0 ? 0 : _b,\n      _c = padding.right,\n      right = _c === void 0 ? 0 : _c,\n      _d = padding.bottom,\n      bottom = _d === void 0 ? 0 : _d;\n    var _e = moveable.getState(),\n      renderPoses = _e.renderPoses,\n      pos1 = _e.pos1,\n      pos2 = _e.pos2,\n      pos3 = _e.pos3,\n      pos4 = _e.pos4;\n    var poses = [pos1, pos2, pos3, pos4];\n    var paddingDirections = [];\n    if (left > 0) {\n      paddingDirections.push([0, 2]);\n    }\n    if (top > 0) {\n      paddingDirections.push([0, 1]);\n    }\n    if (right > 0) {\n      paddingDirections.push([1, 3]);\n    }\n    if (bottom > 0) {\n      paddingDirections.push([2, 3]);\n    }\n    return paddingDirections.map(function (_a, i) {\n      var dir1 = _a[0],\n        dir2 = _a[1];\n      var paddingPos1 = poses[dir1];\n      var paddingPos2 = poses[dir2];\n      var paddingPos3 = renderPoses[dir1];\n      var paddingPos4 = renderPoses[dir2];\n      var h = createWarpMatrix([0, 0], [100, 0], [0, 100], [100, 100], paddingPos1, paddingPos2, paddingPos3, paddingPos4);\n      if (!h.length) {\n        return undefined;\n      }\n      return React.createElement(\"div\", {\n        key: \"padding\".concat(i),\n        className: prefix(\"padding\"),\n        style: {\n          transform: makeMatrixCSS(h, true)\n        }\n      });\n    });\n  }\n});\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n\nvar RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"];\nfunction calculateRatio(values, size) {\n  var sumSize = values[0] + values[1];\n  var sumRatio = sumSize > size ? size / sumSize : 1;\n  values[0] *= sumRatio;\n  values[1] = size - values[1] * sumRatio;\n  return values;\n}\nvar HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nvar VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nvar HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1];\nvar VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1];\nfunction getRadiusStyles(nextPoses, isRelative, width, height, left, top, right, bottom) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  if (right === void 0) {\n    right = width;\n  }\n  if (bottom === void 0) {\n    bottom = height;\n  }\n  var clipStyles = [];\n  var isVertical = false;\n  var radiusPoses = nextPoses.filter(function (pos) {\n    return !pos.virtual;\n  });\n  var raws = radiusPoses.map(function (posInfo) {\n    var horizontal = posInfo.horizontal,\n      vertical = posInfo.vertical,\n      pos = posInfo.pos;\n    if (vertical && !isVertical) {\n      isVertical = true;\n      clipStyles.push(\"/\");\n    }\n    if (isVertical) {\n      var rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n      clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n      return rawPos;\n    } else {\n      var rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n      clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n      return rawPos;\n    }\n  });\n  return {\n    radiusPoses: radiusPoses,\n    styles: clipStyles,\n    raws: raws\n  };\n}\nfunction getRadiusRange(controlPoses) {\n  // [start, length]\n  var horizontalRange = [0, 0];\n  var verticalRange = [0, 0];\n  var length = controlPoses.length;\n  for (var i = 0; i < length; ++i) {\n    var clipPose = controlPoses[i];\n    if (!clipPose.sub) {\n      continue;\n    }\n    if (clipPose.horizontal) {\n      if (horizontalRange[1] === 0) {\n        horizontalRange[0] = i;\n      }\n      horizontalRange[1] = i - horizontalRange[0] + 1;\n      verticalRange[0] = i + 1;\n    }\n    if (clipPose.vertical) {\n      if (verticalRange[1] === 0) {\n        verticalRange[0] = i;\n      }\n      verticalRange[1] = i - verticalRange[0] + 1;\n    }\n  }\n  return {\n    horizontalRange: horizontalRange,\n    verticalRange: verticalRange\n  };\n}\nfunction getRadiusValues(values, width, height, left, top, minCounts, full) {\n  var _a, _b, _c, _d;\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  if (full === void 0) {\n    full = false;\n  }\n  var splitIndex = values.indexOf(\"/\");\n  var splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n  var horizontalValues = values.slice(0, splitLength);\n  var verticalValues = values.slice(splitLength + 1);\n  var horizontalValuesLength = horizontalValues.length;\n  var verticalValuesLength = verticalValues.length;\n  var hasVerticalValues = verticalValuesLength > 0;\n  var _e = horizontalValues[0],\n    nwValue = _e === void 0 ? \"0px\" : _e,\n    _f = horizontalValues[1],\n    neValue = _f === void 0 ? nwValue : _f,\n    _g = horizontalValues[2],\n    seValue = _g === void 0 ? nwValue : _g,\n    _h = horizontalValues[3],\n    swValue = _h === void 0 ? neValue : _h;\n  var _j = verticalValues[0],\n    wnValue = _j === void 0 ? nwValue : _j,\n    _k = verticalValues[1],\n    enValue = _k === void 0 ? hasVerticalValues ? wnValue : neValue : _k,\n    _l = verticalValues[2],\n    esValue = _l === void 0 ? hasVerticalValues ? wnValue : seValue : _l,\n    _m = verticalValues[3],\n    wsValue = _m === void 0 ? hasVerticalValues ? enValue : swValue : _m;\n  var horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(function (pos) {\n    return convertUnitSize(pos, width);\n  });\n  var verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(function (pos) {\n    return convertUnitSize(pos, height);\n  });\n  var horizontalPoses = horizontalRawPoses.slice();\n  var verticalPoses = verticalRawPoses.slice();\n  _a = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width), horizontalPoses[0] = _a[0], horizontalPoses[1] = _a[1];\n  _b = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width), horizontalPoses[3] = _b[0], horizontalPoses[2] = _b[1];\n  _c = calculateRatio([verticalPoses[0], verticalPoses[3]], height), verticalPoses[0] = _c[0], verticalPoses[3] = _c[1];\n  _d = calculateRatio([verticalPoses[1], verticalPoses[2]], height), verticalPoses[1] = _d[0], verticalPoses[2] = _d[1];\n  var nextHorizontalPoses = full ? horizontalPoses : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n  var nextVerticalPoses = full ? verticalPoses : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n  return __spreadArray(__spreadArray([], nextHorizontalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= horizontalValuesLength,\n      horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n      vertical: 0,\n      pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n      sub: true,\n      raw: horizontalRawPoses[i],\n      direction: direction\n    };\n  }), true), nextVerticalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= verticalValuesLength,\n      horizontal: 0,\n      vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n      pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n      sub: true,\n      raw: verticalRawPoses[i],\n      direction: direction\n    };\n  }), true);\n}\nfunction removeRadiusPos(controlPoses, poses, index, startIndex, length) {\n  if (length === void 0) {\n    length = poses.length;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  var radiuslIndex = index - startIndex;\n  var deleteCount = 0;\n  if (radiuslIndex === 0) {\n    deleteCount = length;\n  } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n    deleteCount = horizontalRange[1] - radiuslIndex;\n  } else if (radiuslIndex >= verticalRange[0]) {\n    deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n  } else {\n    return;\n  }\n  controlPoses.splice(index, deleteCount);\n  poses.splice(index, deleteCount);\n}\nfunction addRadiusPos(controlPoses, poses, startIndex, horizontalIndex, verticalIndex, distX, distY, right, bottom, left, top) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  if (horizontalIndex > -1) {\n    var radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1 ? distX - left : right - distX;\n    for (var i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n      var y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n      var x = 0;\n      if (horizontalIndex === i) {\n        x = distX;\n      } else if (i === 0) {\n        x = left + radiusX;\n      } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n        x = right - (poses[startIndex][0] - left);\n      }\n      controlPoses.splice(startIndex + i, 0, {\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n        vertical: 0,\n        pos: [x, y]\n      });\n      poses.splice(startIndex + i, 0, [x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  } else if (verticalIndex > -1) {\n    var radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1 ? distY - top : bottom - distY;\n    if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n      var pos = [left + radiusY, top];\n      controlPoses.push({\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n        vertical: 0,\n        pos: pos\n      });\n      poses.push(pos);\n    }\n    var startVerticalIndex = verticalRange[0];\n    for (var i = verticalRange[1]; i <= verticalIndex; ++i) {\n      var x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n      var y = 0;\n      if (verticalIndex === i) {\n        y = distY;\n      } else if (i === 0) {\n        y = top + radiusY;\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n        y = poses[startIndex + startVerticalIndex][1];\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n        y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n      }\n      controlPoses.push({\n        horizontal: 0,\n        vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n        pos: [x, y]\n      });\n      poses.push([x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  }\n}\nfunction splitRadiusPoses(controlPoses, raws) {\n  if (raws === void 0) {\n    raws = controlPoses.map(function (pos) {\n      return pos.raw;\n    });\n  }\n  var horizontals = controlPoses.map(function (pos, i) {\n    return pos.horizontal ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  var verticals = controlPoses.map(function (pos, i) {\n    return pos.vertical ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  return {\n    horizontals: horizontals,\n    verticals: verticals\n  };\n}\nvar CLIP_DIRECTIONS = [[0, -1, \"n\"], [1, 0, \"e\"]];\nvar CLIP_RECT_DIRECTIONS = [[-1, -1, \"nw\"], [0, -1, \"n\"], [1, -1, \"ne\"], [1, 0, \"e\"], [1, 1, \"se\"], [0, 1, \"s\"], [-1, 1, \"sw\"], [-1, 0, \"w\"]]; // 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(moveable, clipPath, poses) {\n  var clipRelative = moveable.props.clipRelative;\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses;\n  var isRect = clipType === \"rect\";\n  var isCircle = clipType === \"circle\";\n  if (clipType === \"polygon\") {\n    return poses.map(function (pos) {\n      return \"\".concat(convertCSSSize(pos[0], width, clipRelative), \" \").concat(convertCSSSize(pos[1], height, clipRelative));\n    });\n  } else if (isRect || clipType === \"inset\") {\n    var top = poses[1][1];\n    var right = poses[3][0];\n    var left = poses[7][0];\n    var bottom = poses[5][1];\n    if (isRect) {\n      return [top, right, bottom, left].map(function (pos) {\n        return \"\".concat(pos, \"px\");\n      });\n    }\n    var clipStyles = [top, width - right, height - bottom, left].map(function (pos, i) {\n      return convertCSSSize(pos, i % 2 ? width : height, clipRelative);\n    });\n    if (poses.length > 8) {\n      var _c = minus(poses[4], poses[0]),\n        subWidth = _c[0],\n        subHeight = _c[1];\n      clipStyles.push.apply(clipStyles, __spreadArray([\"round\"], getRadiusStyles(clipPoses.slice(8).map(function (info, i) {\n        return __assign(__assign({}, info), {\n          pos: poses[i]\n        });\n      }), clipRelative, subWidth, subHeight, left, top, right, bottom).styles, false));\n    }\n    return clipStyles;\n  } else if (isCircle || clipType === \"ellipse\") {\n    var center = poses[0];\n    var ry = convertCSSSize(Math.abs(poses[1][1] - center[1]), isCircle ? Math.sqrt((width * width + height * height) / 2) : height, clipRelative);\n    var clipStyles = isCircle ? [ry] : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n    clipStyles.push(\"at\", convertCSSSize(center[0], width, clipRelative), convertCSSSize(center[1], height, clipRelative));\n    return clipStyles;\n  }\n}\nfunction getRectPoses(top, right, bottom, left) {\n  var xs = [left, (left + right) / 2, right];\n  var ys = [top, (top + bottom) / 2, bottom];\n  return CLIP_RECT_DIRECTIONS.map(function (_a) {\n    var dirx = _a[0],\n      diry = _a[1],\n      dir = _a[2];\n    var x = xs[dirx + 1];\n    var y = ys[diry + 1];\n    return {\n      vertical: Math.abs(diry),\n      horizontal: Math.abs(dirx),\n      direction: dir,\n      pos: [x, y]\n    };\n  });\n}\nfunction getControlSize(controlPoses) {\n  var xRange = [Infinity, -Infinity];\n  var yRange = [Infinity, -Infinity];\n  controlPoses.forEach(function (_a) {\n    var pos = _a.pos;\n    xRange[0] = Math.min(xRange[0], pos[0]);\n    xRange[1] = Math.max(xRange[1], pos[0]);\n    yRange[0] = Math.min(yRange[0], pos[1]);\n    yRange[1] = Math.max(yRange[1], pos[1]);\n  });\n  return [Math.abs(xRange[1] - xRange[0]), Math.abs(yRange[1] - yRange[0])];\n}\nfunction getClipPath(target, width, height, defaultClip, customClip) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  if (!target) {\n    return;\n  }\n  var clipText = customClip;\n  if (!clipText) {\n    var style = getComputedStyle(target);\n    var clipPath = style.clipPath;\n    clipText = clipPath !== \"none\" ? clipPath : style.clip;\n  }\n  if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n    clipText = defaultClip;\n    if (!clipText) {\n      return;\n    }\n  }\n  var _h = splitBracket(clipText),\n    _j = _h.prefix,\n    clipPrefix = _j === void 0 ? clipText : _j,\n    _k = _h.value,\n    value = _k === void 0 ? \"\" : _k;\n  var isCircle = clipPrefix === \"circle\";\n  var splitter = \" \";\n  if (clipPrefix === \"polygon\") {\n    var values = splitComma(value || \"0% 0%, 100% 0%, 100% 100%, 0% 100%\");\n    splitter = \",\";\n    var poses = values.map(function (pos) {\n      var _a = pos.split(\" \"),\n        xPos = _a[0],\n        yPos = _a[1];\n      return {\n        vertical: 1,\n        horizontal: 1,\n        pos: [convertUnitSize(xPos, width), convertUnitSize(yPos, height)]\n      };\n    });\n    var minMaxs = getMinMaxs(poses.map(function (pos) {\n      return pos.pos;\n    }));\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      poses: poses,\n      splitter: splitter,\n      left: minMaxs.minX,\n      right: minMaxs.maxX,\n      top: minMaxs.minY,\n      bottom: minMaxs.maxY\n    };\n  } else if (isCircle || clipPrefix === \"ellipse\") {\n    var xPos = \"\";\n    var yPos = \"\";\n    var radiusX_1 = 0;\n    var radiusY_1 = 0;\n    var values = splitSpace(value);\n    if (isCircle) {\n      var radius = \"\";\n      _a = values[0], radius = _a === void 0 ? \"50%\" : _a, _b = values[2], xPos = _b === void 0 ? \"50%\" : _b, _c = values[3], yPos = _c === void 0 ? \"50%\" : _c;\n      radiusX_1 = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n      radiusY_1 = radiusX_1;\n    } else {\n      var xRadius = \"\";\n      var yRadius = \"\";\n      _d = values[0], xRadius = _d === void 0 ? \"50%\" : _d, _e = values[1], yRadius = _e === void 0 ? \"50%\" : _e, _f = values[3], xPos = _f === void 0 ? \"50%\" : _f, _g = values[4], yPos = _g === void 0 ? \"50%\" : _g;\n      radiusX_1 = convertUnitSize(xRadius, width);\n      radiusY_1 = convertUnitSize(yRadius, height);\n    }\n    var centerPos_1 = [convertUnitSize(xPos, width), convertUnitSize(yPos, height)];\n    var poses = __spreadArray([{\n      vertical: 1,\n      horizontal: 1,\n      pos: centerPos_1,\n      direction: \"nesw\"\n    }], CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(function (dir) {\n      return {\n        vertical: Math.abs(dir[1]),\n        horizontal: dir[0],\n        direction: dir[2],\n        sub: true,\n        pos: [centerPos_1[0] + dir[0] * radiusX_1, centerPos_1[1] + dir[1] * radiusY_1]\n      };\n    }), true);\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      radiusX: radiusX_1,\n      radiusY: radiusY_1,\n      left: centerPos_1[0] - radiusX_1,\n      top: centerPos_1[1] - radiusY_1,\n      right: centerPos_1[0] + radiusX_1,\n      bottom: centerPos_1[1] + radiusY_1,\n      poses: poses,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"inset\") {\n    var values = splitSpace(value || \"0 0 0 0\");\n    var roundIndex = values.indexOf(\"round\");\n    var rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n    var radiusValues = values.slice(rectLength + 1);\n    var _l = values.slice(0, rectLength),\n      topValue = _l[0],\n      _m = _l[1],\n      rightValue = _m === void 0 ? topValue : _m,\n      _o = _l[2],\n      bottomValue = _o === void 0 ? topValue : _o,\n      _p = _l[3],\n      leftValue = _p === void 0 ? rightValue : _p;\n    var _q = [topValue, bottomValue].map(function (pos) {\n        return convertUnitSize(pos, height);\n      }),\n      top = _q[0],\n      bottom = _q[1];\n    var _r = [leftValue, rightValue].map(function (pos) {\n        return convertUnitSize(pos, width);\n      }),\n      left = _r[0],\n      right = _r[1];\n    var nextRight = width - right;\n    var nextBottom = height - bottom;\n    var radiusPoses = getRadiusValues(radiusValues, nextRight - left, nextBottom - top, left, top);\n    var poses = __spreadArray(__spreadArray([], getRectPoses(top, nextRight, nextBottom, left), true), radiusPoses, true);\n    return {\n      type: \"inset\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      left: left,\n      right: nextRight,\n      bottom: nextBottom,\n      radius: radiusValues,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"rect\") {\n    // top right bottom left\n    var values = splitComma(value || \"0px, \".concat(width, \"px, \").concat(height, \"px, 0px\"));\n    splitter = \",\";\n    var _s = values.map(function (pos) {\n        var posValue = splitUnit(pos).value;\n        return posValue;\n      }),\n      top = _s[0],\n      right = _s[1],\n      bottom = _s[2],\n      left = _s[3];\n    var poses = getRectPoses(top, right, bottom, left);\n    return {\n      type: \"rect\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left,\n      values: values,\n      splitter: splitter\n    };\n  }\n  return;\n}\nfunction moveControlPos(controlPoses, index, dist, isRect, keepRatio) {\n  var _a = controlPoses[index],\n    direction = _a.direction,\n    sub = _a.sub;\n  var dists = controlPoses.map(function () {\n    return [0, 0];\n  });\n  var directions = direction ? direction.split(\"\") : [];\n  if (isRect && index < 8) {\n    var verticalDirections = directions.filter(function (dir) {\n      return dir === \"w\" || dir === \"e\";\n    });\n    var horizontalDirections = directions.filter(function (dir) {\n      return dir === \"n\" || dir === \"s\";\n    });\n    var verticalDirection_1 = verticalDirections[0];\n    var horizontalDirection_1 = horizontalDirections[0];\n    dists[index] = dist;\n    var _b = getControlSize(controlPoses),\n      width = _b[0],\n      height = _b[1];\n    var ratio = width && height ? width / height : 0;\n    if (ratio && keepRatio) {\n      // 0 1 2\n      // 7   3\n      // 6 5 4\n      var fixedIndex = (index + 4) % 8;\n      var fixedPosition = controlPoses[fixedIndex].pos;\n      var sizeDirection = [0, 0];\n      if (direction.indexOf(\"w\") > -1) {\n        sizeDirection[0] = -1;\n      } else if (direction.indexOf(\"e\") > -1) {\n        sizeDirection[0] = 1;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        sizeDirection[1] = -1;\n      } else if (direction.indexOf(\"s\") > -1) {\n        sizeDirection[1] = 1;\n      }\n      var nextDist = getSizeDistByDist([width, height], dist, ratio, sizeDirection, true);\n      var nextWidth = width + nextDist[0];\n      var nextHeight = height + nextDist[1];\n      var top = fixedPosition[1];\n      var bottom = fixedPosition[1];\n      var left = fixedPosition[0];\n      var right = fixedPosition[0];\n      if (sizeDirection[0] === -1) {\n        left = right - nextWidth;\n      } else if (sizeDirection[0] === 1) {\n        right = left + nextWidth;\n      } else {\n        left = left - nextWidth / 2;\n        right = right + nextWidth / 2;\n      }\n      if (sizeDirection[1] === -1) {\n        top = bottom - nextHeight;\n      } else if (sizeDirection[1] === 1) {\n        bottom = top + nextHeight;\n      } else {\n        top = bottom - nextHeight / 2;\n        bottom = top + nextHeight;\n      }\n      var nextControlPoses_1 = getRectPoses(top, right, bottom, left);\n      controlPoses.forEach(function (controlPose, i) {\n        dists[i][0] = nextControlPoses_1[i].pos[0] - controlPose.pos[0];\n        dists[i][1] = nextControlPoses_1[i].pos[1] - controlPose.pos[1];\n      });\n    } else {\n      controlPoses.forEach(function (controlPose, i) {\n        var controlDir = controlPose.direction;\n        if (!controlDir) {\n          return;\n        }\n        if (controlDir.indexOf(verticalDirection_1) > -1) {\n          dists[i][0] = dist[0];\n        }\n        if (controlDir.indexOf(horizontalDirection_1) > -1) {\n          dists[i][1] = dist[1];\n        }\n      });\n      if (verticalDirection_1) {\n        dists[1][0] = dist[0] / 2;\n        dists[5][0] = dist[0] / 2;\n      }\n      if (horizontalDirection_1) {\n        dists[3][1] = dist[1] / 2;\n        dists[7][1] = dist[1] / 2;\n      }\n    }\n  } else if (direction && !sub) {\n    directions.forEach(function (dir) {\n      var isVertical = dir === \"n\" || dir === \"s\";\n      controlPoses.forEach(function (controlPose, i) {\n        var dirDir = controlPose.direction,\n          dirHorizontal = controlPose.horizontal,\n          dirVertical = controlPose.vertical;\n        if (!dirDir || dirDir.indexOf(dir) === -1) {\n          return;\n        }\n        dists[i] = [isVertical || !dirHorizontal ? 0 : dist[0], !isVertical || !dirVertical ? 0 : dist[1]];\n      });\n    });\n  } else {\n    dists[index] = dist;\n  }\n  return dists;\n}\nfunction addClipPath(moveable, e) {\n  var _a = calculatePointerDist(moveable, e),\n    distX = _a[0],\n    distY = _a[1];\n  var _b = e.datas,\n    clipPath = _b.clipPath,\n    clipIndex = _b.clipIndex;\n  var _c = clipPath,\n    clipType = _c.type,\n    clipPoses = _c.poses,\n    splitter = _c.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  if (clipType === \"polygon\") {\n    poses.splice(clipIndex, 0, [distX, distY]);\n  } else if (clipType === \"inset\") {\n    var horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n    var verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n    var length = clipPoses.length;\n    addRadiusPos(clipPoses, poses, 8, horizontalIndex, verticalIndex, distX, distY, poses[4][0], poses[4][1], poses[0][0], poses[0][1]);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"added\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\nfunction removeClipPath(moveable, e) {\n  var _a = e.datas,\n    clipPath = _a.clipPath,\n    clipIndex = _a.clipIndex;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses,\n    splitter = _b.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  var length = poses.length;\n  if (clipType === \"polygon\") {\n    clipPoses.splice(clipIndex, 1);\n    poses.splice(clipIndex, 1);\n  } else if (clipType === \"inset\") {\n    if (clipIndex < 8) {\n      return;\n    }\n    removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"removed\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nvar Clippable = {\n  name: \"clippable\",\n  props: {\n    clippable: Boolean,\n    defaultClipPath: String,\n    customClipPath: String,\n    keepRatio: Boolean,\n    clipRelative: Boolean,\n    clipArea: Boolean,\n    dragWithClip: Boolean,\n    clipTargetBounds: Boolean,\n    clipVerticalGuidelines: Array,\n    clipHorizontalGuidelines: Array,\n    clipSnapThreshold: Boolean\n  },\n  events: {\n    onClipStart: \"clipStart\",\n    onClip: \"clip\",\n    onClipEnd: \"clipEnd\"\n  },\n  css: [\".control.clip-control {\\n    background: #6d6;\\n    cursor: pointer;\\n}\\n.control.clip-control.clip-radius {\\n    background: #d66;\\n}\\n.line.clip-line {\\n    background: #6e6;\\n    cursor: move;\\n    z-index: 1;\\n}\\n.clip-area {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.clip-ellipse {\\n    position: absolute;\\n    cursor: move;\\n    border: 1px solid #6d6;\\n    border: var(--zoompx) solid #6d6;\\n    border-radius: 50%;\\n    transform-origin: 0px 0px;\\n}\", \":host {\\n    --bounds-color: #d66;\\n}\", \".guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\", \".line.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      customClipPath = _a.customClipPath,\n      defaultClipPath = _a.defaultClipPath,\n      clipArea = _a.clipArea,\n      zoom = _a.zoom,\n      groupable = _a.groupable;\n    var _b = moveable.getState(),\n      target = _b.target,\n      width = _b.width,\n      height = _b.height,\n      allMatrix = _b.allMatrix,\n      is3d = _b.is3d,\n      left = _b.left,\n      top = _b.top,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4,\n      clipPathState = _b.clipPathState,\n      snapBoundInfos = _b.snapBoundInfos,\n      rotationRad = _b.rotation;\n    if (!target || groupable) {\n      return [];\n    }\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n    if (!clipPath) {\n      return [];\n    }\n    var n = is3d ? 4 : 3;\n    var type = clipPath.type;\n    var clipPoses = clipPath.poses;\n    var poses = clipPoses.map(function (pos) {\n      // return [x, y];\n      var calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n      return [calculatedPos[0] - left, calculatedPos[1] - top];\n    });\n    var controls = [];\n    var lines = [];\n    var isRect = type === \"rect\";\n    var isInset = type === \"inset\";\n    var isPolygon = type === \"polygon\";\n    if (isRect || isInset || isPolygon) {\n      var linePoses_1 = isInset ? poses.slice(0, 8) : poses;\n      lines = linePoses_1.map(function (to, i) {\n        var from = i === 0 ? linePoses_1[linePoses_1.length - 1] : linePoses_1[i - 1];\n        var rad = getRad(from, to);\n        var dist = getDiagonalSize(from, to);\n        return React.createElement(\"div\", {\n          key: \"clipLine\".concat(i),\n          className: prefix(\"line\", \"clip-line\", \"snap-control\"),\n          \"data-clip-index\": i,\n          style: {\n            width: \"\".concat(dist, \"px\"),\n            transform: \"translate(\".concat(from[0], \"px, \").concat(from[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n          }\n        });\n      });\n    }\n    controls = poses.map(function (pos, i) {\n      return React.createElement(\"div\", {\n        key: \"clipControl\".concat(i),\n        className: prefix(\"control\", \"clip-control\", \"snap-control\"),\n        \"data-clip-index\": i,\n        style: {\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n    if (isInset) {\n      controls.push.apply(controls, poses.slice(8).map(function (pos, i) {\n        return React.createElement(\"div\", {\n          key: \"clipRadiusControl\".concat(i),\n          className: prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\"),\n          \"data-clip-index\": 8 + i,\n          style: {\n            transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n          }\n        });\n      }));\n    }\n    if (type === \"circle\" || type === \"ellipse\") {\n      var clipLeft = clipPath.left,\n        clipTop = clipPath.top,\n        radiusX = clipPath.radiusX,\n        radiusY = clipPath.radiusY;\n      var _c = minus(calculatePosition(allMatrix, [clipLeft, clipTop], n), calculatePosition(allMatrix, [0, 0], n)),\n        distLeft = _c[0],\n        distTop = _c[1];\n      var ellipseClipPath = \"none\";\n      if (!clipArea) {\n        var piece = Math.max(10, radiusX / 5, radiusY / 5);\n        var areaPoses = [];\n        for (var i = 0; i <= piece; ++i) {\n          var rad = Math.PI * 2 / piece * i;\n          areaPoses.push([radiusX + (radiusX - zoom) * Math.cos(rad), radiusY + (radiusY - zoom) * Math.sin(rad)]);\n        }\n        areaPoses.push([radiusX, -2]);\n        areaPoses.push([-2, -2]);\n        areaPoses.push([-2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, -2]);\n        areaPoses.push([radiusX, -2]);\n        ellipseClipPath = \"polygon(\".concat(areaPoses.map(function (pos) {\n          return \"\".concat(pos[0], \"px \").concat(pos[1], \"px\");\n        }).join(\", \"), \")\");\n      }\n      controls.push(React.createElement(\"div\", {\n        key: \"clipEllipse\",\n        className: prefix(\"clip-ellipse\", \"snap-control\"),\n        style: {\n          width: \"\".concat(radiusX * 2, \"px\"),\n          height: \"\".concat(radiusY * 2, \"px\"),\n          clipPath: ellipseClipPath,\n          transform: \"translate(\".concat(-left + distLeft, \"px, \").concat(-top + distTop, \"px) \").concat(makeMatrixCSS(allMatrix))\n        }\n      }));\n    }\n    if (clipArea) {\n      var _d = getRect(__spreadArray([pos1, pos2, pos3, pos4], poses, true)),\n        allWidth = _d.width,\n        allHeight = _d.height,\n        allLeft_1 = _d.left,\n        allTop_1 = _d.top;\n      if (isPolygon || isRect || isInset) {\n        var areaPoses = isInset ? poses.slice(0, 8) : poses;\n        controls.push(React.createElement(\"div\", {\n          key: \"clipArea\",\n          className: prefix(\"clip-area\", \"snap-control\"),\n          style: {\n            width: \"\".concat(allWidth, \"px\"),\n            height: \"\".concat(allHeight, \"px\"),\n            transform: \"translate(\".concat(allLeft_1, \"px, \").concat(allTop_1, \"px)\"),\n            clipPath: \"polygon(\".concat(areaPoses.map(function (pos) {\n              return \"\".concat(pos[0] - allLeft_1, \"px \").concat(pos[1] - allTop_1, \"px\");\n            }).join(\", \"), \")\")\n          }\n        }));\n      }\n    }\n    if (snapBoundInfos) {\n      [\"vertical\", \"horizontal\"].forEach(function (directionType) {\n        var info = snapBoundInfos[directionType];\n        var isHorizontal = directionType === \"horizontal\";\n        if (info.isSnap) {\n          lines.push.apply(lines, info.snap.posInfos.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"snap\").concat(i), \"guideline\");\n          }));\n        }\n        if (info.isBound) {\n          lines.push.apply(lines, info.bounds.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"bounds\").concat(i), \"guideline\", \"bounds\", \"bold\");\n          }));\n        }\n      });\n    }\n    return __spreadArray(__spreadArray([], controls, true), lines, true);\n  },\n  dragControlCondition: function (moveable, e) {\n    return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n  },\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.dragWithClip,\n      dragWithClip = _a === void 0 ? true : _a;\n    if (dragWithClip) {\n      return false;\n    }\n    return this.dragControlStart(moveable, e);\n  },\n  drag: function (moveable, e) {\n    return this.dragControl(moveable, __assign(__assign({}, e), {\n      isDragTarget: true\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    return this.dragControlEnd(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var state = moveable.state;\n    var _a = moveable.props,\n      defaultClipPath = _a.defaultClipPath,\n      customClipPath = _a.customClipPath;\n    var target = state.target,\n      width = state.width,\n      height = state.height;\n    var inputTarget = e.inputEvent ? e.inputEvent.target : null;\n    var className = inputTarget && inputTarget.getAttribute(\"class\") || \"\";\n    var datas = e.datas;\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", customClipPath);\n    if (!clipPath) {\n      return false;\n    }\n    var clipText = clipPath.clipText,\n      type = clipPath.type,\n      poses = clipPath.poses;\n    var result = triggerEvent(moveable, \"onClipStart\", fillParams(moveable, e, {\n      clipType: type,\n      clipStyle: clipText,\n      poses: poses.map(function (pos) {\n        return pos.pos;\n      })\n    }));\n    if (result === false) {\n      datas.isClipStart = false;\n      return false;\n    }\n    datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n    datas.isLine = className.indexOf(\"clip-line\") > -1;\n    datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n    datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n    datas.clipPath = clipPath;\n    datas.isClipStart = true;\n    state.clipPathState = clipText;\n    setDragStart(moveable, e);\n    return true;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b;\n    var datas = e.datas,\n      originalDatas = e.originalDatas,\n      isDragTarget = e.isDragTarget;\n    if (!datas.isClipStart) {\n      return false;\n    }\n    var _c = datas,\n      isControl = _c.isControl,\n      isLine = _c.isLine,\n      isArea = _c.isArea,\n      clipIndex = _c.clipIndex,\n      clipPath = _c.clipPath;\n    if (!clipPath) {\n      return false;\n    }\n    var props = getProps(moveable.props, \"clippable\");\n    var keepRatio = props.keepRatio;\n    var distX = 0;\n    var distY = 0;\n    var originalDraggable = originalDatas.draggable;\n    var originalDist = getDragDist(e);\n    if (isDragTarget && originalDraggable) {\n      _a = originalDraggable.prevBeforeDist, distX = _a[0], distY = _a[1];\n    } else {\n      distX = originalDist[0], distY = originalDist[1];\n    }\n    var firstDist = [distX, distY];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    var isDragWithTarget = !isArea && !isControl && !isLine;\n    var clipType = clipPath.type,\n      clipPoses = clipPath.poses,\n      splitter = clipPath.splitter;\n    var poses = clipPoses.map(function (pos) {\n      return pos.pos;\n    });\n    if (isDragWithTarget) {\n      distX = -distX;\n      distY = -distY;\n    }\n    var isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n    var isRect = clipType === \"inset\" || clipType === \"rect\";\n    var dists = clipPoses.map(function () {\n      return [0, 0];\n    });\n    if (isControl && !isAll) {\n      var _d = clipPoses[clipIndex],\n        horizontal = _d.horizontal,\n        vertical = _d.vertical;\n      var dist = [distX * Math.abs(horizontal), distY * Math.abs(vertical)];\n      dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n    } else if (isAll) {\n      dists = poses.map(function () {\n        return [distX, distY];\n      });\n    }\n    var nextPoses = poses.map(function (pos, i) {\n      return plus(pos, dists[i]);\n    });\n    var guidePoses = __spreadArray([], nextPoses, true);\n    state.snapBoundInfos = null;\n    var isCircle = clipPath.type === \"circle\";\n    var isEllipse = clipPath.type === \"ellipse\";\n    if (isCircle || isEllipse) {\n      var guideRect = getRect(nextPoses);\n      var ry = Math.abs(guideRect.bottom - guideRect.top);\n      var rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n      var bottom = nextPoses[0][1] + ry;\n      var left = nextPoses[0][0] - rx;\n      var right = nextPoses[0][0] + rx; // right\n\n      if (isCircle) {\n        guidePoses.push([right, guideRect.bottom]);\n        dists.push([1, 0]);\n      } // bottom\n\n      guidePoses.push([guideRect.left, bottom]);\n      dists.push([0, 1]); // left\n\n      guidePoses.push([left, guideRect.bottom]);\n      dists.push([1, 0]);\n    }\n    var guidelines = getDefaultGuidelines((props.clipHorizontalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), height);\n    }), (props.clipVerticalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), width);\n    }), width, height);\n    var guideXPoses = [];\n    var guideYPoses = [];\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      var rectDists_1 = [dists[0], dists[2], dists[4], dists[6]];\n      guideXPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.filter(function (_, i) {\n        return dists[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.filter(function (_, i) {\n        return dists[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    }\n    var boundDelta = [0, 0];\n    var _e = checkSnapBounds(guidelines, props.clipTargetBounds && {\n        left: 0,\n        top: 0,\n        right: width,\n        bottom: height\n      }, guideXPoses, guideYPoses, 5),\n      horizontalSnapInfo = _e.horizontal,\n      verticalSnapInfo = _e.vertical;\n    var snapOffsetY = horizontalSnapInfo.offset;\n    var snapOffsetX = verticalSnapInfo.offset;\n    if (horizontalSnapInfo.isBound) {\n      boundDelta[1] += snapOffsetY;\n    }\n    if (verticalSnapInfo.isBound) {\n      boundDelta[0] += snapOffsetX;\n    }\n    if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n      var guideRect = getRect(nextPoses);\n      var cy = guideRect.bottom - guideRect.top;\n      var cx = isEllipse ? guideRect.right - guideRect.left : cy;\n      var distSnapX = verticalSnapInfo.isBound ? Math.abs(snapOffsetX) : verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX;\n      var distSnapY = horizontalSnapInfo.isBound ? Math.abs(snapOffsetY) : horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY;\n      cx -= distSnapX;\n      cy -= distSnapY;\n      if (isCircle) {\n        cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n        cx = cy;\n      }\n      var center = guidePoses[0];\n      guidePoses[1][1] = center[1] - cy;\n      guidePoses[2][0] = center[0] + cx;\n      guidePoses[3][1] = center[1] + cy;\n      guidePoses[4][0] = center[0] - cx;\n    } else if (isRect && keepRatio && isControl) {\n      var _f = getControlSize(clipPoses),\n        width_1 = _f[0],\n        height_1 = _f[1];\n      var ratio = width_1 && height_1 ? width_1 / height_1 : 0;\n      var clipPose = clipPoses[clipIndex];\n      var direction = clipPose.direction || \"\";\n      var top = guidePoses[1][1];\n      var bottom = guidePoses[5][1];\n      var left = guidePoses[7][0];\n      var right = guidePoses[3][0];\n      if (snapOffsetY <= snapOffsetX) {\n        snapOffsetY = snapOffsetX / ratio;\n      } else {\n        snapOffsetX = snapOffsetY * ratio;\n      }\n      if (direction.indexOf(\"w\") > -1) {\n        left -= snapOffsetX;\n      } else if (direction.indexOf(\"e\") > -1) {\n        right -= snapOffsetX;\n      } else {\n        left += snapOffsetX / 2;\n        right -= snapOffsetX / 2;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        top -= snapOffsetY;\n      } else if (direction.indexOf(\"s\") > -1) {\n        bottom -= snapOffsetY;\n      } else {\n        top += snapOffsetY / 2;\n        bottom -= snapOffsetY / 2;\n      }\n      var nextControlPoses_2 = getRectPoses(top, right, bottom, left);\n      guidePoses.forEach(function (pos, i) {\n        var _a;\n        _a = nextControlPoses_2[i].pos, pos[0] = _a[0], pos[1] = _a[1];\n      });\n    } else {\n      guidePoses.forEach(function (pos, j) {\n        var dist = dists[j];\n        if (dist[0]) {\n          pos[0] -= snapOffsetX;\n        }\n        if (dist[1]) {\n          pos[1] -= snapOffsetY;\n        }\n      });\n    }\n    var nextClipStyles = getClipStyles(moveable, clipPath, nextPoses);\n    var clipStyle = \"\".concat(clipType, \"(\").concat(nextClipStyles.join(splitter), \")\");\n    state.clipPathState = clipStyle;\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      guideXPoses = rectPoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.map(function (pos) {\n        return pos[1];\n      });\n    }\n    state.snapBoundInfos = checkSnapBounds(guidelines, props.clipTargetBounds && {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    }, guideXPoses, guideYPoses, 1);\n    if (originalDraggable) {\n      var is3d = state.is3d,\n        allMatrix = state.allMatrix;\n      var n = is3d ? 4 : 3;\n      var dragDist = boundDelta;\n      if (isDragTarget) {\n        dragDist = [firstDist[0] + boundDelta[0] - originalDist[0], firstDist[1] + boundDelta[1] - originalDist[1]];\n      }\n      originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n    }\n    triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n      clipEventType: \"changed\",\n      clipType: clipType,\n      poses: nextPoses,\n      clipStyle: clipStyle,\n      clipStyles: nextClipStyles,\n      distX: distX,\n      distY: distY\n    }, fillCSSObject((_b = {}, _b[clipType === \"rect\" ? \"clip\" : \"clipPath\"] = clipStyle, _b), e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    this.unset(moveable);\n    var isDrag = e.isDrag,\n      datas = e.datas,\n      isDouble = e.isDouble;\n    var isLine = datas.isLine,\n      isClipStart = datas.isClipStart,\n      isControl = datas.isControl;\n    if (!isClipStart) {\n      return false;\n    }\n    triggerEvent(moveable, \"onClipEnd\", fillEndParams(moveable, e, {}));\n    if (isDouble) {\n      if (isControl) {\n        removeClipPath(moveable, e);\n      } else if (isLine) {\n        // add\n        addClipPath(moveable, e);\n      }\n    }\n    return isDouble || isDrag;\n  },\n  unset: function (moveable) {\n    moveable.state.clipPathState = \"\";\n    moveable.state.snapBoundInfos = null;\n  }\n};\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\n\nvar OriginDraggable = {\n  name: \"originDraggable\",\n  props: {\n    originDraggable: Boolean,\n    originRelative: Boolean\n  },\n  events: {\n    onDragOriginStart: \"dragOriginStart\",\n    onDragOrigin: \"dragOrigin\",\n    onDragOriginEnd: \"dragOriginEnd\"\n  },\n  css: [\":host[data-able-origindraggable] .control.origin {\\n    pointer-events: auto;\\n}\"],\n  dragControlCondition: function (_, e) {\n    if (e.isRequest) {\n      return e.requestAble === \"originDraggable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"origin\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas;\n    setDragStart(moveable, e);\n    var params = fillParams(moveable, e, {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = triggerEvent(moveable, \"onDragOriginStart\", params);\n    datas.startOrigin = moveable.state.transformOrigin;\n    datas.startTargetOrigin = moveable.state.targetOrigin;\n    datas.prevOrigin = [0, 0];\n    datas.isDragOrigin = true;\n    if (result === false) {\n      datas.isDragOrigin = false;\n      return false;\n    }\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      is3d = state.is3d;\n    var _b = moveable.props.originRelative,\n      originRelative = _b === void 0 ? true : _b;\n    var n = is3d ? 4 : 3;\n    var dist = [distX, distY];\n    if (isRequest) {\n      var distOrigin = e.distOrigin;\n      if (distOrigin[0] || distOrigin[1]) {\n        dist = distOrigin;\n      }\n    }\n    var origin = plus(datas.startOrigin, dist);\n    var targetOrigin = plus(datas.startTargetOrigin, dist);\n    var delta = minus(dist, datas.prevOrigin);\n    var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, origin, n);\n    var rect = moveable.getRect();\n    var nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n    var dragDelta = [rect.left - nextRect.left, rect.top - nextRect.top];\n    datas.prevOrigin = dist;\n    var transformOrigin = [convertCSSSize(targetOrigin[0], width, originRelative), convertCSSSize(targetOrigin[1], height, originRelative)].join(\" \");\n    var result = Draggable.drag(moveable, setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false));\n    var params = fillParams(moveable, e, __assign(__assign({\n      width: width,\n      height: height,\n      origin: origin,\n      dist: dist,\n      delta: delta,\n      transformOrigin: transformOrigin,\n      drag: result\n    }, fillCSSObject({\n      transformOrigin: transformOrigin,\n      transform: result.transform\n    }, e)), {\n      afterTransform: result.transform\n    }));\n    triggerEvent(moveable, \"onDragOrigin\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    triggerEvent(moveable, \"onDragOriginEnd\", fillEndParams(moveable, e, {}));\n    return true;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    return true;\n  },\n  dragGroupControl: function (moveable, e) {\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return false;\n    }\n    moveable.transformOrigin = params.transformOrigin;\n    return true;\n  },\n  /**\n  * @method Moveable.OriginDraggable#request\n  * @param {object} e - the OriginDraggable's request parameter\n  * @param {number} [e.x] - x position\n  * @param {number} [e.y] - y position\n  * @param {number} [e.deltaX] - x number to move\n  * @param {number} [e.deltaY] - y number to move\n  * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n  * @param {array} [e.origin] - transform-origin position\n  * @param {number} [e.isInstant] - Whether to execute the request instantly\n  * @return {Moveable.Requester} Moveable Requester\n  * @example\n   * // Instantly Request (requestStart - request - requestEnd)\n  * // Use Relative Value\n  * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n  * // Use Transform Value\n  * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n  * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n  * // requestStart\n  * const requester = moveable.request(\"originDraggable\");\n  *\n  * // request\n  * // Use Relative Value\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n  *\n  * // requestEnd\n  * requester.requestEnd();\n  */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    var transformOrigin = rect.transformOrigin;\n    var distOrigin = [0, 0];\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaOrigin\" in e) {\n          distOrigin[0] += e.deltaOrigin[0];\n          distOrigin[1] += e.deltaOrigin[1];\n        } else if (\"origin\" in e) {\n          distOrigin[0] = e.origin[0] - transformOrigin[0];\n          distOrigin[1] = e.origin[1] - transformOrigin[1];\n        } else {\n          if (\"x\" in e) {\n            distX = e.x - rect.left;\n          } else if (\"deltaX\" in e) {\n            distX += e.deltaX;\n          }\n          if (\"y\" in e) {\n            distY = e.y - rect.top;\n          } else if (\"deltaY\" in e) {\n            distY += e.deltaY;\n          }\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY,\n          distOrigin: distOrigin\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\nfunction addBorderRadiusByLine(controlPoses, lineIndex, distX, distY) {\n  // lineIndex\n  // 0 top\n  // 1 right\n  // 2 bottom\n  // 3 left\n  var horizontalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      horizontal = _a.horizontal;\n    return horizontal && !virtual;\n  }).length;\n  var verticalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      vertical = _a.vertical;\n    return vertical && !virtual;\n  }).length;\n  var controlIndex = -1; //top\n\n  if (lineIndex === 0) {\n    if (horizontalsLength === 0) {\n      controlIndex = 0;\n    } else if (horizontalsLength === 1) {\n      controlIndex = 1;\n    }\n  } // bottom\n\n  if (lineIndex === 2) {\n    if (horizontalsLength <= 2) {\n      controlIndex = 2;\n    } else if (horizontalsLength <= 3) {\n      controlIndex = 3;\n    }\n  } // left\n\n  if (lineIndex === 3) {\n    if (verticalsLength === 0) {\n      controlIndex = 4;\n    } else if (verticalsLength < 4) {\n      controlIndex = 7;\n    }\n  } // right\n\n  if (lineIndex === 1) {\n    if (verticalsLength <= 1) {\n      controlIndex = 5;\n    } else if (verticalsLength <= 2) {\n      controlIndex = 6;\n    }\n  }\n  if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n    return;\n  }\n  var controlPoseInfo = controlPoses[controlIndex];\n  addBorderRadius(controlPoses, controlIndex);\n  if (controlIndex < 4) {\n    controlPoseInfo.pos[0] = distX;\n  } else {\n    controlPoseInfo.pos[1] = distY;\n  }\n}\nfunction addBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(0, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  } else {\n    if (controlPoses[0].virtual) {\n      controlPoses[0].virtual = false;\n    }\n    controlPoses.slice(4, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  }\n}\nfunction removeBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(index, 4).forEach(function (info) {\n      info.virtual = true;\n    });\n  } else {\n    controlPoses.slice(index).forEach(function (info) {\n      info.virtual = true;\n    });\n  }\n}\nfunction getBorderRadius(borderRadius, width, height, minCounts, full) {\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  var values = [];\n  if (!borderRadius || borderRadius === \"0px\") {\n    values = [];\n  } else {\n    values = splitSpace(borderRadius);\n  }\n  return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\nfunction triggerRoundEvent(moveable, e, dist, delta, nextPoses) {\n  var state = moveable.state;\n  var width = state.width,\n    height = state.height;\n  var _a = getRadiusStyles(nextPoses, moveable.props.roundRelative, width, height),\n    raws = _a.raws,\n    styles = _a.styles,\n    radiusPoses = _a.radiusPoses;\n  var _b = splitRadiusPoses(radiusPoses, raws),\n    horizontals = _b.horizontals,\n    verticals = _b.verticals;\n  var borderRadius = styles.join(\" \");\n  state.borderRadiusState = borderRadius;\n  var params = fillParams(moveable, e, __assign({\n    horizontals: horizontals,\n    verticals: verticals,\n    borderRadius: borderRadius,\n    width: width,\n    height: height,\n    delta: delta,\n    dist: dist\n  }, fillCSSObject({\n    borderRadius: borderRadius\n  }, e)));\n  triggerEvent(moveable, \"onRound\", params);\n  return params;\n}\nfunction getStyleBorderRadius(moveable) {\n  var style = moveable.getState().style;\n  var borderRadius = style.borderRadius || \"\";\n  if (!borderRadius && moveable.props.groupable) {\n    var firstTarget = moveable.getTargets()[0];\n    if (firstTarget) {\n      borderRadius = getComputedStyle(firstTarget).borderRadius;\n      style.borderRadius = borderRadius;\n    }\n  }\n  return borderRadius;\n}\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nvar Roundable = {\n  name: \"roundable\",\n  props: {\n    roundable: Boolean,\n    roundRelative: Boolean,\n    minRoundControls: Array,\n    maxRoundControls: Array,\n    roundClickable: Boolean,\n    roundPadding: Number,\n    isDisplayShadowRoundControls: Boolean\n  },\n  events: {\n    onRoundStart: \"roundStart\",\n    onRound: \"round\",\n    onRoundEnd: \"roundEnd\",\n    onRoundGroupStart: \"roundGroupStart\",\n    onRoundGroup: \"roundGroup\",\n    onRoundGroupEnd: \"roundGroupEnd\"\n  },\n  css: [\".control.border-radius {\\n    background: #d66;\\n    cursor: pointer;\\n    z-index: 3;\\n}\", \".control.border-radius.vertical {\\n    background: #d6d;\\n    z-index: 2;\\n}\", \".control.border-radius.virtual {\\n    opacity: 0.5;\\n    z-index: 1;\\n}\", \":host.round-line-clickable .line.direction {\\n    cursor: pointer;\\n}\"],\n  className: function (moveable) {\n    var roundClickable = moveable.props.roundClickable;\n    return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n  },\n  requestStyle: function () {\n    return [\"borderRadius\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.getState(),\n      target = _a.target,\n      width = _a.width,\n      height = _a.height,\n      allMatrix = _a.allMatrix,\n      is3d = _a.is3d,\n      left = _a.left,\n      top = _a.top,\n      borderRadiusState = _a.borderRadiusState;\n    var _b = moveable.props,\n      _c = _b.minRoundControls,\n      minRoundControls = _c === void 0 ? [0, 0] : _c,\n      _d = _b.maxRoundControls,\n      maxRoundControls = _d === void 0 ? [4, 4] : _d,\n      zoom = _b.zoom,\n      _e = _b.roundPadding,\n      roundPadding = _e === void 0 ? 0 : _e,\n      isDisplayShadowRoundControls = _b.isDisplayShadowRoundControls,\n      groupable = _b.groupable;\n    if (!target) {\n      return null;\n    }\n    var borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n    var n = is3d ? 4 : 3;\n    var radiusValues = getBorderRadius(borderRadius, width, height, minRoundControls, true);\n    if (!radiusValues) {\n      return null;\n    }\n    var verticalCount = 0;\n    var horizontalCount = 0;\n    var basePos = groupable ? [0, 0] : [left, top];\n    return radiusValues.map(function (v, i) {\n      var horizontal = v.horizontal;\n      var vertical = v.vertical;\n      var direction = v.direction || \"\";\n      var originalPos = __spreadArray([], v.pos, true);\n      horizontalCount += Math.abs(horizontal);\n      verticalCount += Math.abs(vertical);\n      if (horizontal && direction.indexOf(\"n\") > -1) {\n        originalPos[1] -= roundPadding;\n      }\n      if (vertical && direction.indexOf(\"w\") > -1) {\n        originalPos[0] -= roundPadding;\n      }\n      if (horizontal && direction.indexOf(\"s\") > -1) {\n        originalPos[1] += roundPadding;\n      }\n      if (vertical && direction.indexOf(\"e\") > -1) {\n        originalPos[0] += roundPadding;\n      }\n      var pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n      var isDisplay = v.vertical ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual) : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n      return React.createElement(\"div\", {\n        key: \"borderRadiusControl\".concat(i),\n        className: prefix(\"control\", \"border-radius\", v.vertical ? \"vertical\" : \"\", v.virtual ? \"virtual\" : \"\"),\n        \"data-radius-index\": i,\n        style: {\n          display: isDisplay ? \"block\" : \"none\",\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n  },\n  dragControlCondition: function (moveable, e) {\n    if (!e.inputEvent || e.isRequest) {\n      return false;\n    }\n    var className = e.inputEvent.target.getAttribute(\"class\") || \"\";\n    return className.indexOf(\"border-radius\") > -1 || className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    var inputTarget = inputEvent.target;\n    var className = inputTarget.getAttribute(\"class\") || \"\";\n    var isControl = className.indexOf(\"border-radius\") > -1;\n    var isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n    var controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n    var lineIndex = -1;\n    if (isLine) {\n      var indexAttr = inputTarget.getAttribute(\"data-line-key\") || \"\";\n      if (indexAttr) {\n        lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n        if (isNaN(lineIndex)) {\n          lineIndex = -1;\n        }\n      }\n    }\n    if (!isControl && !isLine) {\n      return false;\n    }\n    var params = fillParams(moveable, e, {});\n    var result = triggerEvent(moveable, \"onRoundStart\", params);\n    if (result === false) {\n      return false;\n    }\n    datas.lineIndex = lineIndex;\n    datas.controlIndex = controlIndex;\n    datas.isControl = isControl;\n    datas.isLine = isLine;\n    setDragStart(moveable, e);\n    var _a = moveable.props,\n      roundRelative = _a.roundRelative,\n      _b = _a.minRoundControls,\n      minRoundControls = _b === void 0 ? [0, 0] : _b;\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    datas.isRound = true;\n    datas.prevDist = [0, 0];\n    var borderRadius = getStyleBorderRadius(moveable);\n    var controlPoses = getBorderRadius(borderRadius || \"\", width, height, minRoundControls, true) || [];\n    datas.controlPoses = controlPoses;\n    state.borderRadiusState = getRadiusStyles(controlPoses, roundRelative, width, height).styles.join(\" \");\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas;\n    var controlPoses = datas.controlPoses;\n    if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n      return false;\n    }\n    var index = datas.controlIndex;\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var dist = [distX, distY];\n    var delta = minus(dist, datas.prevDist);\n    var _b = moveable.props.maxRoundControls,\n      maxRoundControls = _b === void 0 ? [4, 4] : _b;\n    var _c = moveable.state,\n      width = _c.width,\n      height = _c.height;\n    var selectedControlPose = controlPoses[index];\n    var selectedVertical = selectedControlPose.vertical;\n    var selectedHorizontal = selectedControlPose.horizontal; // 0: [0, 1, 2, 3] maxCount === 1\n    // 0: [0, 2] maxCount === 2\n    // 1: [1, 3] maxCount === 2\n    // 0: [0] maxCount === 3\n    // 1: [1, 3] maxCount === 3\n\n    var dists = controlPoses.map(function (pose) {\n      var horizontal = pose.horizontal,\n        vertical = pose.vertical;\n      var poseDist = [horizontal * selectedHorizontal * dist[0], vertical * selectedVertical * dist[1]];\n      if (horizontal) {\n        if (maxRoundControls[0] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n          return poseDist;\n        }\n      } else if (maxRoundControls[1] === 0) {\n        poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n        return poseDist;\n      } else if (selectedVertical) {\n        if (maxRoundControls[1] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n          return poseDist;\n        }\n      }\n      return [0, 0];\n    });\n    dists[index] = dist;\n    var nextPoses = controlPoses.map(function (info, i) {\n      return __assign(__assign({}, info), {\n        pos: plus(info.pos, dists[i])\n      });\n    });\n    if (index < 4) {\n      nextPoses.slice(0, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    } else {\n      nextPoses.slice(4, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    }\n    datas.prevDist = [distX, distY];\n    return triggerRoundEvent(moveable, e, dist, delta, nextPoses);\n  },\n  dragControlEnd: function (moveable, e) {\n    var state = moveable.state;\n    state.borderRadiusState = \"\";\n    var datas = e.datas,\n      isDouble = e.isDouble;\n    if (!datas.isRound) {\n      return false;\n    }\n    var isControl = datas.isControl,\n      controlIndex = datas.controlIndex,\n      isLine = datas.isLine,\n      lineIndex = datas.lineIndex;\n    var controlPoses = datas.controlPoses;\n    var length = controlPoses.filter(function (_a) {\n      var virtual = _a.virtual;\n      return virtual;\n    }).length;\n    var _a = moveable.props.roundClickable,\n      roundClickable = _a === void 0 ? true : _a;\n    if (isDouble && roundClickable) {\n      if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n        removeBorderRadius(controlPoses, controlIndex);\n      } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n        var _b = calculatePointerDist(moveable, e),\n          distX = _b[0],\n          distY = _b[1];\n        addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n      }\n      if (length !== controlPoses.filter(function (_a) {\n        var virtual = _a.virtual;\n        return virtual;\n      }).length) {\n        triggerRoundEvent(moveable, e, [0, 0], [0, 0], controlPoses);\n      }\n    }\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRoundEnd\", params);\n    state.borderRadiusState = \"\";\n    return params;\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var result = this.dragControlStart(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n    return result;\n  },\n  dragGroupControl: function (moveable, e) {\n    var result = this.dragControl(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        }), fillCSSObject({\n          borderRadius: result.borderRadius\n        }, ev));\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    catchEvent(moveable, \"onRound\", function (parentEvent) {\n      var nextParams = __assign({\n        targets: moveable.props.targets,\n        events: events.map(function (ev, i) {\n          return __assign(__assign(__assign({}, ev), {\n            target: targets[i],\n            moveable: moveables[i],\n            currentTarget: moveables[i]\n          }), fillCSSObject({\n            borderRadius: parentEvent.borderRadius\n          }, ev));\n        })\n      }, parentEvent);\n      triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    });\n    var result = this.dragControlEnd(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        var _a;\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i],\n          lastEvent: (_a = ev.datas) === null || _a === void 0 ? void 0 : _a.lastEvent\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n    return nextParams;\n  },\n  unset: function (moveable) {\n    moveable.state.borderRadiusState = \"\";\n  }\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\nfunction isIdentityMatrix(matrix, is3d) {\n  var n = is3d ? 4 : 3;\n  var identityMatrix = createIdentityMatrix(n);\n  var value = \"matrix\".concat(is3d ? \"3d\" : \"\", \"(\").concat(identityMatrix.join(\",\"), \")\");\n  return matrix === value || matrix === \"matrix(1,0,0,1,0,0)\";\n}\nvar BeforeRenderable = {\n  isPinch: true,\n  name: \"beforeRenderable\",\n  props: {},\n  events: {\n    onBeforeRenderStart: \"beforeRenderStart\",\n    onBeforeRender: \"beforeRender\",\n    onBeforeRenderEnd: \"beforeRenderEnd\",\n    onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n    onBeforeRenderGroup: \"beforeRenderGroup\",\n    onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  setTransform: function (moveable, e) {\n    var _a = moveable.state,\n      is3d = _a.is3d,\n      target = _a.target,\n      targetMatrix = _a.targetMatrix;\n    var transform = target === null || target === void 0 ? void 0 : target.style.transform;\n    var cssMatrix = is3d ? \"matrix3d(\".concat(targetMatrix.join(\",\"), \")\") : \"matrix(\".concat(convertMatrixtoCSS(targetMatrix, true), \")\");\n    var startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n    e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n  },\n  resetStyle: function (e) {\n    var datas = e.datas;\n    datas.nextStyle = {};\n    datas.nextTransforms = e.datas.startTransforms;\n    datas.nextTransformAppendedIndexes = [];\n  },\n  fillDragStartParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      setTransform: function (transform) {\n        e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      },\n      isPinch: !!e.isPinch\n    });\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    });\n  },\n  dragStart: function (moveable, e) {\n    this.setTransform(moveable, e);\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRenderStart\", this.fillDragStartParams(moveable, e));\n  },\n  drag: function (moveable, e) {\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRender\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onBeforeRenderEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag\n    }));\n  },\n  dragGroupStart: function (moveable, e) {\n    var _this = this;\n    this.dragStart(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.setTransform(childMoveable, childEvent);\n      _this.resetStyle(childEvent);\n      return _this.fillDragStartParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      setTransform: function () {},\n      events: params\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    this.drag(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.resetStyle(childEvent);\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroup\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      events: params\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n    triggerEvent(moveable, \"onBeforeRenderGroupEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets\n    }));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  }\n};\nvar Renderable = {\n  name: \"renderable\",\n  props: {},\n  events: {\n    onRenderStart: \"renderStart\",\n    onRender: \"render\",\n    onRenderEnd: \"renderEnd\",\n    onRenderGroupStart: \"renderGroupStart\",\n    onRenderGroup: \"renderGroup\",\n    onRenderGroupEnd: \"renderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  dragStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  drag: function (moveable, e) {\n    triggerEvent(moveable, \"onRender\", this.fillDragParams(moveable, e));\n  },\n  dragAfter: function (moveable, e) {\n    if (e.resultCount) {\n      return this.drag(moveable, e);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderEnd\", this.fillDragEndParams(moveable, e));\n  },\n  dragGroupStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroup\", fillParams(moveable, e, __assign(__assign({\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))), {\n      events: params\n    })));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragEndParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroupEnd\", fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets,\n      events: params,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e)))));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlAfter: function (moveable, e) {\n    return this.dragAfter(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  },\n  fillDragEndParams: function (moveable, e) {\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  }\n};\nfunction triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e, requestInstant) {\n  var isStart = eventType === \"Start\";\n  var target = moveable.state.target;\n  var isRequest = e.isRequest;\n  if (!target || isStart && eventAffix.indexOf(\"Control\") > -1 && !isRequest && moveable.areaElement === e.inputEvent.target) {\n    return false;\n  } // \"drag\" \"Control\" \"After\"\n\n  var eventName = \"\".concat(eventOperation).concat(eventAffix).concat(eventType);\n  var conditionName = \"\".concat(eventOperation).concat(eventAffix, \"Condition\");\n  var isEnd = eventType === \"End\";\n  var isAfter = eventType === \"After\";\n  var isFirstStart = isStart && (!moveable.targetGesto || !moveable.controlGesto || !moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag());\n  if (isFirstStart) {\n    moveable.updateRect(eventType, true, false);\n  }\n  e.clientDistX = e.distX;\n  e.clientDistY = e.distY;\n  if (eventType === \"\" && !isRequest) {\n    // Convert distX, distY\n    convertDragDist(moveable.state, e);\n  } // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n\n  var ables = __spreadArray([], moveable[ableType], true);\n  if (isRequest) {\n    var requestAble_1 = e.requestAble;\n    if (!ables.some(function (able) {\n      return able.name === requestAble_1;\n    })) {\n      ables.push.apply(ables, moveable.props.ables.filter(function (able) {\n        return able.name === requestAble_1;\n      }));\n    }\n  }\n  if (!ables.length || ables.every(function (able) {\n    return able.dragRelation;\n  })) {\n    return false;\n  }\n  var eventAbles = __spreadArray(__spreadArray([BeforeRenderable], ables, true), [Renderable], false).filter(function (able) {\n    return able[eventName];\n  });\n  var datas = e.datas;\n  if (isFirstStart) {\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  var inputEvent = e.inputEvent;\n  var inputTarget;\n  if (isEnd && inputEvent) {\n    inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n  }\n  var resultCount = 0;\n  var isDragStop = false;\n  var stop = function () {\n    var _a;\n    isDragStop = true;\n    (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n  };\n  var results = eventAbles.filter(function (able) {\n    var ableName = able.name;\n    var nextDatas = datas[ableName] || (datas[ableName] = {});\n    if (isStart) {\n      nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n    }\n    if (nextDatas.isEventStart) {\n      var result = able[eventName](moveable, __assign(__assign({}, e), {\n        stop: stop,\n        resultCount: resultCount,\n        datas: nextDatas,\n        originalDatas: datas,\n        inputTarget: inputTarget\n      }));\n      moveable._emitter.off();\n      if (isStart && result === false) {\n        nextDatas.isEventStart = false;\n      }\n      resultCount += result || nextDatas.isEventStart ? 1 : 0;\n      return result;\n    }\n    return false;\n  });\n  var isUpdate = results.length;\n  var isForceEnd = false; // end ables\n\n  if (isDragStop) {\n    isForceEnd = true;\n  }\n  if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n    isForceEnd = eventAbles.filter(function (able) {\n      var ableName = able.name;\n      var nextDatas = datas[ableName];\n      if (nextDatas.isEventStart) {\n        if (able.dragRelation === \"strong\") {\n          return false;\n        } // start drag\n\n        return true;\n      } // cancel event\n\n      return false;\n    }).length;\n  }\n  if (isEnd || isForceEnd) {\n    moveable.state.gestos = {};\n    if (moveable.moveables) {\n      moveable.moveables.forEach(function (childMoveable) {\n        childMoveable.state.gestos = {};\n      });\n    }\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  if (isStart && !isForceEnd && !isRequest && isUpdate) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n  }\n  if (moveable.isUnmounted || isForceEnd) {\n    return false;\n  }\n  if (!isStart && isUpdate && !requestInstant || isEnd) {\n    var flushSync = moveable.props.flushSync || defaultSync;\n    flushSync(function () {\n      moveable.updateRect(isEnd ? eventType : \"\", true, false);\n      moveable.forceUpdate();\n    });\n  }\n  if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n    triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n  }\n  return true;\n}\nfunction checkMoveableTarget(moveable) {\n  return function (e) {\n    var dragTarget = moveable.props.dragTarget;\n    var eventTarget = e.inputEvent.target;\n    var areaElement = moveable.areaElement;\n    return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget)) || eventTarget === areaElement || !moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget) || hasClass(eventTarget, \"moveable-area\") || hasClass(eventTarget, \"moveable-padding\") || hasClass(eventTarget, \"moveable-edgeDraggable\");\n  };\n}\nfunction getTargetAbleGesto(moveable, moveableTarget, eventAffix) {\n  var controlBox = moveable.controlBox.getElement();\n  var targets = [];\n  var dragTarget = moveable.props.dragTarget;\n  targets.push(controlBox);\n  if (!moveable.props.dragArea || dragTarget) {\n    targets.push(moveableTarget);\n  }\n  return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n    dragStart: checkMoveableTarget(moveable),\n    pinchStart: checkMoveableTarget(moveable)\n  });\n}\nfunction getAbleGesto(moveable, target, ableType, eventAffix, conditionFunctions) {\n  if (conditionFunctions === void 0) {\n    conditionFunctions = {};\n  }\n  var isTargetAbles = ableType === \"targetAbles\";\n  var _a = moveable.props,\n    pinchOutside = _a.pinchOutside,\n    pinchThreshold = _a.pinchThreshold,\n    preventClickEventOnDrag = _a.preventClickEventOnDrag,\n    preventClickDefault = _a.preventClickDefault,\n    checkInput = _a.checkInput;\n  var options = {\n    preventDefault: true,\n    preventRightClick: true,\n    preventWheelClick: true,\n    container: window,\n    pinchThreshold: pinchThreshold,\n    pinchOutside: pinchOutside,\n    preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n    preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n    preventClickEventByCondition: isTargetAbles ? null : function (e) {\n      return moveable.controlBox.getElement().contains(e.target);\n    },\n    checkInput: isTargetAbles ? checkInput : false\n  };\n  var gesto = new Gesto(target, options);\n  var isControl = eventAffix === \"Control\";\n  [\"drag\", \"pinch\"].forEach(function (eventOperation) {\n    [\"Start\", \"\", \"End\"].forEach(function (eventType) {\n      gesto.on(\"\".concat(eventOperation).concat(eventType), function (e) {\n        var _a;\n        var eventName = e.eventType;\n        if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n          e.stop();\n          return;\n        }\n        var result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n        if (!result) {\n          e.stop();\n        } else if (moveable.props.stopPropagation || eventType === \"Start\" && isControl) {\n          (_a = e === null || e === void 0 ? void 0 : e.inputEvent) === null || _a === void 0 ? void 0 : _a.stopPropagation();\n        }\n      });\n    });\n  });\n  return gesto;\n}\nvar EventManager = /*#__PURE__*/\nfunction () {\n  function EventManager(target, moveable, eventName) {\n    var _this = this;\n    this.target = target;\n    this.moveable = moveable;\n    this.eventName = eventName;\n    this.ables = [];\n    this._onEvent = function (e) {\n      var eventName = _this.eventName;\n      var moveable = _this.moveable;\n      if (moveable.state.disableNativeEvent) {\n        return;\n      }\n      _this.ables.forEach(function (able) {\n        able[eventName](moveable, {\n          inputEvent: e\n        });\n      });\n    };\n    target.addEventListener(eventName.toLowerCase(), this._onEvent);\n  }\n  var __proto = EventManager.prototype;\n  __proto.setAbles = function (ables) {\n    this.ables = ables;\n  };\n  __proto.destroy = function () {\n    this.target.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n    this.target = null;\n    this.moveable = null;\n  };\n  return EventManager;\n}();\nfunction getShadowRoot(parentElement) {\n  if (parentElement && parentElement.getRootNode) {\n    var rootNode = parentElement.getRootNode();\n    if (rootNode.nodeType === 11) {\n      return rootNode;\n    }\n  }\n  return;\n}\nfunction getMatrixStackInfo(target, container, checkContainer) {\n  var el = target;\n  var matrixes = [];\n  var documentElement = document.documentElement || document.body;\n  var requestEnd = !checkContainer && target === container || target === documentElement;\n  var isEnd = requestEnd;\n  var is3d = false;\n  var n = 3;\n  var transformOrigin;\n  var targetTransformOrigin;\n  var targetMatrix;\n  var hasFixed = false;\n  var offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n  var zoom = 1;\n  while (el && !isEnd) {\n    isEnd = requestEnd;\n    var style = getComputedStyle(el);\n    var position = style.position;\n    var transform = getElementTransform(el, style);\n    var matrix = convertCSStoMatrix(getTransformMatrix(transform));\n    var isFixed = position === \"fixed\";\n    var fixedInfo = {\n      hasTransform: false,\n      fixedContainer: null\n    };\n    if (isFixed) {\n      hasFixed = true;\n      fixedInfo = getPositionFixedInfo(el);\n      offsetContainer = fixedInfo.fixedContainer;\n    } // convert 3 to 4\n\n    var length = matrix.length;\n    if (!is3d && length === 16) {\n      is3d = true;\n      n = 4;\n      convert3DMatrixes(matrixes);\n      if (targetMatrix) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n      }\n    }\n    if (is3d && length === 9) {\n      matrix = convertDimension(matrix, 3, 4);\n    }\n    var _a = getOffsetPosInfo(el, target, style),\n      tagName = _a.tagName,\n      hasOffset = _a.hasOffset,\n      isSVG = _a.isSVG,\n      origin = _a.origin,\n      targetOrigin = _a.targetOrigin,\n      offsetPos = _a.offset;\n    var offsetLeft = offsetPos[0],\n      offsetTop = offsetPos[1];\n    if (tagName === \"svg\" && targetMatrix) {\n      // scale matrix for svg's SVGElements.\n      matrixes.push({\n        type: \"target\",\n        target: el,\n        matrix: getSVGMatrix(el, n)\n      });\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createIdentityMatrix(n)\n      });\n    }\n    var offsetParent = void 0;\n    var isOffsetEnd = false;\n    var isStatic = false;\n    var targetZoom = parseFloat(style.zoom) || 1;\n    if (isFixed) {\n      offsetParent = fixedInfo.fixedContainer;\n      isOffsetEnd = true;\n    } else {\n      var offsetInfo = getOffsetInfo(el, container, false, true, style);\n      var offsetZoom = offsetInfo.offsetZoom;\n      offsetParent = offsetInfo.offsetParent;\n      isOffsetEnd = offsetInfo.isEnd;\n      isStatic = offsetInfo.isStatic;\n      zoom *= offsetZoom;\n      if (offsetZoom !== 1 && isStatic) {\n        offsetLeft -= offsetParent.offsetLeft;\n        offsetTop -= offsetParent.offsetTop;\n      } else if (IS_FIREFOX) {\n        var parentSlotElement = offsetInfo.parentSlotElement;\n        if (parentSlotElement) {\n          var customOffsetParent = offsetParent;\n          var customOffsetLeft = 0;\n          var customOffsetTop = 0;\n          while (customOffsetParent) {\n            if (!getShadowRoot(customOffsetParent)) {\n              break;\n            }\n            customOffsetLeft += customOffsetParent.offsetLeft;\n            customOffsetTop += customOffsetParent.offsetTop;\n            customOffsetParent = customOffsetParent.offsetParent;\n          }\n          offsetLeft -= customOffsetLeft;\n          offsetTop -= customOffsetTop;\n        }\n      }\n    }\n    if (IS_WEBKIT && !IS_SAFARI_ABOVE15 && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n      offsetLeft -= offsetParent.offsetLeft;\n      offsetTop -= offsetParent.offsetTop;\n      requestEnd = requestEnd || isOffsetEnd;\n    }\n    var parentClientLeft = 0;\n    var parentClientTop = 0;\n    var fixedClientLeft = 0;\n    var fixedClientTop = 0;\n    if (isFixed) {\n      if (hasOffset && fixedInfo.hasTransform) {\n        // border\n        fixedClientLeft = offsetParent.clientLeft;\n        fixedClientTop = offsetParent.clientTop;\n      }\n    } else {\n      if (hasOffset && offsetContainer !== offsetParent) {\n        // border\n        parentClientLeft = offsetParent.clientLeft;\n        parentClientTop = offsetParent.clientTop;\n      }\n      if (hasOffset && offsetParent === documentElement) {\n        var margin = getBodyOffset(el, false, style);\n        offsetLeft += margin[0];\n        offsetTop += margin[1];\n      }\n    }\n    matrixes.push({\n      type: \"target\",\n      target: el,\n      matrix: getAbsoluteMatrix(matrix, n, origin)\n    });\n    if (hasOffset) {\n      var isElementTarget = el === target;\n      var scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n      var scrollTop = isElementTarget ? 0 : el.scrollTop;\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createOriginMatrix([offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft, offsetTop - scrollTop + parentClientTop - fixedClientTop], n)\n      });\n    } else {\n      // svg\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        origin: origin\n      });\n    } // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n\n    if (targetZoom !== 1) {\n      matrixes.push({\n        type: \"zoom\",\n        target: el,\n        matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0])\n      });\n    }\n    if (!targetMatrix) {\n      targetMatrix = matrix;\n    }\n    if (!transformOrigin) {\n      transformOrigin = origin;\n    }\n    if (!targetTransformOrigin) {\n      targetTransformOrigin = targetOrigin;\n    }\n    if (isEnd || isFixed) {\n      break;\n    } else {\n      el = offsetParent;\n      requestEnd = isOffsetEnd;\n    }\n    if (!checkContainer || el === documentElement) {\n      isEnd = requestEnd;\n    }\n  }\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(n);\n  }\n  if (!transformOrigin) {\n    transformOrigin = [0, 0];\n  }\n  if (!targetTransformOrigin) {\n    targetTransformOrigin = [0, 0];\n  }\n  return {\n    zoom: zoom,\n    offsetContainer: offsetContainer,\n    matrixes: matrixes,\n    targetMatrix: targetMatrix,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetTransformOrigin,\n    is3d: is3d,\n    hasFixed: hasFixed\n  };\n}\nfunction calculateMatrixStack(target, container, rootContainer, isAbsolute3d) {\n  var _a;\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var _b = getMatrixStackInfo(target, container),\n    matrixes = _b.matrixes,\n    is3d = _b.is3d,\n    prevTargetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin,\n    targetOrigin = _b.targetOrigin,\n    offsetContainer = _b.offsetContainer,\n    hasFixed = _b.hasFixed,\n    containerZoom = _b.zoom; // prevMatrix\n\n  var _c = getMatrixStackInfo(offsetContainer, rootContainer, true),\n    rootMatrixes = _c.matrixes,\n    isRoot3d = _c.is3d,\n    offsetRootContainer = _c.offsetContainer,\n    rootZoom = _c.zoom; // prevRootMatrix\n  // if (rootContainer === document.body) {\n  //     console.log(offsetContainer, rootContainer, rootMatrixes);\n  // }\n\n  var isNext3d = isAbsolute3d || isRoot3d || is3d;\n  var n = isNext3d ? 4 : 3;\n  var isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n  var targetMatrix = prevTargetMatrix; // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n\n  var allMatrix = createIdentityMatrix(n);\n  var rootMatrix = createIdentityMatrix(n);\n  var beforeMatrix = createIdentityMatrix(n);\n  var offsetMatrix = createIdentityMatrix(n);\n  var length = matrixes.length;\n  rootMatrixes.reverse();\n  matrixes.reverse();\n  if (!is3d && isNext3d) {\n    targetMatrix = convertDimension(targetMatrix, 3, 4);\n    convert3DMatrixes(matrixes);\n  }\n  if (!isRoot3d && isNext3d) {\n    convert3DMatrixes(rootMatrixes);\n  } // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n  // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n  // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n  // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n  rootMatrixes.forEach(function (info) {\n    rootMatrix = multiply(rootMatrix, info.matrix, n);\n  });\n  var originalRootContainer = rootContainer || document.body;\n  var endContainer = ((_a = rootMatrixes[0]) === null || _a === void 0 ? void 0 : _a.target) || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n  var rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce(function (matrix, info) {\n    return multiply(matrix, info.matrix, n);\n  }, createIdentityMatrix(n));\n  matrixes.forEach(function (info, i) {\n    if (length - 2 === i) {\n      // length - 3\n      beforeMatrix = allMatrix.slice();\n    }\n    if (length - 1 === i) {\n      // length - 2\n      offsetMatrix = allMatrix.slice();\n    } // calculate for SVGElement\n\n    if (!info.matrix) {\n      var nextInfo = matrixes[i + 1];\n      var offset = getSVGOffset(info, nextInfo, endContainer, n, multiply(rootMatrixBeforeOffset, allMatrix, n));\n      info.matrix = createOriginMatrix(offset, n);\n    }\n    allMatrix = multiply(allMatrix, info.matrix, n);\n  });\n  var isMatrix3d = !isSVGGraphicElement && is3d;\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n  }\n  var targetTransform = makeMatrixCSS(isSVGGraphicElement && targetMatrix.length === 16 ? convertDimension(targetMatrix, 4, 3) : targetMatrix, isMatrix3d);\n  var originalRootMatrix = rootMatrix;\n  rootMatrix = ignoreDimension(rootMatrix, n, n);\n  return {\n    hasZoom: containerZoom !== 1 || rootZoom !== 1,\n    hasFixed: hasFixed,\n    rootMatrix: rootMatrix,\n    originalRootMatrix: originalRootMatrix,\n    beforeMatrix: beforeMatrix,\n    offsetMatrix: offsetMatrix,\n    allMatrix: allMatrix,\n    targetMatrix: targetMatrix,\n    targetTransform: targetTransform,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetOrigin,\n    is3d: isNext3d,\n    offsetContainer: offsetContainer,\n    offsetRootContainer: offsetRootContainer\n  };\n}\nfunction calculateElementInfo(target, container, rootContainer, isAbsolute3d) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var width = 0;\n  var height = 0;\n  var rotation = 0;\n  var allResult = {};\n  var sizes = getSize(target);\n  if (target) {\n    width = sizes.offsetWidth;\n    height = sizes.offsetHeight;\n  }\n  if (target) {\n    var result = calculateMatrixStack(target, container, rootContainer, isAbsolute3d);\n    var position = calculateMoveablePosition(result.allMatrix, result.transformOrigin, width, height);\n    allResult = __assign(__assign({}, result), position);\n    var rotationPosition = calculateMoveablePosition(result.allMatrix, [50, 50], 100, 100);\n    rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n  }\n  var n = isAbsolute3d ? 4 : 3;\n  return __assign(__assign(__assign({\n    hasZoom: false,\n    width: width,\n    height: height,\n    rotation: rotation\n  }, sizes), {\n    originalRootMatrix: createIdentityMatrix(n),\n    rootMatrix: createIdentityMatrix(n),\n    beforeMatrix: createIdentityMatrix(n),\n    offsetMatrix: createIdentityMatrix(n),\n    allMatrix: createIdentityMatrix(n),\n    targetMatrix: createIdentityMatrix(n),\n    targetTransform: \"\",\n    transformOrigin: [0, 0],\n    targetOrigin: [0, 0],\n    is3d: !!isAbsolute3d,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    origin: [0, 0],\n    pos1: [0, 0],\n    pos2: [0, 0],\n    pos3: [0, 0],\n    pos4: [0, 0],\n    direction: 1,\n    hasFixed: false,\n    offsetContainer: null,\n    offsetRootContainer: null\n  }), allResult);\n}\nfunction getElementInfo(target, container, rootContainer) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  return calculateElementInfo(target, container, rootContainer, true);\n}\nfunction getMoveableTargetInfo(moveableElement, target, container, parentContainer, rootContainer, requestStyle) {\n  if (requestStyle === void 0) {\n    requestStyle = [];\n  }\n  var beforeDirection = 1;\n  var beforeOrigin = [0, 0];\n  var targetClientRect = resetClientRect();\n  var moveableClientRect = resetClientRect();\n  var containerClientRect = resetClientRect();\n  var rootContainerClientRect = resetClientRect();\n  var offsetDelta = [0, 0];\n  var style = {};\n  var result = calculateElementInfo(target, container, rootContainer, true);\n  if (target) {\n    var computedStyle_1 = getComputedStyle(target);\n    requestStyle.forEach(function (name) {\n      style[name] = computedStyle_1[name];\n    });\n    var n = result.is3d ? 4 : 3;\n    var beforePosition = calculateMoveablePosition(result.offsetMatrix, plus(result.transformOrigin, getOrigin(result.targetMatrix, n)), result.width, result.height);\n    beforeDirection = beforePosition.direction;\n    beforeOrigin = plus(beforePosition.origin, [beforePosition.left - result.left, beforePosition.top - result.top]);\n    rootContainerClientRect = getClientRect(result.offsetRootContainer);\n    var offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent || result.offsetRootContainer;\n    if (result.hasZoom) {\n      var absoluteTargetPosition = calculateMoveablePosition(multiply(result.originalRootMatrix, result.allMatrix), result.transformOrigin, result.width, result.height);\n      var absoluteContainerPosition = calculateMoveablePosition(result.originalRootMatrix, getTransformOrigin(getComputedStyle(offsetContainer)).map(function (pos) {\n        return parseFloat(pos);\n      }), offsetContainer.offsetWidth, offsetContainer.offsetHeight);\n      targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n      containerClientRect = getClientRectByPosition(absoluteContainerPosition, rootContainerClientRect, offsetContainer, true);\n      if (moveableElement) {\n        var left = absoluteTargetPosition.left;\n        var top = absoluteTargetPosition.top;\n        moveableClientRect = getClientRectByPosition({\n          left: left,\n          top: top,\n          bottom: top,\n          right: top\n        }, rootContainerClientRect);\n      }\n    } else {\n      targetClientRect = getClientRect(target);\n      containerClientRect = getClientRect(offsetContainer, true);\n      if (moveableElement) {\n        moveableClientRect = getClientRect(moveableElement);\n      }\n      var containerClientRectLeft = containerClientRect.left,\n        containerClientRectTop = containerClientRect.top,\n        containterClientLeft = containerClientRect.clientLeft,\n        containerClientTop = containerClientRect.clientTop;\n      var clientDelta = [targetClientRect.left - containerClientRectLeft, targetClientRect.top - containerClientRectTop];\n      offsetDelta = minus(calculateInversePosition(result.rootMatrix, clientDelta, 4), [containterClientLeft + result.left, containerClientTop + result.top]);\n    }\n  }\n  return __assign({\n    targetClientRect: targetClientRect,\n    containerClientRect: containerClientRect,\n    moveableClientRect: moveableClientRect,\n    rootContainerClientRect: rootContainerClientRect,\n    beforeDirection: beforeDirection,\n    beforeOrigin: beforeOrigin,\n    originalBeforeOrigin: beforeOrigin,\n    target: target,\n    style: style,\n    offsetDelta: offsetDelta\n  }, result);\n}\nfunction getPersistState(rect) {\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4;\n  if (!pos1 || !pos2 || !pos3 || !pos4) {\n    return null;\n  }\n  var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n  var posDelta = [minPos.minX, minPos.minY];\n  var origin = minus(rect.origin, posDelta);\n  pos1 = minus(pos1, posDelta);\n  pos2 = minus(pos2, posDelta);\n  pos3 = minus(pos3, posDelta);\n  pos4 = minus(pos4, posDelta);\n  return __assign(__assign({}, rect), {\n    left: rect.left,\n    top: rect.top,\n    posDelta: posDelta,\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    origin: origin,\n    beforeOrigin: origin,\n    // originalBeforeOrigin: origin,\n    isPersisted: true\n  });\n}\nvar MoveableManager = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableManager, _super);\n  function MoveableManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = __assign({\n      container: null,\n      gestos: {},\n      renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n      disableNativeEvent: false,\n      posDelta: [0, 0]\n    }, getMoveableTargetInfo(null));\n    _this.renderState = {};\n    _this.enabledAbles = [];\n    _this.targetAbles = [];\n    _this.controlAbles = [];\n    _this.rotation = 0;\n    _this.scale = [1, 1];\n    _this.isMoveableMounted = false;\n    _this.isUnmounted = false;\n    _this.events = {\n      \"mouseEnter\": null,\n      \"mouseLeave\": null\n    };\n    _this._emitter = new EventEmitter();\n    _this._prevTarget = null;\n    _this._prevDragArea = false;\n    _this._isPropTargetChanged = false;\n    _this._hasFirstTarget = false;\n    _this._observer = null;\n    _this._observerId = 0;\n    _this._rootContainer = null;\n    _this._viewContainer = null;\n    _this._viewClassNames = [];\n    _this.checkUpdateRect = function () {\n      if (_this.isDragging()) {\n        return;\n      }\n      var parentMoveable = _this.props.parentMoveable;\n      if (parentMoveable) {\n        parentMoveable.checkUpdateRect();\n        return;\n      }\n      cancelAnimationFrame(_this._observerId);\n      _this._observerId = requestAnimationFrame(function () {\n        if (_this.isDragging()) {\n          return;\n        }\n        _this.updateRect();\n      });\n    };\n    _this._onPreventClick = function (e) {\n      e.stopPropagation();\n      e.preventDefault(); // removeEvent(window, \"click\", this._onPreventClick, true);\n    };\n\n    return _this;\n  }\n  var __proto = MoveableManager.prototype;\n  __proto.render = function () {\n    var props = this.props;\n    var state = this.getState();\n    var parentPosition = props.parentPosition,\n      className = props.className,\n      propsTarget = props.target,\n      zoom = props.zoom,\n      cspNonce = props.cspNonce,\n      translateZ = props.translateZ,\n      ControlBoxElement = props.cssStyled,\n      portalContainer = props.portalContainer,\n      groupable = props.groupable,\n      linePadding = props.linePadding;\n    this._checkUpdateRootContainer();\n    this.checkUpdate();\n    this.updateRenderPoses();\n    var _a = parentPosition || [0, 0],\n      parentLeft = _a[0],\n      parentTop = _a[1];\n    var left = state.left,\n      top = state.top,\n      stateTarget = state.target,\n      direction = state.direction,\n      hasFixed = state.hasFixed,\n      offsetDelta = state.offsetDelta;\n    var groupTargets = props.targets;\n    var isDragging = this.isDragging();\n    var ableAttributes = {};\n    this.getEnabledAbles().forEach(function (able) {\n      ableAttributes[\"data-able-\".concat(able.name.toLowerCase())] = true;\n    });\n    var ableClassName = this._getAbleClassName();\n    var isDisplay = groupTargets && groupTargets.length && (stateTarget || groupable) || propsTarget || !this._hasFirstTarget && this.state.isPersisted;\n    var isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n    var translate = [left - parentLeft, top - parentTop];\n    if (!groupable && props.useAccuratePosition) {\n      translate[0] += offsetDelta[0];\n      translate[1] += offsetDelta[1];\n    }\n    var style = {\n      \"position\": hasFixed ? \"fixed\" : \"absolute\",\n      \"display\": isDisplay ? \"block\" : \"none\",\n      \"visibility\": isVisible ? \"visible\" : \"hidden\",\n      \"transform\": \"translate3d(\".concat(translate[0], \"px, \").concat(translate[1], \"px, \").concat(translateZ, \")\"),\n      \"--zoom\": zoom,\n      \"--zoompx\": \"\".concat(zoom, \"px\")\n    };\n    if (linePadding) {\n      style[\"--moveable-line-padding\"] = linePadding;\n    }\n    return React.createElement(ControlBoxElement, __assign({\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: \"\".concat(prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\"), \" \").concat(ableClassName, \" \").concat(className)\n    }, ableAttributes, {\n      onClick: this._onPreventClick,\n      portalContainer: portalContainer,\n      style: style\n    }), this.renderAbles(), this._renderLines());\n  };\n  __proto.componentDidMount = function () {\n    this.isMoveableMounted = true;\n    this.isUnmounted = false;\n    this.controlBox.getElement();\n    var props = this.props;\n    var parentMoveable = props.parentMoveable,\n      container = props.container,\n      wrapperMoveable = props.wrapperMoveable;\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateTargets();\n    this._updateNativeEvents();\n    this._updateEvents();\n    this.updateCheckInput();\n    this._updateObserver(this.props);\n    if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n      this.updateRect(\"\", false, false);\n      this.forceUpdate();\n    }\n  };\n  __proto.componentDidUpdate = function (prevProps) {\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateNativeEvents();\n    this._updateEvents();\n    this._updateTargets();\n    this.updateCheckInput();\n    this._updateObserver(prevProps);\n  };\n  __proto.componentWillUnmount = function () {\n    this.isMoveableMounted = false;\n    this.isUnmounted = true;\n    this._emitter.off();\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames([]);\n    }\n    unset(this, \"targetGesto\");\n    unset(this, \"controlGesto\");\n    var events = this.events;\n    for (var name in events) {\n      var manager = events[name];\n      manager && manager.destroy();\n    }\n  };\n  __proto.getTargets = function () {\n    var target = this.props.target;\n    return target ? [target] : [];\n  };\n  /**\n   * Get the able used in MoveableManager.\n   * @method Moveable#getAble\n   * @param - able name\n   */\n\n  __proto.getAble = function (ableName) {\n    var ables = this.props.ables || [];\n    return find(ables, function (able) {\n      return able.name === ableName;\n    });\n  };\n  __proto.getContainer = function () {\n    var _a = this.props,\n      parentMoveable = _a.parentMoveable,\n      wrapperMoveable = _a.wrapperMoveable,\n      container = _a.container;\n    return container || wrapperMoveable && wrapperMoveable.getContainer() || parentMoveable && parentMoveable.getContainer() || this.controlBox.getElement().parentElement;\n  };\n  /**\n   * Check if the target is an element included in the moveable.\n   * @method Moveable#isMoveableElement\n   * @param - the target\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"click\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *         moveable.target = e.target;\n   *     }\n   * });\n   */\n\n  __proto.isMoveableElement = function (target) {\n    var _a;\n    return target && (((_a = target.getAttribute) === null || _a === void 0 ? void 0 : _a.call(target, \"class\")) || \"\").indexOf(PREFIX) > -1;\n  };\n  /**\n   * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n   * @method Moveable#dragStart\n   * @param - external `MouseEvent`or `TouchEvent`\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *          moveable.dragStart(e);\n   *     }\n   * });\n   */\n\n  __proto.dragStart = function (e) {\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto && checkMoveableTarget(this)({\n      inputEvent: e\n    })) {\n      if (!targetGesto.isFlag()) {\n        targetGesto.triggerDragStart(e);\n      }\n    } else if (controlGesto && this.isMoveableElement(e.target)) {\n      if (!controlGesto.isFlag()) {\n        controlGesto.triggerDragStart(e);\n      }\n    }\n    return this;\n  };\n  /**\n   * Hit test an element or rect on a moveable target.\n   * (100% = 100)\n   * @method Moveable#hitTest\n   * @param - element or rect to test\n   * @return - Get hit test rate (rate > 0 is hitted)\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.hitTest(e.target) > 0) {\n   *          console.log(\"hiited\");\n   *     }\n   * });\n   */\n\n  __proto.hitTest = function (el) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return 0;\n    }\n    var rect;\n    if (el instanceof Element) {\n      var clientRect = el.getBoundingClientRect();\n      rect = {\n        left: clientRect.left,\n        top: clientRect.top,\n        width: clientRect.width,\n        height: clientRect.height\n      };\n    } else {\n      rect = __assign({\n        width: 0,\n        height: 0\n      }, el);\n    }\n    var rectLeft = rect.left,\n      rectTop = rect.top,\n      rectWidth = rect.width,\n      rectHeight = rect.height;\n    var points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n    var size = getOverlapSize(points, [[rectLeft, rectTop], [rectLeft + rectWidth, rectTop], [rectLeft + rectWidth, rectTop + rectHeight], [rectLeft, rectTop + rectHeight]]);\n    var totalSize = getAreaSize(points);\n    if (!size || !totalSize) {\n      return 0;\n    }\n    return Math.min(100, size / totalSize * 100);\n  };\n  /**\n   * Whether the coordinates are inside Moveable\n   * @method Moveable#isInside\n   * @param - x coordinate\n   * @param - y coordinate\n   * @return - True if the coordinate is in moveable or false\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.isInside(e.clientX, e.clientY)) {\n   *          console.log(\"inside\");\n   *     }\n   * });\n   */\n\n  __proto.isInside = function (clientX, clientY) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return false;\n    }\n    return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n  };\n  /**\n   * If the width, height, left, and top of all elements change, update the shape of the moveable.\n   * @method Moveable#updateRect\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"resize\", e => {\n   *     moveable.updateRect();\n   * });\n   */\n\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var props = this.props;\n    var parentMoveable = props.parentMoveable;\n    var state = this.state;\n    var target = state.target || this.props.target;\n    var container = this.getContainer();\n    var rootContainer = parentMoveable ? parentMoveable._rootContainer : this._rootContainer;\n    var nextState = getMoveableTargetInfo(this.controlBox && this.controlBox.getElement(), target, container, container, rootContainer || container, this._getRequestStyles());\n    if (!target && this._hasFirstTarget && props.persistData) {\n      var persistState = getPersistState(props.persistData);\n      for (var name in persistState) {\n        nextState[name] = persistState[name];\n      }\n    }\n    this.updateState(nextState, parentMoveable ? false : isSetState);\n  };\n  /**\n   * Check if the moveable state is being dragged.\n   * @method Moveable#isDragging\n   * @param - If you want to check if able is dragging, specify ableName.\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // false\n   * console.log(moveable.isDragging());\n   *\n   * moveable.on(\"drag\", () => {\n   *   // true\n   *   console.log(moveable.isDragging());\n   * });\n   */\n\n  __proto.isDragging = function (ableName) {\n    var _a, _b;\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = targetGesto.getEventData();\n      return !!((_a = data[ableName]) === null || _a === void 0 ? void 0 : _a.isEventStart);\n    }\n    if (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = controlGesto.getEventData();\n      return !!((_b = data[ableName]) === null || _b === void 0 ? void 0 : _b.isEventStart);\n    }\n    return false;\n  };\n  /**\n   * If the width, height, left, and top of the only target change, update the shape of the moveable.\n   * @method Moveable#updateTarget\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.updateTarget();\n   */\n\n  __proto.updateTarget = function (type) {\n    this.updateRect(type, true);\n  };\n  /**\n   * You can get the vertex information, position and offset size information of the target based on the container.\n   * @method Moveable#getRect\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const rectInfo = moveable.getRect();\n   */\n\n  __proto.getRect = function () {\n    var state = this.state;\n    var poses = getAbsolutePosesByState(this.state);\n    var pos1 = poses[0],\n      pos2 = poses[1],\n      pos3 = poses[2],\n      pos4 = poses[3];\n    var rect = getRect(poses);\n    var offsetWidth = state.width,\n      offsetHeight = state.height;\n    var width = rect.width,\n      height = rect.height,\n      left = rect.left,\n      top = rect.top;\n    var statePos = [state.left, state.top];\n    var origin = plus(statePos, state.origin);\n    var beforeOrigin = plus(statePos, state.beforeOrigin);\n    var transformOrigin = state.transformOrigin;\n    return {\n      width: width,\n      height: height,\n      left: left,\n      top: top,\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      beforeOrigin: beforeOrigin,\n      origin: origin,\n      transformOrigin: transformOrigin,\n      rotation: this.getRotation()\n    };\n  };\n  /**\n   * Get a manager that manages the moveable's state and props.\n   * @method Moveable#getManager\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const manager = moveable.getManager(); // real moveable class instance\n   */\n\n  __proto.getManager = function () {\n    return this;\n  };\n  /**\n   * You can stop the dragging currently in progress through a method from outside.\n   * @method Moveable#stopDrag\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.stopDrag();\n   */\n\n  __proto.stopDrag = function (type) {\n    var _a, _b;\n    if (!type || type === \"target\") {\n      (_a = this.targetGesto) === null || _a === void 0 ? void 0 : _a.stop();\n    }\n    if (!type || type === \"control\") {\n      (_b = this.controlGesto) === null || _b === void 0 ? void 0 : _b.stop();\n    }\n  };\n  __proto.getRotation = function () {\n    var _a = this.state,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      direction = _a.direction;\n    return getAbsoluteRotation(pos1, pos2, direction);\n  };\n  /**\n   * Request able through a method rather than an event.\n   * At the moment of execution, requestStart is executed,\n   * and then request and requestEnd can be executed through Requester.\n   * @method Moveable#request\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n   * @param - ableName\n   * @param - request to be able params.\n   * @param - If isInstant is true, request and requestEnd are executed immediately.\n   * @return - Able Requester. If there is no request in able, nothing will work.\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   *\n   * // Start move\n   * const requester = moveable.request(\"draggable\");\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.requestEnd();\n   */\n\n  __proto.request = function (ableName, param, isInstant) {\n    if (param === void 0) {\n      param = {};\n    }\n    var _a = this.props,\n      ables = _a.ables,\n      groupable = _a.groupable;\n    var requsetAble = ables.filter(function (able) {\n      return able.name === ableName;\n    })[0];\n    if (this.isDragging() || !requsetAble || !requsetAble.request) {\n      return {\n        request: function () {\n          return this;\n        },\n        requestEnd: function () {\n          return this;\n        }\n      };\n    }\n    var self = this;\n    var ableRequester = requsetAble.request(this);\n    var requestInstant = isInstant || param.isInstant;\n    var ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n    var eventAffix = \"\".concat(groupable ? \"Group\" : \"\").concat(ableRequester.isControl ? \"Control\" : \"\");\n    var requester = {\n      request: function (ableParam) {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"\", __assign(__assign({}, ableRequester.request(ableParam)), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      },\n      requestEnd: function () {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"End\", __assign(__assign({}, ableRequester.requestEnd()), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      }\n    };\n    triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", __assign(__assign({}, ableRequester.requestStart(param)), {\n      requestAble: ableName,\n      isRequest: true\n    }), requestInstant);\n    return requestInstant ? requester.request(param).requestEnd() : requester;\n  };\n  /**\n   * Remove the Moveable object and the events.\n   * @method Moveable#destroy\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.destroy();\n   */\n\n  __proto.destroy = function () {\n    this.componentWillUnmount();\n  };\n  __proto.updateRenderPoses = function () {\n    var state = this.getState();\n    var props = this.props;\n    var originalBeforeOrigin = state.originalBeforeOrigin,\n      transformOrigin = state.transformOrigin,\n      allMatrix = state.allMatrix,\n      is3d = state.is3d,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      stateLeft = state.left,\n      stateTop = state.top,\n      // offsetWidth,\n      // offsetHeight,\n      isPersisted = state.isPersisted;\n    var _a = props.padding || {},\n      _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.bottom,\n      bottom = _d === void 0 ? 0 : _d,\n      _e = _a.right,\n      right = _e === void 0 ? 0 : _e;\n    var n = is3d ? 4 : 3; // const clipPathInfo = getClipPath(\n    //     props.target,\n    //     offsetWidth,\n    //     offsetHeight,\n    // );\n    // if (clipPathInfo) {\n    //     left -= Math.max(0, clipPathInfo.left);\n    //     top -= Math.max(0, clipPathInfo.top);\n    //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n    //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n    // }\n\n    var absoluteOrigin = [];\n    if (isPersisted) {\n      absoluteOrigin = transformOrigin;\n    } else if (this.controlBox && props.groupable) {\n      absoluteOrigin = originalBeforeOrigin;\n    } else {\n      absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n    }\n    state.renderPoses = [plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)), plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)), plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)), plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n))];\n  };\n  __proto.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    var _a = this.props,\n      target = _a.target,\n      container = _a.container,\n      parentMoveable = _a.parentMoveable;\n    var _b = this.state,\n      stateTarget = _b.target,\n      stateContainer = _b.container;\n    if (!stateTarget && !target) {\n      return;\n    }\n    this.updateAbles();\n    var isTargetChanged = !equals(stateTarget, target);\n    var isChanged = isTargetChanged || !equals(stateContainer, container);\n    if (!isChanged) {\n      return;\n    }\n    var moveableContainer = container || this.controlBox;\n    if (moveableContainer) {\n      this.unsetAbles();\n    }\n    this.updateState({\n      target: target,\n      container: container\n    });\n    if (!parentMoveable && moveableContainer) {\n      this.updateRect(\"End\", false, false);\n    }\n    this._isPropTargetChanged = isTargetChanged;\n  };\n  __proto.waitToChangeTarget = function () {\n    return new Promise(function () {});\n  };\n  __proto.triggerEvent = function (name, e) {\n    this._emitter.trigger(name, e);\n    var callback = this.props[name];\n    return callback && callback(e);\n  };\n  __proto.useCSS = function (tag, css) {\n    var customStyleMap = this.props.customStyledMap;\n    var key = tag + css;\n    if (!customStyleMap[key]) {\n      customStyleMap[key] = styled(tag, css);\n    }\n    return customStyleMap[key];\n  };\n  __proto.getState = function () {\n    var _a;\n    var props = this.props;\n    if (props.target || ((_a = props.targets) === null || _a === void 0 ? void 0 : _a.length)) {\n      this._hasFirstTarget = true;\n    }\n    var hasControlBox = this.controlBox;\n    var persistData = props.persistData;\n    var firstRenderState = props.firstRenderState;\n    if (firstRenderState && !hasControlBox) {\n      return firstRenderState;\n    }\n    if (!this._hasFirstTarget && persistData) {\n      var persistState = getPersistState(persistData);\n      if (persistState) {\n        this.updateState(persistState, false);\n        return this.state;\n      }\n    }\n    this.state.isPersisted = false;\n    return this.state;\n  };\n  __proto.updateSelectors = function () {};\n  __proto.unsetAbles = function () {\n    var _this = this;\n    this.targetAbles.forEach(function (able) {\n      if (able.unset) {\n        able.unset(_this);\n      }\n    });\n  };\n  __proto.updateAbles = function (ables, eventAffix) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    if (eventAffix === void 0) {\n      eventAffix = \"\";\n    }\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var enabledAbles = this.getEnabledAbles(ables);\n    var dragStart = \"drag\".concat(eventAffix, \"Start\");\n    var pinchStart = \"pinch\".concat(eventAffix, \"Start\");\n    var dragControlStart = \"drag\".concat(eventAffix, \"ControlStart\");\n    var targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n    var controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n    this.enabledAbles = enabledAbles;\n    this.targetAbles = targetAbles;\n    this.controlAbles = controlAbles;\n  };\n  __proto.updateState = function (nextState, isSetState) {\n    if (isSetState) {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState(nextState);\n    } else {\n      var state = this.state;\n      for (var name in nextState) {\n        state[name] = nextState[name];\n      }\n    }\n  };\n  __proto.getEnabledAbles = function (ables) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    var props = this.props;\n    return ables.filter(function (able) {\n      return able && (able.always && props[able.name] !== false || props[able.name]);\n    });\n  };\n  __proto.renderAbles = function () {\n    var _this = this;\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var Renderer = {\n      createElement: createElement\n    };\n    this.renderState = {};\n    return groupByMap(flat(filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(function (_a) {\n      var render = _a.render;\n      return render(_this, Renderer) || [];\n    })).filter(function (el) {\n      return el;\n    }), function (_a) {\n      var key = _a.key;\n      return key;\n    }).map(function (group) {\n      return group[0];\n    });\n  };\n  __proto.updateCheckInput = function () {\n    this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n  };\n  __proto._getRequestStyles = function () {\n    var styleNames = this.getEnabledAbles().reduce(function (names, able) {\n      var _a, _b;\n      var ableStyleNames = (_b = (_a = able.requestStyle) === null || _a === void 0 ? void 0 : _a.call(able)) !== null && _b !== void 0 ? _b : [];\n      return __spreadArray(__spreadArray([], names, true), ableStyleNames, true);\n    }, []);\n    return styleNames;\n  };\n  __proto._updateObserver = function (prevProps) {\n    var _a;\n    var props = this.props;\n    var target = props.target;\n    if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n      (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n      return;\n    }\n    if (prevProps.target === target && this._observer) {\n      return;\n    }\n    var observer = new ResizeObserver(this.checkUpdateRect);\n    observer.observe(target, {\n      box: \"border-box\"\n    });\n    this._observer = observer;\n    return;\n  };\n  __proto._updateEvents = function () {\n    var controlBoxElement = this.controlBox.getElement();\n    var hasTargetAble = this.targetAbles.length;\n    var hasControlAble = this.controlAbles.length;\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var isUnset = !hasTargetAble && this.targetGesto || this._isTargetChanged(true);\n    if (isUnset) {\n      unset(this, \"targetGesto\");\n      this.updateState({\n        gesto: null\n      });\n    }\n    if (!hasControlAble) {\n      unset(this, \"controlGesto\");\n    }\n    if (target && hasTargetAble && !this.targetGesto) {\n      this.targetGesto = getTargetAbleGesto(this, target, \"\");\n    }\n    if (!this.controlGesto && hasControlAble) {\n      this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n    }\n  };\n  __proto._updateTargets = function () {\n    var props = this.props;\n    this._prevTarget = props.dragTarget || props.target;\n    this._prevDragArea = props.dragArea;\n  };\n  __proto._renderLines = function () {\n    var props = this.props;\n    var _a = props,\n      zoom = _a.zoom,\n      hideDefaultLines = _a.hideDefaultLines,\n      hideChildMoveableDefaultLines = _a.hideChildMoveableDefaultLines,\n      parentMoveable = _a.parentMoveable;\n    if (hideDefaultLines || parentMoveable && hideChildMoveableDefaultLines) {\n      return [];\n    }\n    var renderPoses = this.getState().renderPoses;\n    var Renderer = {\n      createElement: createElement\n    };\n    return [[0, 1], [1, 3], [3, 2], [2, 0]].map(function (_a, i) {\n      var from = _a[0],\n        to = _a[1];\n      return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom, \"render-line-\".concat(i));\n    });\n  };\n  __proto._isTargetChanged = function (useDragArea) {\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var prevTarget = this._prevTarget;\n    var prevDragArea = this._prevDragArea;\n    var dragArea = props.dragArea; // check target without dragArea\n\n    var isTargetChanged = !dragArea && prevTarget !== target;\n    var isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n    return isTargetChanged || isDragAreaChanged;\n  };\n  __proto._updateNativeEvents = function () {\n    var _this = this;\n    var props = this.props;\n    var target = props.dragArea ? this.areaElement : this.state.target;\n    var events = this.events;\n    var eventKeys = getKeys(events);\n    if (this._isTargetChanged()) {\n      for (var eventName in events) {\n        var manager = events[eventName];\n        manager && manager.destroy();\n        events[eventName] = null;\n      }\n    }\n    if (!target) {\n      return;\n    }\n    var enabledAbles = this.enabledAbles;\n    eventKeys.forEach(function (eventName) {\n      var ables = filterAbles(enabledAbles, [eventName]);\n      var hasAbles = ables.length > 0;\n      var manager = events[eventName];\n      if (!hasAbles) {\n        if (manager) {\n          manager.destroy();\n          events[eventName] = null;\n        }\n        return;\n      }\n      if (!manager) {\n        manager = new EventManager(target, _this, eventName);\n        events[eventName] = manager;\n      }\n      manager.setAbles(ables);\n    });\n  };\n  __proto._checkUpdateRootContainer = function () {\n    var rootContainer = this.props.rootContainer;\n    if (!this._rootContainer && rootContainer) {\n      this._rootContainer = getRefTarget(rootContainer, true);\n    }\n  };\n  __proto._checkUpdateViewContainer = function () {\n    var viewContainerOption = this.props.viewContainer;\n    if (!this._viewContainer && viewContainerOption) {\n      this._viewContainer = getRefTarget(viewContainerOption, true);\n    }\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames(__spreadArray(__spreadArray([], this._getAbleViewClassNames(), true), [this.isDragging() ? VIEW_DRAGGING : \"\"], false));\n    }\n  };\n  __proto._changeAbleViewClassNames = function (classNames) {\n    var viewContainer = this._viewContainer;\n    var nextClassNames = groupBy(classNames.filter(Boolean), function (el) {\n      return el;\n    }).map(function (_a) {\n      var className = _a[0];\n      return className;\n    });\n    var prevClassNames = this._viewClassNames;\n    var _a = diff$1(prevClassNames, nextClassNames),\n      removed = _a.removed,\n      added = _a.added;\n    removed.forEach(function (index) {\n      removeClass(viewContainer, prevClassNames[index]);\n    });\n    added.forEach(function (index) {\n      addClass(viewContainer, nextClassNames[index]);\n    });\n    this._viewClassNames = nextClassNames;\n  };\n  __proto._getAbleViewClassNames = function () {\n    var _this = this;\n    return (this.getEnabledAbles().map(function (able) {\n      var _a;\n      return ((_a = able.viewClassName) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n    }).join(\" \") + \" \".concat(this._getAbleClassName(\"-view\"))).split(/\\s+/g);\n  };\n  __proto._getAbleClassName = function (classPrefix) {\n    var _this = this;\n    if (classPrefix === void 0) {\n      classPrefix = \"\";\n    }\n    var ables = this.getEnabledAbles();\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    var targetGestoData = (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) ? targetGesto.getEventData() : {};\n    var controlGestoData = (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) ? controlGesto.getEventData() : {};\n    return ables.map(function (able) {\n      var _a, _b, _c;\n      var name = able.name;\n      var className = ((_a = able.className) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n      if (((_b = targetGestoData[name]) === null || _b === void 0 ? void 0 : _b.isEventStart) || ((_c = controlGestoData[name]) === null || _c === void 0 ? void 0 : _c.isEventStart)) {\n        className += \" \".concat(prefix(\"\".concat(name).concat(classPrefix, \"-dragging\")));\n      }\n      return className.trim();\n    }).filter(Boolean).join(\" \");\n  };\n  MoveableManager.defaultProps = {\n    target: null,\n    dragTarget: null,\n    container: null,\n    rootContainer: null,\n    origin: true,\n    parentMoveable: null,\n    wrapperMoveable: null,\n    isWrapperMounted: false,\n    parentPosition: null,\n    portalContainer: null,\n    useResizeObserver: false,\n    linePadding: 0,\n    ables: [],\n    pinchThreshold: 20,\n    dragArea: false,\n    passDragArea: false,\n    transformOrigin: \"\",\n    className: \"\",\n    zoom: 1,\n    triggerAblesSimultaneously: false,\n    padding: {},\n    pinchOutside: true,\n    checkInput: false,\n    groupable: false,\n    hideDefaultLines: false,\n    cspNonce: \"\",\n    translateZ: 0,\n    cssStyled: null,\n    customStyledMap: {},\n    props: {},\n    stopPropagation: false,\n    preventClickDefault: false,\n    preventClickEventOnDrag: true,\n    flushSync: defaultSync,\n    firstRenderState: null,\n    persistData: null,\n    viewContainer: null,\n    useAccuratePosition: false\n  };\n  return MoveableManager;\n}(React.PureComponent);\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n\nvar Groupable = {\n  name: \"groupable\",\n  props: {\n    defaultGroupRotate: Number,\n    defaultGroupOrigin: String,\n    groupable: Boolean,\n    groupableProps: Object,\n    targetGroups: Object,\n    hideChildMoveableDefaultLines: Boolean\n  },\n  events: {},\n  render: function (moveable, React) {\n    var _a;\n    var props = moveable.props;\n    var targets = props.targets || [];\n    moveable.moveables = [];\n    var _b = moveable.getState(),\n      left = _b.left,\n      top = _b.top,\n      isPersisted = _b.isPersisted;\n    var position = [left, top];\n    var zoom = props.zoom || 1;\n    var renderGroupRects = moveable.renderGroupRects;\n    var persistDatChildren = ((_a = props.persistData) === null || _a === void 0 ? void 0 : _a.children) || [];\n    if (isPersisted) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else {\n      persistDatChildren = [];\n    }\n    return __spreadArray(__spreadArray([], targets.map(function (target, i) {\n      return React.createElement(MoveableManager, {\n        key: \"moveable\" + i,\n        ref: refs(moveable, \"moveables\", i),\n        target: target,\n        origin: false,\n        cssStyled: props.cssStyled,\n        customStyledMap: props.customStyledMap,\n        useResizeObserver: props.useResizeObserver,\n        hideChildMoveableDefaultLines: props.hideChildMoveableDefaultLines,\n        parentMoveable: moveable,\n        parentPosition: position,\n        persistData: persistDatChildren[i],\n        zoom: zoom\n      });\n    }), true), flat(renderGroupRects.map(function (_a, i) {\n      var pos1 = _a.pos1,\n        pos2 = _a.pos2,\n        pos3 = _a.pos3,\n        pos4 = _a.pos4;\n      var poses = [pos1, pos2, pos3, pos4];\n      return [[0, 1], [1, 3], [3, 2], [2, 0]].map(function (_a, j) {\n        var from = _a[0],\n          to = _a[1];\n        return renderLine(React, \"\", minus(poses[from], position), minus(poses[to], position), zoom, \"group-rect-\".concat(i, \"-\").concat(j));\n      });\n    })), true);\n  }\n};\nvar Clickable = makeAble(\"clickable\", {\n  props: {\n    clickable: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  always: true,\n  dragRelation: \"weak\",\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dragStart: function () {\n    return;\n  },\n  dragControlStart: function () {\n    return;\n  },\n  dragGroupStart: function (moveable, e) {\n    e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n  },\n  dragEnd: function (moveable, e) {\n    var target = moveable.props.target;\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    var isMoveableElement = moveable.isMoveableElement(inputTarget);\n    var containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) || containsElement // External event duplicate target or dragAreaElement\n    ) {\n      return;\n    }\n    var containsTarget = target.contains(inputTarget);\n    triggerEvent(moveable, \"onClick\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      inputTarget: inputTarget,\n      isTarget: target === inputTarget,\n      moveableTarget: moveable.props.target,\n      containsTarget: containsTarget\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) // External event duplicate target or dragAreaElement\n    || e.datas.inputTarget === inputTarget) {\n      return;\n    }\n    var targets = moveable.props.targets;\n    var targetIndex = targets.indexOf(inputTarget);\n    var isTarget = targetIndex > -1;\n    var containsTarget = false;\n    if (targetIndex === -1) {\n      targetIndex = findIndex(targets, function (parentTarget) {\n        return parentTarget.contains(inputTarget);\n      });\n      containsTarget = targetIndex > -1;\n    }\n    triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      targets: targets,\n      inputTarget: inputTarget,\n      targetIndex: targetIndex,\n      isTarget: isTarget,\n      containsTarget: containsTarget,\n      moveableTarget: targets[targetIndex]\n    }));\n  },\n  dragControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  }\n});\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n\nfunction getDraggableEvent(e) {\n  var datas = e.originalDatas.draggable;\n  if (!datas) {\n    e.originalDatas.draggable = {};\n    datas = e.originalDatas.draggable;\n  }\n  return __assign(__assign({}, e), {\n    datas: datas\n  });\n}\nvar edgeDraggable = makeAble(\"edgeDraggable\", {\n  css: [\".edge.edgeDraggable.line {\\n    cursor: move;\\n}\"],\n  render: function (moveable, React) {\n    var props = moveable.props;\n    var edge = props.edgeDraggable;\n    if (!edge) {\n      return [];\n    }\n    return renderEdgeLines(React, \"edgeDraggable\", edge, moveable.getState().renderPoses, props.zoom);\n  },\n  dragCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"edge\")) && hasClass(target, prefix(\"edgeDraggable\"));\n  },\n  dragStart: function (moveable, e) {\n    return Draggable.dragStart(moveable, getDraggableEvent(e));\n  },\n  drag: function (moveable, e) {\n    return Draggable.drag(moveable, getDraggableEvent(e));\n  },\n  dragEnd: function (moveable, e) {\n    return Draggable.dragEnd(moveable, getDraggableEvent(e));\n  },\n  dragGroupCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n  },\n  dragGroupStart: function (moveable, e) {\n    return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n  },\n  dragGroup: function (moveable, e) {\n    return Draggable.dragGroup(moveable, getDraggableEvent(e));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n  },\n  unset: function (moveable) {\n    return Draggable.unset(moveable);\n  }\n});\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n\nvar IndividualGroupable = {\n  name: \"individualGroupable\",\n  props: {\n    individualGroupable: Boolean\n  },\n  events: {}\n};\nvar MOVEABLE_ABLES = [BeforeRenderable, Default, Snappable, Pinchable, Draggable, edgeDraggable, Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin, OriginDraggable, Clippable, Roundable, Groupable, IndividualGroupable, Clickable, DragArea, Renderable];\nvar MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), \"events\" in able ? able.events : {});\n}, {});\nvar MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), able.props);\n}, {});\nvar MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nvar MOVEABLE_EVENTS = Object.keys(MOVEABLE_EVENTS_MAP);\nvar MOVEABLE_PROPS = Object.keys(MOVEABLE_PROPS_MAP);\nfunction solveConstantsDistance(_a, pos) {\n  var a = _a[0],\n    b = _a[1],\n    c = _a[2];\n  return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nfunction solveC(_a, pos) {\n  var a = _a[0],\n    b = _a[1]; // ax + by + c = 0\n  // -ax -by;\n\n  return -a * pos[0] - b * pos[1];\n}\nfunction getMaxPos(poses, index) {\n  return Math.max.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getMinPos(poses, index) {\n  return Math.min.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getGroupRect(parentPoses, rotation) {\n  var _a;\n  var pos1 = [0, 0];\n  var pos2 = [0, 0];\n  var pos3 = [0, 0];\n  var pos4 = [0, 0];\n  var width = 0;\n  var height = 0;\n  if (!parentPoses.length) {\n    return {\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: width,\n      height: height,\n      rotation: rotation\n    };\n  }\n  var fixedRotation = throttle(rotation, TINY_NUM);\n  if (fixedRotation % 90) {\n    var rad = fixedRotation / 180 * Math.PI;\n    var a1_1 = Math.tan(rad);\n    var a2_1 = -1 / a1_1; // ax = y  // -ax + y = 0 // 0 => 1\n    // -ax = y // ax + y = 0  // 0 => 3\n\n    var a1MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a1MinMaxPos_1 = [[0, 0], [0, 0]];\n    var a2MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a2MinMaxPos_1 = [[0, 0], [0, 0]];\n    parentPoses.forEach(function (poses) {\n      poses.forEach(function (pos) {\n        // const b1 = pos[1] - a1 * pos[0];\n        // const b2 = pos[1] - a2 * pos[0];\n        var a1Dist = solveConstantsDistance([-a1_1, 1, 0], pos);\n        var a2Dist = solveConstantsDistance([-a2_1, 1, 0], pos);\n        if (a1MinMax_1[0] > a1Dist) {\n          a1MinMaxPos_1[0] = pos;\n          a1MinMax_1[0] = a1Dist;\n        }\n        if (a1MinMax_1[1] < a1Dist) {\n          a1MinMaxPos_1[1] = pos;\n          a1MinMax_1[1] = a1Dist;\n        }\n        if (a2MinMax_1[0] > a2Dist) {\n          a2MinMaxPos_1[0] = pos;\n          a2MinMax_1[0] = a2Dist;\n        }\n        if (a2MinMax_1[1] < a2Dist) {\n          a2MinMaxPos_1[1] = pos;\n          a2MinMax_1[1] = a2Dist;\n        }\n      });\n    });\n    var a1MinPos = a1MinMaxPos_1[0],\n      a1MaxPos = a1MinMaxPos_1[1];\n    var a2MinPos = a2MinMaxPos_1[0],\n      a2MaxPos = a2MinMaxPos_1[1];\n    var minHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MinPos)];\n    var maxHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MaxPos)];\n    var minVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MinPos)];\n    var maxVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MaxPos)];\n    _a = [[minHorizontalLine, minVerticalLine], [minHorizontalLine, maxVerticalLine], [maxHorizontalLine, minVerticalLine], [maxHorizontalLine, maxVerticalLine]].map(function (_a) {\n      var line1 = _a[0],\n        line2 = _a[1];\n      return getIntersectionPointsByConstants(line1, line2)[0];\n    }), pos1 = _a[0], pos2 = _a[1], pos3 = _a[2], pos4 = _a[3];\n    width = a2MinMax_1[1] - a2MinMax_1[0];\n    height = a1MinMax_1[1] - a1MinMax_1[0];\n  } else {\n    var minX_1 = getMinPos(parentPoses, 0);\n    var minY_1 = getMinPos(parentPoses, 1);\n    var maxX_1 = getMaxPos(parentPoses, 0);\n    var maxY_1 = getMaxPos(parentPoses, 1);\n    pos1 = [minX_1, minY_1];\n    pos2 = [maxX_1, minY_1];\n    pos3 = [minX_1, maxY_1];\n    pos4 = [maxX_1, maxY_1];\n    width = maxX_1 - minX_1;\n    height = maxY_1 - minY_1;\n    if (fixedRotation % 180) {\n      // 0\n      // 1 2\n      // 3 4\n      // 90\n      // 3 1\n      // 4 2\n      // 180\n      // 4 3\n      // 2 1\n      // 270\n      // 2 4\n      // 1 3\n      // 1, 2, 3,4 = 3 1 4 2\n      var changedX = [pos3, pos1, pos4, pos2];\n      pos1 = changedX[0], pos2 = changedX[1], pos3 = changedX[2], pos4 = changedX[3];\n      width = maxY_1 - minY_1;\n      height = maxX_1 - minX_1;\n    }\n  }\n  if (fixedRotation % 360 > 180) {\n    // 1 2   4 3\n    // 3 4   2 1\n    var changedX = [pos4, pos3, pos2, pos1];\n    pos1 = changedX[0], pos2 = changedX[1], pos3 = changedX[2], pos4 = changedX[3];\n  }\n  var _b = getMinMaxs([pos1, pos2, pos3, pos4]),\n    minX = _b.minX,\n    minY = _b.minY,\n    maxX = _b.maxX,\n    maxY = _b.maxY;\n  return {\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    width: width,\n    height: height,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    rotation: rotation\n  };\n}\nfunction findMoveableGroups(moveables, childTargetGroups) {\n  var groups = childTargetGroups.map(function (targetGroup) {\n    if (isArray(targetGroup)) {\n      var childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n      var length = childMoveableGroups.length;\n      if (length > 1) {\n        return childMoveableGroups;\n      } else if (length === 1) {\n        return childMoveableGroups[0];\n      } else {\n        return null;\n      }\n    } else {\n      var checked = find(moveables, function (_a) {\n        var manager = _a.manager;\n        return manager.props.target === targetGroup;\n      });\n      if (checked) {\n        checked.finded = true;\n        return checked.manager;\n      }\n      return null;\n    }\n  }).filter(Boolean);\n  if (groups.length === 1 && isArray(groups[0])) {\n    return groups[0];\n  }\n  return groups;\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\n\nvar MoveableGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableGroup, _super);\n  function MoveableGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.differ = new ChildrenDiffer();\n    _this.moveables = [];\n    _this.transformOrigin = \"50% 50%\";\n    _this.renderGroupRects = [];\n    _this._targetGroups = [];\n    _this._hasFirstTargets = false;\n    return _this;\n  }\n  var __proto = MoveableGroup.prototype;\n  __proto.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n  };\n  __proto.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    this.updateAbles();\n  };\n  __proto.getTargets = function () {\n    return this.props.targets;\n  };\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    var _a;\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var state = this.state;\n    if (!this.controlBox || state.isPersisted) {\n      return;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, false, false);\n    });\n    var props = this.props;\n    var moveables = this.moveables;\n    var target = state.target || props.target;\n    var checkeds = moveables.map(function (moveable) {\n      return {\n        finded: false,\n        manager: moveable\n      };\n    });\n    var targetGroups = this.props.targetGroups || [];\n    var moveableGroups = findMoveableGroups(checkeds, targetGroups);\n    moveableGroups.push.apply(moveableGroups, checkeds.filter(function (_a) {\n      var finded = _a.finded;\n      return !finded;\n    }).map(function (_a) {\n      var manager = _a.manager;\n      return manager;\n    }));\n    var renderGroupRects = [];\n    var isReset = !isTarget || type !== \"\" && props.updateGroup;\n    var defaultGroupRotate = props.defaultGroupRotate || 0;\n    if (!this._hasFirstTargets) {\n      var persistedRoatation = (_a = this.props.persistData) === null || _a === void 0 ? void 0 : _a.rotation;\n      if (persistedRoatation != null) {\n        defaultGroupRotate = persistedRoatation;\n      }\n    }\n    function getMoveableGroupRect(group, parentRotation, isRoot) {\n      var posesRotations = group.map(function (moveable) {\n        if (isArray(moveable)) {\n          var rect = getMoveableGroupRect(moveable, parentRotation);\n          var poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n          renderGroupRects.push(rect);\n          return {\n            poses: poses,\n            rotation: rect.rotation\n          };\n        } else {\n          return {\n            poses: getAbsolutePosesByState(moveable.state),\n            rotation: moveable.getRotation()\n          };\n        }\n      });\n      var rotations = posesRotations.map(function (_a) {\n        var rotation = _a.rotation;\n        return rotation;\n      });\n      var groupRotation = 0;\n      var firstRotation = rotations[0];\n      var isSameRotation = rotations.every(function (nextRotation) {\n        return Math.abs(firstRotation - nextRotation) < 0.1;\n      });\n      if (isReset) {\n        groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n      } else {\n        groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n      }\n      var groupPoses = posesRotations.map(function (_a) {\n        var poses = _a.poses;\n        return poses;\n      });\n      var groupRect = getGroupRect(groupPoses, groupRotation);\n      return groupRect;\n    }\n    var rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n    if (isReset) {\n      // reset rotataion\n      this.rotation = rootGroupRect.rotation;\n      this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n      this.scale = [1, 1];\n    }\n    this._targetGroups = targetGroups;\n    this.renderGroupRects = renderGroupRects;\n    var transformOrigin = this.transformOrigin;\n    var rotation = this.rotation;\n    var scale = this.scale;\n    var width = rootGroupRect.width,\n      height = rootGroupRect.height,\n      minX = rootGroupRect.minX,\n      minY = rootGroupRect.minY;\n    var posesInfo = rotatePosesInfo([[0, 0], [width, 0], [0, height], [width, height]], convertTransformOriginArray(transformOrigin, width, height), this.rotation / 180 * Math.PI);\n    var _b = getMinMaxs(posesInfo.result),\n      deltaX = _b.minX,\n      deltaY = _b.minY;\n    var rotateScale = \" rotate(\".concat(rotation, \"deg)\") + \" scale(\".concat(scale[0] >= 0 ? 1 : -1, \", \").concat(scale[1] >= 0 ? 1 : -1, \")\");\n    var transform = \"translate(\".concat(-deltaX, \"px, \").concat(-deltaY, \"px)\").concat(rotateScale);\n    this.controlBox.getElement().style.transform = \"translate3d(\".concat(minX, \"px, \").concat(minY, \"px, \").concat(this.props.translateZ || 0, \")\");\n    target.style.cssText += \"left:0px;top:0px;\" + \"transform-origin:\".concat(transformOrigin, \";\") + \"width:\".concat(width, \"px;height:\").concat(height, \"px;\") + \"transform: \".concat(transform);\n    state.width = width;\n    state.height = height;\n    var container = this.getContainer();\n    var info = getMoveableTargetInfo(this.controlBox.getElement(), target, this.controlBox.getElement(), this.getContainer(), this._rootContainer || container, []);\n    var pos = [info.left, info.top];\n    var _c = getAbsolutePosesByState(info),\n      pos1 = _c[0],\n      pos2 = _c[1],\n      pos3 = _c[2],\n      pos4 = _c[3]; // info.left + info.pos(1 ~ 4)\n\n    var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n    var delta = [minPos.minX, minPos.minY];\n    var direction = scale[0] * scale[1] > 0 ? 1 : -1;\n    info.pos1 = minus(pos1, delta);\n    info.pos2 = minus(pos2, delta);\n    info.pos3 = minus(pos3, delta);\n    info.pos4 = minus(pos4, delta); // info.left = info.left + delta[0];\n    // info.top = info.top + delta[1];\n\n    info.left = minX - info.left + delta[0];\n    info.top = minY - info.top + delta[1];\n    info.origin = minus(plus(pos, info.origin), delta);\n    info.beforeOrigin = minus(plus(pos, info.beforeOrigin), delta);\n    info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin);\n    info.transformOrigin = minus(plus(pos, info.transformOrigin), delta);\n    target.style.transform = \"translate(\".concat(-deltaX - delta[0], \"px, \").concat(-deltaY - delta[1], \"px)\") + rotateScale;\n    this.updateState(__assign(__assign({}, info), {\n      posDelta: delta,\n      direction: direction,\n      beforeDirection: direction\n    }), isSetState);\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.triggerEvent = function (name, e, isManager) {\n    if (isManager || name.indexOf(\"Group\") > -1) {\n      return _super.prototype.triggerEvent.call(this, name, e);\n    } else {\n      this._emitter.trigger(name, e);\n    }\n  };\n  __proto.updateAbles = function () {\n    _super.prototype.updateAbles.call(this, __spreadArray(__spreadArray([], this.props.ables, true), [Groupable], false), \"Group\");\n  };\n  __proto._updateTargets = function () {\n    _super.prototype._updateTargets.call(this);\n    this._prevTarget = this.props.dragTarget || this.areaElement;\n  };\n  __proto._updateEvents = function () {\n    var state = this.state;\n    var props = this.props;\n    var prevTarget = this._prevTarget;\n    var nextTarget = props.dragTarget || this.areaElement;\n    if (prevTarget !== nextTarget) {\n      unset(this, \"targetGesto\");\n      unset(this, \"controlGesto\");\n      state.target = null;\n    }\n    if (!state.target) {\n      state.target = this.areaElement;\n      this.controlBox.getElement().style.display = \"block\";\n    }\n    if (state.target) {\n      if (!this.targetGesto) {\n        this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n      }\n      if (!this.controlGesto) {\n        this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n      }\n    }\n    var isContainerChanged = !equals(state.container, props.container);\n    if (isContainerChanged) {\n      state.container = props.container;\n    }\n    var targets = props.targets;\n    var _a = this.differ.update(targets),\n      added = _a.added,\n      changed = _a.changed,\n      removed = _a.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isContainerChanged || isTargetChanged || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\") || changed.length || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])) {\n      this.updateRect();\n      this._hasFirstTargets = true;\n    }\n    this._isPropTargetChanged = !!isTargetChanged;\n  };\n  __proto._updateObserver = function () {};\n  MoveableGroup.defaultProps = __assign(__assign({}, MoveableManager.defaultProps), {\n    transformOrigin: [\"50%\", \"50%\"],\n    groupable: true,\n    dragArea: true,\n    keepRatio: true,\n    targets: [],\n    defaultGroupRotate: 0,\n    defaultGroupOrigin: \"50% 50%\"\n  });\n  return MoveableGroup;\n}(MoveableManager);\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\n\nvar MoveableIndividualGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableIndividualGroup, _super);\n  function MoveableIndividualGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.moveables = [];\n    return _this;\n  }\n  var __proto = MoveableIndividualGroup.prototype;\n  __proto.render = function () {\n    var _this = this;\n    var _a;\n    var props = this.props;\n    var cspNonce = props.cspNonce,\n      ControlBoxElement = props.cssStyled,\n      persistData = props.persistData;\n    var targets = props.targets || [];\n    var length = targets.length;\n    var canPersist = this.isUnmounted || !length;\n    var persistDatChildren = (_a = persistData === null || persistData === void 0 ? void 0 : persistData.children) !== null && _a !== void 0 ? _a : [];\n    if (canPersist && !length && persistDatChildren.length) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else if (!canPersist) {\n      persistDatChildren = [];\n    }\n    return React.createElement(ControlBoxElement, {\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: prefix(\"control-box\")\n    }, targets.map(function (target, i) {\n      return React.createElement(MoveableManager, __assign({\n        key: \"moveable\" + i,\n        ref: refs(_this, \"moveables\", i)\n      }, _this.props, {\n        target: target,\n        wrapperMoveable: _this,\n        isWrapperMounted: _this.isMoveableMounted,\n        persistData: persistDatChildren[i]\n      }));\n    }));\n  };\n  __proto.componentDidUpdate = function () {};\n  __proto.getTargets = function () {\n    return this.props.targets;\n  };\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, isTarget, isSetState);\n    });\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.request = function () {\n    return {\n      request: function () {\n        return this;\n      },\n      requestEnd: function () {\n        return this;\n      }\n    };\n  };\n  __proto.dragStart = function () {\n    return this;\n  };\n  __proto.hitTest = function () {\n    return 0;\n  };\n  __proto.isInside = function () {\n    return false;\n  };\n  __proto.isDragging = function () {\n    return false;\n  };\n  __proto.updateRenderPoses = function () {};\n  __proto.checkUpdate = function () {};\n  __proto.triggerEvent = function () {};\n  __proto.updateAbles = function () {};\n  __proto._updateEvents = function () {};\n  __proto._updateObserver = function () {};\n  return MoveableIndividualGroup;\n}(MoveableManager);\nfunction getElementTargets(refTargets, selectorMap) {\n  var elementTargets = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        elementTargets.push.apply(elementTargets, selectorMap[target]);\n      }\n      return;\n    }\n    if (isArray(target)) {\n      elementTargets.push.apply(elementTargets, getElementTargets(target, selectorMap));\n    } else {\n      elementTargets.push(target);\n    }\n  });\n  return elementTargets;\n}\nfunction getTargetGroups(refTargets, selectorMap) {\n  var targetGroups = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        targetGroups.push.apply(targetGroups, selectorMap[target]);\n      }\n      return;\n    }\n    if (isArray(target)) {\n      targetGroups.push(getTargetGroups(target, selectorMap));\n    } else {\n      targetGroups.push(target);\n    }\n  });\n  return targetGroups;\n}\nfunction compareRefTargets(prevRefTargets, nextRefTargets) {\n  return prevRefTargets.length !== nextRefTargets.length || prevRefTargets.some(function (target, i) {\n    var nextTarget = nextRefTargets[i];\n    if (!target && !nextTarget) {\n      return false;\n    } else if (target != nextTarget) {\n      if (isArray(target) && isArray(nextTarget)) {\n        return compareRefTargets(target, nextTarget);\n      }\n      return true;\n    }\n    return false;\n  });\n}\nvar InitialMoveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(InitialMoveable, _super);\n  function InitialMoveable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.refTargets = [];\n    _this.selectorMap = {};\n    _this._differ = new ChildrenDiffer();\n    _this._elementTargets = [];\n    _this._onChangeTargets = null;\n    return _this;\n  }\n  var __proto = InitialMoveable.prototype;\n  InitialMoveable.makeStyled = function () {\n    var cssMap = {};\n    var ables = this.getTotalAbles();\n    ables.forEach(function (_a) {\n      var css = _a.css;\n      if (!css) {\n        return;\n      }\n      css.forEach(function (text) {\n        cssMap[text] = true;\n      });\n    });\n    var style = getKeys(cssMap).join(\"\\n\");\n    this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n  };\n  InitialMoveable.getTotalAbles = function () {\n    return __spreadArray([Default, Groupable, IndividualGroupable, DragArea], this.defaultAbles, true);\n  };\n  __proto.render = function () {\n    var _a;\n    var moveableContructor = this.constructor;\n    if (!moveableContructor.defaultStyled) {\n      moveableContructor.makeStyled();\n    }\n    var _b = this.props,\n      userAbles = _b.ables,\n      userProps = _b.props,\n      props = __rest(_b, [\"ables\", \"props\"]);\n    var refTargets = this._updateRefs(true);\n    var elementTargets = getElementTargets(refTargets, this.selectorMap);\n    var isGroup = elementTargets.length > 1;\n    var totalAbles = moveableContructor.getTotalAbles();\n    var ables = __spreadArray(__spreadArray([], totalAbles, true), userAbles || [], true);\n    var nextProps = __assign(__assign(__assign({}, props), userProps || {}), {\n      ables: ables,\n      cssStyled: moveableContructor.defaultStyled,\n      customStyledMap: moveableContructor.customStyledMap\n    });\n    this._elementTargets = elementTargets;\n    var firstRenderState = null;\n    var prevMoveable = this.moveable;\n    var persistData = props.persistData;\n    if (persistData === null || persistData === void 0 ? void 0 : persistData.children) {\n      isGroup = true;\n    }\n    if (isGroup) {\n      if (props.individualGroupable) {\n        return React.createElement(MoveableIndividualGroup, __assign({\n          key: \"individual-group\",\n          ref: ref(this, \"moveable\")\n        }, nextProps, {\n          target: null,\n          targets: elementTargets\n        }));\n      }\n      var targetGroups = getTargetGroups(refTargets, this.selectorMap); // manager\n\n      if (prevMoveable && !prevMoveable.props.groupable && !prevMoveable.props.individualGroupable) {\n        var target = prevMoveable.props.target;\n        if (target && elementTargets.indexOf(target) > -1) {\n          firstRenderState = __assign({}, prevMoveable.state);\n        }\n      }\n      return React.createElement(MoveableGroup, __assign({\n        key: \"group\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, (_a = props.groupableProps) !== null && _a !== void 0 ? _a : {}, {\n        target: null,\n        targets: elementTargets,\n        targetGroups: targetGroups,\n        firstRenderState: firstRenderState\n      }));\n    } else {\n      var target_1 = elementTargets[0]; // manager\n\n      if (prevMoveable && (prevMoveable.props.groupable || prevMoveable.props.individualGroupable)) {\n        var moveables = prevMoveable.moveables || [];\n        var prevTargetMoveable = find(moveables, function (mv) {\n          return mv.props.target === target_1;\n        });\n        if (prevTargetMoveable) {\n          firstRenderState = __assign({}, prevTargetMoveable.state);\n        }\n      }\n      return React.createElement(MoveableManager, __assign({\n        key: \"single\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: target_1,\n        firstRenderState: firstRenderState\n      }));\n    }\n  };\n  __proto.componentDidMount = function () {\n    this._checkChangeTargets();\n    this._updateRefs();\n  };\n  __proto.componentDidUpdate = function () {\n    this._checkChangeTargets();\n  };\n  __proto.componentWillUnmount = function () {\n    this.selectorMap = {};\n    this.refTargets = [];\n  };\n  /**\n   * Get targets set in moveable through target or targets of props.\n   * @method Moveable#getTargets\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body, {\n   *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n   * });\n   *\n   * console.log(moveable.getTargets());\n   */\n\n  __proto.getTargets = function () {\n    var _a, _b;\n    return (_b = (_a = this.moveable) === null || _a === void 0 ? void 0 : _a.getTargets()) !== null && _b !== void 0 ? _b : [];\n  };\n  /**\n   * If the element list corresponding to the selector among the targets is changed, it is updated.\n   * @method Moveable#updateSelectors\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body, {\n   *    target: \".target\",\n   * });\n   *\n   * moveable.updateSelectors();\n   */\n\n  __proto.updateSelectors = function () {\n    this.selectorMap = {};\n    this._updateRefs();\n  };\n  /**\n   * User changes target and waits for target to change.\n   * @method Moveable#waitToChangeTarget\n   * @story combination-with-other-components--use-selecto\n   * @example\n   * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n   *   moveable.waitToChangeTarget().then(() => {\n   *      moveable.dragStart(e.currentTarget);\n   *   });\n   *   moveable.target = e.currentTarget;\n   * });\n   */\n\n  __proto.waitToChangeTarget = function () {\n    // let resolvePromise: (e: OnChangeTarget) => void;\n    var _this = this; // this._onChangeTargets = () => {\n    //     this._onChangeTargets = null;\n    //     resolvePromise({\n    //         moveable: this.getManager(),\n    //         targets: this._elementTargets,\n    //     });\n    // };\n    // return new Promise<OnChangeTarget>(resolve => {\n    //     resolvePromise = resolve;\n    // });\n\n    var resolvePromise;\n    this._onChangeTargets = function () {\n      _this._onChangeTargets = null;\n      resolvePromise();\n    };\n    return new Promise(function (resolve) {\n      resolvePromise = resolve;\n    });\n  };\n  __proto.waitToChangeTargets = function () {\n    return this.waitToChangeTarget();\n  };\n  __proto.getManager = function () {\n    return this.moveable;\n  };\n  __proto._updateRefs = function (isRender) {\n    var prevRefTargets = this.refTargets;\n    var nextRefTargets = getRefTargets(this.props.target || this.props.targets);\n    var isBrowser = typeof document !== \"undefined\";\n    var isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n    var selectorMap = this.selectorMap;\n    var nextSelectorMap = {};\n    this.refTargets.forEach(function updateSelectorMap(target) {\n      if (isString(target)) {\n        var selectorTarget = selectorMap[target];\n        if (selectorTarget) {\n          nextSelectorMap[target] = selectorMap[target];\n        } else if (isBrowser) {\n          isUpdate = true;\n          nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n        }\n      } else if (isArray(target)) {\n        target.forEach(updateSelectorMap);\n      }\n    });\n    this.refTargets = nextRefTargets;\n    this.selectorMap = nextSelectorMap;\n    if (!isRender && isUpdate) {\n      this.forceUpdate();\n    }\n    return nextRefTargets;\n  };\n  __proto._checkChangeTargets = function () {\n    var _a, _b, _c;\n    var _d = this._differ.update(this._elementTargets),\n      added = _d.added,\n      removed = _d.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isTargetChanged) {\n      (_b = (_a = this.props).onChangeTargets) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        moveable: this.moveable,\n        targets: this._elementTargets\n      });\n      (_c = this._onChangeTargets) === null || _c === void 0 ? void 0 : _c.call(this);\n    }\n    this._updateRefs();\n  };\n  InitialMoveable.defaultAbles = [];\n  InitialMoveable.customStyledMap = {};\n  InitialMoveable.defaultStyled = null;\n  __decorate([withMethods(MOVEABLE_METHODS)], InitialMoveable.prototype, \"moveable\", void 0);\n  return InitialMoveable;\n}(React.PureComponent);\nvar Moveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(Moveable, _super);\n  function Moveable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Moveable.defaultAbles = MOVEABLE_ABLES;\n  return Moveable;\n}(InitialMoveable);\nfunction makeMoveable(ables) {\n  var _a;\n  return _a = /*#__PURE__*/\n  function (_super) {\n    __extends(Moveable, _super);\n    function Moveable() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Moveable;\n  }(InitialMoveable), _a.defaultAbles = ables, _a;\n}\nexport { Clippable, DIRECTIONS, Draggable, edgeDraggable as EdgeDraggable, InitialMoveable, MOVEABLE_ABLES, MOVEABLE_EVENTS, MOVEABLE_EVENTS_MAP, MOVEABLE_EVENTS_PROPS_MAP, MOVEABLE_METHODS, MOVEABLE_PROPS, MOVEABLE_PROPS_MAP, Pinchable, Resizable, Rotatable, Roundable, Scalable, Snappable, Warpable, Moveable as default, getElementInfo, makeAble, makeMoveable };","map":{"version":3,"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","IS_FIREFOX","IS_SAFARI_ABOVE15","parseInt","webkitVersion","version","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS4","DIRECTIONS","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","ableName","result","_b","gestos","move","inputEvent","datas","originalDatas","ableDatas","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","draggable","__proto","prototype","dragStart","client","type","drag","clientX","clientY","isFirstDrag","isPrevDrag","distX","distY","deltaX","deltaY","parentGesto","calculatePointerDist","moveable","moveableClientRect","rootMatrix","is3d","pos1","left","top","minus","calculateInversePosition","posX","posY","_c","getDragDist","setDragStart","allMatrix","beforeMatrix","origin","offsetMatrix","targetMatrix","transformOrigin","matrix","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","calculateMoveablePosition","beforeTransform","direction","resolveTransformEvent","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","length","nextTransformAppendedIndexes","nextIndex","findIndex","text","match","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","width","height","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","getPosesByDirection","poses","getPosByDirection","xRatio","yRatio","dot","bottom","getDist","startPos","fixedDirection","calculatePoses","fixedPos","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","targetTransform","parseMat","convertDimension","scaleMatrix","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","setDefaultTransformIndex","property","func","indexOf","parse","startValue","functionValue","fillOriginalTransform","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","Draggable","fillCSSObject","getTranslateDist","fixedPosition","groupable","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getDirectionByPos","nextFixedOffset","calculatePosition","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","getAbsolutePosesByState","getGestoData","targetGesto","controlGesto","data","getEventData","multiply2","pos2","prefix","classNames","_i","arguments","prefixNames","apply","defaultSync","fn","getTransformMatrix","isObject","multiplies","createOriginMatrix","a","measureSVGSize","el","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle$1","o","style","split","getElementTransform","target","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","checkZoom","targetStyle","doc","ownerDocument","document","documentElement","body","hasSlot","parentSlotElement","assignedSlotParentElement","assignedSlot","parentElement","isCustomElement","isEnd","position","offsetZoom","targetZoom","zoom","targetPosition","tagName","willChange","slotParentNode","parentNode","targetParentNode","nodeType","host","isStatic","offsetParent","getOffsetPosInfo","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","marginTop","right","convert3DMatrixes","forEach","getPositionFixedInfo","fixedContainer","hasTransform","makeMatrixCSS","convertMatrixtoCSS","clientWidth","clientHeight","x","y","getSVGMatrix","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","isGTarget","getBBox","bbox","getRect","posesX","posesY","rectWidth","rectHeight","calculateRect","getSVGOffset","offsetInfo","targetInfo","container","getSize","offsetWidth","offsetHeight","containerClientRect","getBoundingClientRect","margin","rect","rectLeft","scrollLeft","clientLeft","rectTop","scrollTop","clientTop","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","calculateMoveableClientPositions","rootClientRect","rootPoses","y1","x2","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","pos3","pos4","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","rad","getRad","getControlTransform","rotation","reduce","prev","getProps","self","cssWidth","cssHeight","contentWidth","contentHeight","minWidth","minHeight","minOffsetWidth","minOffsetHeight","maxWidth","Infinity","maxHeight","maxOffsetWidth","maxOffsetHeight","inlineCSSWidth","inlineCSSHeight","svg","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","horizontalOffset","verticalOffset","containerWidth","containerHeight","parentStyle","convertUnitSize","between","getRotationRad","resetClientRect","scrollWidth","scrollHeight","getExtendsRect","isRoot","extendsRect","overflow","getClientRectByPosition","base","isExtends","baseTop","baseLeft","getClientRect","clientRect","getTotalDirection","parentDirection","getDirection","deg","getAttribute","direciton","dir","getAbsolutePoses","roundSign","num","unset","resolvedEvent","cssText","getKeys","decamelize","fillAfterTransform","prevEvent","nextEvent","fillParams","params","isBeforeEvent","nextParams","currentTarget","isTrusted","stopAble","isEventStart","stopDrag","stop","call","isStartEvent","lastEvent","fillEndParams","isDouble","catchEvent","callback","_emitter","on","triggerEvent","isManager","getComputedStyle","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","groups","groupKeys","groupKey","keyIndex","group","groupByMap","flat","cur","maxOffset","args","sort","b","calculatePadding","convertCSSSize","isRelative","getTinyDist","v","getDirectionViewClassName","isDragging","getDirectionCondition","checkAbles","isRequest","requestAble","hasClass","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","querySelectorAll","getAbsoluteRotation","PI","getDragDistByState","calculateMatrixDist","getSizeDistByDist","startSize","ratio","keepRatio","startOffsetWidth","startOffsetHeight","distWidth","distHeight","standardRad","signSize","cos","startWidthSize","startHeightSize","distSize","ratioRad","sin","getOffsetSizeDist","sizeDirection","parentDistance","parentDist","parentScale","startFixedDirection","directionsDists","directionRatios","ratioDistance","dist_1","convertTransformUnit","xy","leftOrigin","rightOrigin","originObject","nextOriginObject","convertTransformOriginArray","rotatePosesInfo","prevPoses","nextPoses","rotate","next","isDeepArrayEquals","arr1","arr2","every","value1","value2","isArray1","isArray2","Pinchable","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","pinchStart","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","fillChildEvents","groupableDatas","childDatas","moveables","_","triggerChildGesto","isStart","childs","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","dx","dy","TINY_NUM$1","c","throttle","checkMoveableSnapPoses","customSnapThreshold","snapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endX","endY","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","getCheckSnapDirections","directions","endDirection_1","signX","signY","nextDirection","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","virtualPoses","dir1","dir2","virtualLine","isBoundRotate$1","isBoundRotate","relativePoses","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","_f","nextBounds","checkBounds","getBounds","externalBounds","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","React","key","scaleType","createElement","className","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","element","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","nextGuidelines","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","getDist$1","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","getTotalGuidelines","hasFixed","containerClientHeight","containerClientWidth","snapGap","maxSnapElementGuidelineDistance","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","sizes","snapWidth","snapHeight","nextPosInfo","targetClientRect","containerLeft","containerTop","getMinMaxs","targetLeft","minX","targetTop","minY","elementLeft","elementTop","elementRight","elementBottom","checkSnapInfo","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","getNextFixedPoses","nextFixedPos","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","origin2","checkSnapResize","nextAllMatrix","checkSnapScale","sizeDist","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition$2","Snappable","dragRelation","Array","Object","Number","snapRenderThreshold","Function","onSnap","css","render","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","dragEnd","dragControlCondition","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","renderDirectionControlsByInfos","renderDirections","getState","renderPoses","rotationRad","degRotation","directionMap","renderState","renderDirectionMap","directionRotation","dataAttrs","renderDirectionControls","defaultDirections","renderAroundControls","renderLine","renderEdgeLines","edge","index1","index2","getRenderDirections","renderDiagonalDirections","renderAllDirections","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","requestStyle","dragInfo","beforeOrigin","prevDist","prevBeforeDist","deltaOffset","set","startRect","parentMoveable","dragRotateRad","ry","rx","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","isControl","requestStart","requestEnd","directionCondition$1","Resizable","resizable","throttleResize","resizeFormat","keepRatioFinally","checkResizableError","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","viewClassName","isGroup","parentFixedDirection","minSize","startWidth","startHeight","maxSize","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","startPositions","setFixedDirection","setFixedPosition","setMin","setMax","nextMaxSize","isNumber","startRatio","setOrigin","startFixedPosition","isResize","parentKeepRatio","dragClient","resolveMatrix","targetN","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","computeSize","isNoSnap","calculateBoundSize","inverseDelta","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragGroupControlCondition","originalEvents","setDist","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","radPoses","isReverse","rotationTarget","contains","directionCSS","Rotatable","rotatable","String","rotateAroundControls","resolveAblesWithRotatable","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","positions","jsxs","resolveMap_1","directionControlInfos","resolve","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","controlDirection","isAroundControl","resolveAble","clientPoses","originalFixedPosition_1","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","posDelta","parentPosition","controlPosition","parentFixedPosition","rotatation","isRotate","clientDistX","clientDistY","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","resize","resizeEvent","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","setGroupRotation","distRotate","getRotation","deltaRotate","directionCondition","Scalable","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","Warpable","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","createIdentityMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","DragArea","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","Origin","getDefaultScrollPosition","scrollContainer","Scrollable","scrollable","scrollThreshold","scrollThrottleTime","getScrollPosition","scrollOptions","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","getCurrentEvent","checkScroll","throttleTime","dragGroupControEnd","Default","dragTarget","portalContainer","rootContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","flushSync","stopPropagation","preventClickEventOnDrag","preventClickDefault","viewContainer","persistData","useAccuratePosition","firstRenderState","linePadding","onChangeTargets","Padding","padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","_h","swValue","_j","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getControlSize","xRange","yRange","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","minMaxs","maxX","maxY","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","_s","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","addClipPath","clipIndex","clipStyle","clipEventType","removeClipPath","Clippable","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","OriginDraggable","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","getStyleBorderRadius","firstTarget","getTargets","Roundable","roundable","minRoundControls","maxRoundControls","roundClickable","roundPadding","isDisplayShadowRoundControls","onRoundStart","onRound","onRoundEnd","onRoundGroupStart","onRoundGroup","onRoundGroupEnd","verticalCount","horizontalCount","basePos","originalPos","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","BeforeRenderable","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","Renderable","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","updateRect","requestAble_1","eventAbles","elementFromPoint","isDragStop","results","nextDatas","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","checkMoveableTarget","eventTarget","isMoveableElement","controlBox","getElement","getTargetAbleGesto","moveableTarget","getAbleGesto","conditionFunctions","isTargetAbles","options","preventRightClick","preventWheelClick","preventClickEventOnDragStart","preventClickEventByCondition","gesto","Gesto","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","getShadowRoot","getRootNode","rootNode","getMatrixStackInfo","checkContainer","targetTransformOrigin","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","offsetPos","isOffsetEnd","customOffsetParent","customOffsetLeft","customOffsetTop","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","isElementTarget","calculateMatrixStack","isAbsolute3d","prevTargetMatrix","containerZoom","rootMatrixes","isRoot3d","offsetRootContainer","rootZoom","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","originalRootMatrix","hasZoom","calculateElementInfo","allResult","getElementInfo","getMoveableTargetInfo","moveableElement","parentContainer","rootContainerClientRect","offsetDelta","computedStyle_1","beforePosition","absoluteTargetPosition","absoluteContainerPosition","containerClientRectLeft","containerClientRectTop","containterClientLeft","containerClientTop","clientDelta","originalBeforeOrigin","getPersistState","isPersisted","MoveableManager","_super","__extends","targetAbles","isMoveableMounted","EventEmitter","_prevTarget","_prevDragArea","_isPropTargetChanged","_hasFirstTarget","_observer","_observerId","_rootContainer","_viewContainer","_viewClassNames","checkUpdateRect","cancelAnimationFrame","_onPreventClick","propsTarget","ControlBoxElement","cssStyled","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","isVisible","renderAbles","_renderLines","componentDidMount","wrapperMoveable","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","_changeAbleViewClassNames","manager","getAble","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","nextState","_getRequestStyles","persistState","updateState","updateTarget","statePos","getManager","isInstant","requsetAble","ableRequester","requester","ableParam","stateLeft","stateTop","stateContainer","updateAbles","isTargetChanged","isChanged","moveableContainer","unsetAbles","waitToChangeTarget","Promise","trigger","useCSS","tag","customStyleMap","customStyledMap","styled","hasControlBox","updateSelectors","setState","always","Renderer","styleNames","ableStyleNames","ResizeObserver","disconnect","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","hideChildMoveableDefaultLines","useDragArea","prevTarget","prevDragArea","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","diff$1","removed","classPrefix","targetGestoData","controlGestoData","trim","defaultProps","isWrapperMounted","PureComponent","Groupable","defaultGroupRotate","defaultGroupOrigin","groupableProps","targetGroups","renderGroupRects","persistDatChildren","refs","Clickable","clickable","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","dragCondition","dragGroupCondition","IndividualGroupable","individualGroupable","MOVEABLE_ABLES","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","solveConstantsDistance","solveC","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","a2Dist","a1MinPos","a1MaxPos","a2MinPos","a2MaxPos","minHorizontalLine","maxHorizontalLine","minVerticalLine","maxVerticalLine","line1","line2","getIntersectionPointsByConstants","minX_1","minY_1","maxX_1","maxY_1","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","MoveableGroup","differ","ChildrenDiffer","_targetGroups","_hasFirstTargets","checkeds","moveableGroups","isReset","updateGroup","persistedRoatation","getMoveableGroupRect","parentRotation","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","posesInfo","rotateScale","nextTarget","isContainerChanged","update","changed","MoveableIndividualGroup","canPersist","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","_differ","_elementTargets","_onChangeTargets","makeStyled","cssMap","getTotalAbles","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","totalAbles","nextProps","prevMoveable","target_1","prevTargetMoveable","mv","_checkChangeTargets","resolvePromise","waitToChangeTargets","isBrowser","nextSelectorMap","updateSelectorMap","selectorTarget","__decorate","withMethods","Moveable","makeMoveable"],"sources":["C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\AbleManager.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\consts.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\gesto\\CustomGesto.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\gesto\\GestoUtils.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\gesto\\GestoData.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Pinchable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\groupUtils.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\utils.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\snap.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\innerBounds.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\bounds.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\render.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\snapBounds.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\snappable\\getTotalGuidelines.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Snappable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\renderDirections.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Draggable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Resizable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Rotatable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Scalable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Warpable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\classNames.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\DragArea.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Origin.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Scrollable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Default.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Padding.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\roundable\\borderRadius.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\clippable\\utils.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Clippable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\OriginDraggable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Roundable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\BeforeRenderable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Renderable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\gesto\\getAbleGesto.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\EventManager.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils\\getMatrixStackInfo.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils\\calculateMatrixStack.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils\\getElementInfo.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils\\getMoveableTargetInfo.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\utils\\persist.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\MoveableManager.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Groupable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\Clickable.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\edgeDraggable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\IndividualGroupable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\ables\\consts.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\Snappable\\utils.ts","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\MoveableGroup.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\MoveableIndividualGroup.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\InitialMoveable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\Moveable.tsx","C:\\Users\\Alan Andre Sanchez H\\Downloads\\front-challenge\\A\\retofront\\node_modules\\react-moveable\\src\\makeMoveable.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nexport const IS_FIREFOX = agent.browser.name === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || parseInt(agent.browser.version, 10) >= 15;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n    outline: 1px solid transparent;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.edge {\n    z-index: 1;\n    background: transparent;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n\n.line.direction:before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: calc(var(--moveable-line-padding, 0) * 1px);\n    bottom: 0;\n    left: 0;\n}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n    \"stopDrag\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        let isFirstDrag = false;\n\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            const isPrevDrag = this.isDrag;\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n\n            if (!isPrevDrag && this.isDrag) {\n                isFirstDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isFirstDrag,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n\n    const nextTransforms = originalDatas.nextTransforms as string[];\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        // translate => rotate => scale\n        if (functionName === \"translate\") {\n            nextIndex = 0;\n        } else if (functionName === \"rotate\") {\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\n        }\n        if (nextIndex === -1) {\n            nextIndex = nextTransforms.length;\n        }\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const xRatio = (direction[0] + 1) / 2;\n    const yRatio = (direction[1] + 1) / 2;\n\n    const top = [\n        dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio),\n        dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio),\n    ];\n    const bottom = [\n        dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio),\n        dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio),\n    ];\n    return [\n        dot(top[0], bottom[0], yRatio, 1 - yRatio),\n        dot(top[1], bottom[1], yRatio, 1 - yRatio),\n    ];\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms;\n}\nexport function getNextTransformText(e: any) {\n    return getNextTransforms(e).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionByPos(\n    pos: number[],\n    width: number,\n    height: number,\n) {\n    return [\n        -1 + pos[0] / (width / 2),\n        -1 + pos[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction, convertUnitSize, between, getKeys, decamelize,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n    rotate,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, MoveablePosition, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface, CSSObject,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n    checkZoom?: boolean,\n    targetStyle?: CSSStyleDeclaration,\n) {\n    const doc = el && el.ownerDocument ? el.ownerDocument : document;\n    const documentElement = doc.documentElement || doc.body;\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n    let offsetZoom = 1;\n\n\n    const targetZoom = parseFloat((targetStyle as any)?.zoom) || 1;\n    const targetPosition = targetStyle?.position;\n\n\n\n    while (target && target !== documentElement) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        const willChange = style.willChange;\n        const zoom = parseFloat((style as any).zoom) || 1;\n        position = style.position!;\n\n        if (checkZoom && zoom !== 1) {\n            offsetZoom = zoom;\n            break;\n        }\n        if (\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\n            || tagName === \"svg\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = slotParentNode || targetParentNode;\n\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n\n            break;\n        }\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        offsetZoom,\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === documentElement,\n        offsetParent: target as HTMLElement || documentElement,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(\n            el as SVGGraphicsElement,\n            origin,\n            el === target && target.tagName.toLowerCase() === \"g\",\n        );\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\nexport function calculateMoveablePosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration | null = target ? getComputedStyle(target) : null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let inlineCSSWidth = 0;\n    let inlineCSSHeight = 0;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && target!.tagName.toLowerCase() !== \"svg\") {\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            const targetStyle = target.style;\n            const boxSizing = style!.boxSizing === \"border-box\";\n            const borderLeft = parseFloat(style!.borderLeftWidth!) || 0;\n            const borderRight = parseFloat(style!.borderRightWidth!) || 0;\n            const borderTop = parseFloat(style!.borderTopWidth!) || 0;\n            const borderBottom = parseFloat(style!.borderBottomWidth!) || 0;\n            const paddingLeft = parseFloat(style!.paddingLeft!) || 0;\n            const paddingRight = parseFloat(style!.paddingRight!) || 0;\n            const paddingTop = parseFloat(style!.paddingTop!) || 0;\n            const paddingBottom = parseFloat(style!.paddingBottom!) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = style!.position;\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, document.body);\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const parentStyle = getComputedStyle(parentElement);\n\n                    containerWidth = parseFloat(parentStyle.width);\n                    containerHeight = parseFloat(parentStyle.height);\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(style!.minWidth, containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(style!.minHeight, containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(style!.maxWidth, containerWidth);\n            maxHeight = convertUnitSize(style!.maxHeight, containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            cssWidth = parseFloat(style!.width) || 0;\n            cssHeight = parseFloat(style!.height) || 0;\n\n\n            contentWidth = Math.abs(cssWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : cssWidth;\n            contentHeight = Math.abs(cssHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : cssHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        inlineCSSWidth,\n        inlineCSSHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\n\nexport function getExtendsRect(el: HTMLElement | SVGElement, rect: MoveableClientRect): MoveableClientRect {\n    const isRoot = el === document.body || el === document.documentElement;\n\n\n    const extendsRect =  {\n        clientLeft: el.clientLeft,\n        clientTop: el.clientTop,\n        clientWidth: el.clientWidth,\n        clientHeight: el.clientHeight,\n        scrollWidth: el.scrollWidth,\n        scrollHeight: el.scrollHeight,\n        overflow: false,\n    };\n\n    if (isRoot) {\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n    }\n    extendsRect.overflow = getComputedStyle(el).overflow !== \"visible\";\n\n    return {\n        ...rect,\n        ...extendsRect,\n    };\n}\n\nexport function getClientRectByPosition(\n    position: { left: number, right: number, top: number, bottom: number },\n    base: MoveableClientRect,\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\n) {\n    const {\n        left,\n        right,\n        top,\n        bottom,\n    } = position;\n    const baseTop = base.top;\n    const baseLeft = base.left;\n\n    const rect: MoveableClientRect = {\n        left: baseLeft + left,\n        top: baseTop + top,\n        right: baseLeft + right,\n        bottom: baseTop + bottom,\n        width: right - left,\n        height: bottom - top,\n    };\n\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n    // let isRoot = false;\n\n    if (el) {\n        // isRoot = el === document.body || el === document.documentElement;\n        // if (isRoot) {\n        //     width = window.innerWidth;\n        //     height = window.innerHeight;\n        //     const scrollPos = getBodyScrollPos();\n\n        //     [left, top] = [-scrollPos[0], -scrollPos[1]];\n        // } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n        // }\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any): CSSObject {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n        isTrusted: e.isTrusted !== false,\n        stopAble() {\n            datas.isEventStart = false;\n        },\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[],\n    pos: number[],\n    transformOrigin: number[],\n    origin: number[],\n    n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function viewDraggingPrefix(ableName: string) {\n    return prefix(`${ableName}-view-dragging`);\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        return prefix(`view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (target instanceof Element) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n\nexport function convertTransformUnit(\n    origin: string,\n    xy?: boolean,\n): { x?: string; y?: string; value?: string; } {\n    if (xy) {\n        if (origin === \"left\") {\n            return { x: \"0%\", y: \"50%\" };\n        } else if (origin === \"top\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"center\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"right\") {\n            return { x: \"100%\", y: \"50%\" };\n        } else if (origin === \"bottom\") {\n            return { x: \"50%\", y: \"100%\" };\n        }\n        const [left, right] = origin.split(\" \");\n        const leftOrigin = convertTransformUnit(left || \"\");\n        const rightOrigin = convertTransformUnit(right || \"\");\n        const originObject = {\n            ...leftOrigin,\n            ...rightOrigin,\n        };\n\n        const nextOriginObject = {\n            x: \"50%\",\n            y: \"50%\",\n        };\n        if (originObject.x) {\n            nextOriginObject.x = originObject.x;\n        }\n        if (originObject.y) {\n            nextOriginObject.y = originObject.y;\n        }\n        if (originObject.value) {\n            if (originObject.x && !originObject.y) {\n                nextOriginObject.y = originObject.value;\n            }\n            if (!originObject.x && originObject.y) {\n                nextOriginObject.x = originObject.value;\n            }\n        }\n        return nextOriginObject;\n    }\n    if (origin === \"left\") {\n        return { x: \"0%\" };\n    }\n    if (origin === \"right\") {\n        return { x: \"100%\" };\n    }\n    if (origin === \"top\") {\n        return { y: \"0%\" };\n    }\n    if (origin === \"bottom\") {\n        return { y: \"100%\" };\n    }\n    if (!origin) {\n        return {};\n    }\n    if (origin === \"center\") {\n        return { value: \"50%\" };\n    }\n    return { value: origin };\n}\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\n    const { x, y } = convertTransformUnit(transformOrigin, true);\n\n    return [\n        convertUnitSize(x!, width) || 0,\n        convertUnitSize(y!, height) || 0,\n    ];\n}\n\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\n    const prevPoses = poses.map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    return {\n        prev: prevPoses,\n        next: nextPoses,\n        result: nextPoses.map(pos => plus(pos, origin)),\n    };\n}\n\n\n\nexport function isDeepArrayEquals(arr1: any[], arr2: any[]): boolean {\n    return arr1.length === arr2.length && arr1.every((value1, i) => {\n        const value2 = arr2[i];\n        const isArray1 = isArray(value1);\n        const isArray2 = isArray(value2);\n        if (isArray1 && isArray2) {\n            return isDeepArrayEquals(value1, value2);\n        } else if (!isArray1 && !isArray2) {\n            return value1 === value2;\n        }\n        return false;\n    });\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n        } else {\n\n\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n    snapThreshold = 1,\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), snapThreshold);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses,\n    PosGuideline, ElementGuidelineValue,\n    SnapElementRect,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, roundSign } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        hasFixed,\n    } = state;\n    const {\n        overflow,\n        scrollHeight: containerHeight,\n        scrollWidth: containerWidth,\n        clientHeight: containerClientHeight,\n        clientWidth: containerClientWidth,\n        clientLeft,\n        clientTop,\n    } = containerClientRect;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n        maxSnapElementGuidelineDistance = Infinity,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable, targetRect, snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n    const snapOffset = {\n        ...(state.snapOffset || {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        }),\n    };\n\n\n    if (hasFixed) {\n        const { left, top } = containerClientRect;\n\n        snapOffset.left += left;\n        snapOffset.top += top;\n        snapOffset.right += left;\n        snapOffset.bottom += top;\n    }\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return Math.abs(rect1.right! - rect2.left!) <= distance\n            || Math.abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return Math.abs(rect1.bottom! - rect2.top!) <= distance\n            || Math.abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number> | false,\n    verticalGuidelines: Array<PosGuideline | number> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"horizontal\",\n            pos: [\n                snapOffsetLeft,\n                throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ],\n            size: snapWidth,\n            className: nextPosInfo.className,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"vertical\",\n            pos: [\n                throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ],\n            size: snapHeight,\n            className: nextPosInfo.className,\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function checkSnapInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n    const container = state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n        return false;\n    }\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapContainer = snapContainer;\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n    return true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return {\n            isSnap: false,\n            rotation,\n        };\n    }\n\n    const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin2,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n    const isSnap = result.length > 0;\n\n    return {\n        isSnap,\n        rotation: isSnap ? result[0] : rotation,\n    };\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        snapRenderThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n\n\n        maxSnapElementGuidelineDistance: Number,\n        maxSnapElementGapDistance: Number,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n        const {\n            snapRenderThreshold = 1,\n        } = moveable.props;\n\n        if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction,\n                        snapRenderThreshold,\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        checkSnapInfo(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        if (!checkSnapInfo(moveable)) {\n            state.guidelines = getTotalGuidelines(moveable);\n        }\n        if (state.snapRenderInfo) {\n            state.snapRenderInfo.render = true;\n        }\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle, getProps } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n    const directionMap: IObject<boolean> = {};\n\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return renderDirectionControlsByInfos(\n        moveable,\n        ableName,\n        renderDirections.map(dir => {\n            return {\n                data: {},\n                classNames: [],\n                dir,\n            };\n        }),\n        React,\n    );\n}\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return getKeys(renderDirectionMap).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"around-control\")} data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    requestStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            gestos,\n            style,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let dragRotateRad = 0;\n        let isVerticalSnap = false;\n        let isVerticalBound = false;\n        let isHorizontalSnap = false;\n        let isHorizontalBound = false;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY,\n                throttleDragRotate,\n                isRequest || deltaOffset, datas,\n            );\n            isVerticalSnap = verticalInfo.isSnap;\n            isVerticalBound = verticalInfo.isBound;\n            isHorizontalSnap = horizontalInfo.isSnap;\n            isHorizontalBound = horizontalInfo.isBound;\n\n            const verticalOffset = verticalInfo.offset;\n            const horizontalOffset = horizontalInfo.offset;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        if (!throttleDragRotate) {\n            if (!isVerticalSnap && !isVerticalBound) {\n                translate[0] = throttle(translate[0], throttleDrag);\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n            }\n            if (!isHorizontalSnap && !isHorizontalBound) {\n                translate[1] = throttle(translate[1], throttleDrag);\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n            }\n        }\n\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n    getNextMatrix,\n    getNextTransforms,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n        keepRatioFinally: Boolean,\n        edge: Boolean,\n        checkResizableError: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n\n\n        datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n        datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setFixedPosition(fixedPosition: number[]) {\n            const {\n                width,\n                height,\n            } = moveable.state;\n\n            datas.fixedPosition = fixedPosition;\n            datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setFixedPosition = setFixedPosition;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setFixedPosition,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        datas.startFixedPosition = datas.fixedPosition;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                startFixedPosition: datas.startFixedPosition,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                setFixedPosition(nextFixedPosition: number[]) {\n                    datas.setFixedPosition(nextFixedPosition);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize || moveable.props.checkResizableError === false) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1], parentIsWidth: e?.horizontal ?? true };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTIONS, DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(moveable, moveableRect, dist);\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.rotation;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n): [number[], number][] {\n    if (rotationPosition === \"none\") {\n        return [];\n    }\n    if (isArray(rotationPosition)) {\n        return rotationPosition.map(child => getRotationPositions(\n            child,\n            [pos1, pos2, pos3, pos4],\n            direction,\n        )[0]);\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [[pos, rad]];\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || hasClass(target, prefix(\"around-control\"))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = \"top: -20px;\";\n        originY = \"bottom\";\n    }\n    if (dir.indexOf(\"s\") > -1) {\n        top = \"top: 0px;\";\n        originY = \"top\";\n    }\n    if (dir.indexOf(\"w\") > -1) {\n        left = \"left: -20px;\";\n        originX = \"right\";\n    }\n    if (dir.indexOf(\"e\") > -1) {\n        left = \"left: 0px;\";\n        originX = \"left\";\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\nconst css = `.rotation {\n    position: absolute;\n    height: 40px;\n    width: 1px;\n    transform-origin: 50% 100%;\n    height: calc(40px * var(--zoom));\n    top: auto;\n    left: 0;\n    bottom: 100%;\n    will-change: transform;\n}\n.rotation .rotation-line {\n    display: block;\n    width: 100%;\n    height: 100%;\n    transform-origin: 50% 50%;\n}\n.rotation .rotation-control {\n    border-color: #4af;\n    border-color: var(--moveable-color);\n    background:#fff;\n    cursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\n    cursor: alias;\n}\n.around-control {\n    position: absolute;\n    will-change: transform;\n    width: 20px;\n    height: 20px;\n    left: -10px;\n    top: -10px;\n    box-sizing: border-box;\n    background: transparent;\n    z-index: 8;\n    cursor: alias;\n    transform-origin: center center;\n}\n.rotatable.direction.control.move {\n    cursor: move;\n}\n${directionCSS}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n        rotateAroundControls: Boolean,\n        edge: Boolean,\n        resolveAblesWithRotatable: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n        const jsxs: any[] = [];\n\n        positions.forEach(([pos, rad], i) => {\n            jsxs.push(\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        });\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedPosition = (fixedPosition: number[]) => {\n            const {\n                allMatrix,\n                is3d,\n                width,\n                height,\n            } = moveable.state;\n            const fixedDirection = getDirectionByPos(fixedPosition, width, height);\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n\n            if (resizeStart) {\n                resizeStart.setFixedPosition(fixedPosition);\n            }\n        };\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedPosition = setFixedPosition;\n\n            setFixedPosition = (fixedPosition: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\n                );\n                originalFixedPosition(fixedPosition);\n                const posDelta = state.posDelta;\n\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n            setFixedDirection = (fixedDirection: number[]) => {\n                const fixedPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n\n                setFixedPosition(fixedPosition);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if  (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentPosition: datas.controlPosition,\n                    parentFixedPosition: datas.fixedPosition,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedPosition(state.transformOrigin);\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            setFixedPosition,\n            ...fillTransformStartEvent(e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientDistX, clientDistY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + clientDistX;\n        const nextClientY = startClientY + clientDistY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition, getDirectionViewClassName, getTotalDirection,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n            let scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName, fillCSSObject,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n        edge: Boolean,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.getState();\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport {\n    ScrollableProps, OnScroll, MoveableManagerInterface,\n    MoveableGroupInterface, MoveableRefType,\n} from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        scrollThrottleTime: Number,\n        getScrollPosition: Function,\n        scrollOptions: Object,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n            scrollOptions,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n        moveable.state.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, true);\n        }).on(\"scrollDrag\", ({ next }) => {\n            next(moveable[gestoName].getCurrentEvent());\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n            ...scrollOptions,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\n            scrollThreshold = 0,\n            scrollThrottleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n            scrollOptions,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer!,\n            threshold: scrollThreshold,\n            throttleTime: scrollThrottleTime,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n            ...scrollOptions,\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupControl(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    unset(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>) {\n        const state = moveable.state;\n\n        state.dragScroll?.dragEnd();\n        state.dragScroll = null;\n    },\n};\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Object,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n        flushSync: Function,\n        stopPropagation: Boolean,\n        preventClickEventOnDrag: Boolean,\n        preventClickDefault: Boolean,\n        viewContainer: Object,\n        persistData: Object,\n        useAccuratePosition: Boolean,\n        firstRenderState: Object,\n        linePadding: Boolean,\n    } as const,\n    events: {\n        onChangeTargets: \"changeTargets\",\n    } as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { convertCSSSize } from \"../../utils\";\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\nimport { getMinMaxs } from \"overlap-area\";\n\n\nexport const CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\n\nexport const CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nexport function getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\n\nexport function getClipPath(\n    target: HTMLElement | SVGElement | undefined | null,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    if (!target) {\n        return;\n    }\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n            left: minMaxs.minX,\n            right: minMaxs.maxX,\n            top: minMaxs.minY,\n            bottom: minMaxs.maxY,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            right: centerPos[0] + radiusX,\n            bottom: centerPos[1] + radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    getSizeDistByDist,\n    getProps,\n    fillCSSObject,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    getControlSize, getClipPath,\n    getClipStyles, getRectPoses,\n} from \"./clippable/utils\";\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\n\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n            groupable,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target || groupable) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, { ...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n            ...fillCSSObject({\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\n            }, e),\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize, fillCSSObject,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const result = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n        )!;\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: result,\n            ...fillCSSObject({\n                transformOrigin,\n                transform: result.transform,\n            }, e),\n            afterTransform: result.transform,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    fillCSSObject,\n    catchEvent,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n    OnRoundGroup,\n    MoveableGroupInterface,\n    OnRoundGroupStart,\n    OnRoundGroupEnd,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    borderRadius: string,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    full?: boolean,\n) {\n    let values: string[] = [];\n\n    if (!borderRadius || borderRadius === \"0px\") {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    const params = fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    });\n    triggerEvent(moveable, \"onRound\", params);\n\n    return params;\n}\n\n\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n    const {\n        style,\n    } = moveable.getState();\n    let borderRadius = style.borderRadius || \"\";\n\n    if (!borderRadius && moveable.props.groupable) {\n        const firstTarget = moveable.getTargets()[0];\n\n\n        if (firstTarget) {\n            borderRadius = getComputedStyle(firstTarget).borderRadius;\n            style.borderRadius = borderRadius;\n        }\n    }\n    return borderRadius;\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n        roundPadding: Number,\n        isDisplayShadowRoundControls: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n        onRoundGroupStart: \"roundGroupStart\",\n        onRoundGroup: \"roundGroup\",\n        onRoundGroupEnd: \"roundGroupEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n    z-index: 3;\n}`,\n        `.control.border-radius.vertical {\n    background: #d6d;\n    z-index: 2;\n}`,\n        `.control.border-radius.virtual {\n    opacity: 0.5;\n    z-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n            groupable,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            borderRadius,\n            width, height,\n            minRoundControls,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n        const basePos = groupable ? [0, 0] : [left, top];\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const params = fillParams<OnRoundStart>(moveable, e, {});\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", params);\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const borderRadius = getStyleBorderRadius(moveable);\n        const controlPoses = getBorderRadius(\n            borderRadius || \"\",\n            width,\n            height,\n            minRoundControls,\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        return triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRoundEnd\", params);\n        state.borderRadiusState = \"\";\n        return params;\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControlStart(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroupStart = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n        return result;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControl(moveable, e);\n\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroup = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    ...fillCSSObject({\n                        borderRadius: result.borderRadius,\n                    }, ev),\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        catchEvent(moveable, \"onRound\", parentEvent => {\n            const nextParams: OnRoundGroup = {\n                targets: moveable.props.targets!,\n                events: events.map((ev, i) => {\n                    return {\n                        ...ev,\n                        target: targets[i],\n                        moveable: moveables[i],\n                        currentTarget: moveables[i],\n                        ...fillCSSObject({\n                            borderRadius: parentEvent.borderRadius,\n                        }, ev),\n                    };\n                }),\n                ...parentEvent,\n            };\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        });\n        const result = this.dragControlEnd(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n        const nextParams: OnRoundGroupEnd = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    lastEvent: ev.datas?.lastEvent,\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n        return nextParams;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextStyle, getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    e.clientDistX = e.distX;\n    e.clientDistY = e.distY;\n    if (eventType === \"\" && !isRequest) {\n        // Convert distX, distY\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                stop,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result || nextDatas.isEventStart ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isDragStop) {\n        isForceEnd = true;\n    }\n    if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length as any;\n    }\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\n    return (e: { inputEvent: Event }) => {\n        const {\n            dragTarget,\n        } = moveable.props;\n        const eventTarget = e.inputEvent.target as Element;\n        const areaElement = moveable.areaElement;\n\n        return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget))\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const dragTarget = moveable.props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkMoveableTarget(moveable),\n        pinchStart: checkMoveableTarget(moveable),\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n    } = moveable.props;\n    const options: GestoOptions = {\n        preventDefault: true,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.getElement().contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\n} from \"@scena/matrix\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    const documentElement = document.documentElement || document.body;\n    let requestEnd = !checkContainer && target === container || target === documentElement;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n    let zoom = 1;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        const targetZoom = parseFloat((style as any).zoom) || 1;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container, false, true, style);\n            const offsetZoom = offsetInfo.offsetZoom;\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n            zoom *= offsetZoom;\n\n            if (offsetZoom !== 1 && isStatic) {\n                offsetLeft -= offsetParent.offsetLeft;\n                offsetTop -= offsetParent.offsetTop;\n            } else if (IS_FIREFOX) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === documentElement) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n        if (targetZoom !== 1) {\n            matrixes.push({\n                type: \"zoom\",\n                target: el,\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === documentElement) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        zoom,\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\n\nexport interface MoveableElementMatrixInfo {\n    hasZoom: boolean;\n    hasFixed: boolean;\n    originalRootMatrix: number[];\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    offsetContainer: HTMLElement | null,\n    offsetRootContainer: HTMLElement | null,\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n        zoom: containerZoom,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n        zoom: rootZoom,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    const originalRootMatrix = rootMatrix;\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\n        hasFixed,\n        rootMatrix,\n        originalRootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { calculateMoveablePosition, getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        hasZoom: false,\n        width,\n        height,\n        rotation,\n        ...sizes,\n        originalRootMatrix: createIdentityMatrix(n),\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin, multiply, minus } from \"@scena/matrix\";\nimport { MoveableClientRect, Writable } from \"../types\";\nimport {\n    calculateInversePosition,\n    calculateMoveablePosition,\n    getClientRect, getClientRectByPosition, getOffsetInfo, getTransformOrigin, resetClientRect,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    offsetDelta: number[],\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n    style: Partial<Writable<CSSStyleDeclaration>>;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    requestStyle: Array<keyof CSSStyleDeclaration> = [],\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n    let offsetDelta = [0, 0];\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const computedStyle = getComputedStyle(target);\n\n        requestStyle.forEach(name => {\n            style[name] = computedStyle[name] as any;\n        });\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n\n\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n\n        if (result.hasZoom) {\n            const absoluteTargetPosition = calculateMoveablePosition(\n                multiply(result.originalRootMatrix, result.allMatrix),\n                result.transformOrigin,\n                result.width, result.height,\n            );\n            const absoluteContainerPosition = calculateMoveablePosition(\n                result.originalRootMatrix,\n                getTransformOrigin(getComputedStyle(offsetContainer)).map(pos => parseFloat(pos)),\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\n            );\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n            containerClientRect = getClientRectByPosition(\n                absoluteContainerPosition,\n                rootContainerClientRect,\n                offsetContainer,\n                true,\n            );\n\n            if (moveableElement) {\n                const left = absoluteTargetPosition.left;\n                const top = absoluteTargetPosition.top;\n                moveableClientRect = getClientRectByPosition({\n                    left,\n                    top,\n                    bottom: top,\n                    right: top,\n                }, rootContainerClientRect);\n            }\n        } else {\n            targetClientRect = getClientRect(target);\n            containerClientRect = getClientRect(offsetContainer, true);\n\n            if (moveableElement) {\n                moveableClientRect = getClientRect(moveableElement);\n            }\n            const {\n                left: containerClientRectLeft,\n                top: containerClientRectTop,\n                clientLeft: containterClientLeft,\n                clientTop: containerClientTop,\n            } = containerClientRect;\n            const clientDelta = [\n                targetClientRect.left - containerClientRectLeft,\n                targetClientRect.top - containerClientRectTop,\n            ];\n\n            offsetDelta = minus(\n                calculateInversePosition(result.rootMatrix, clientDelta, 4),\n                [containterClientLeft! + result.left, containerClientTop! + result.top],\n            );\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        style,\n        offsetDelta,\n        ...result,\n    };\n}\n","import { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { MoveableManagerState, PersistRectData } from \"../types\";\n\n\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\n    let {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\n        return null;\n    }\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\n    const posDelta = [minPos.minX, minPos.minY];\n    const origin = minus(rect.origin!, posDelta);\n\n    pos1 = minus(pos1, posDelta);\n    pos2 = minus(pos2, posDelta);\n    pos3 = minus(pos3, posDelta);\n    pos4 = minus(pos4, posDelta);\n    return {\n        ...rect,\n        left: rect.left,\n        top: rect.top,\n        posDelta,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        origin,\n        beforeOrigin: origin,\n        // originalBeforeOrigin: origin,\n        isPersisted: true,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, IObject, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\nimport { getPersistState } from \"./utils/persist\";\n// import { getClipPath } from \"./ables/clippable/utils\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        isWrapperMounted: false,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        linePadding: 0,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        persistData: null,\n        viewContainer: null,\n        useAccuratePosition: false,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        posDelta: [0, 0],\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isMoveableMounted = false;\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n    protected _hasFirstTarget = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n            groupable,\n            linePadding,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n            offsetDelta,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n        const isDisplay\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\n            || propsTarget\n            || (!this._hasFirstTarget && this.state.isPersisted);\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n        const translate = [left - parentLeft, top - parentTop];\n\n        if (!groupable && props.useAccuratePosition) {\n            translate[0] += offsetDelta[0];\n            translate[1] += offsetDelta[1];\n        }\n        const style: Record<string, any> = {\n            \"position\": hasFixed ? \"fixed\" : \"absolute\",\n            \"display\": isDisplay ? \"block\" : \"none\",\n            \"visibility\": isVisible ? \"visible\" : \"hidden\",\n            \"transform\": `translate3d(${translate[0]}px, ${translate[1]}px, ${translateZ})`,\n            \"--zoom\": zoom,\n            \"--zoompx\": `${zoom}px`,\n        };\n        if (linePadding) {\n            style[\"--moveable-line-padding\"] = linePadding;\n        }\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                portalContainer={portalContainer}\n                style={style}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isMoveableMounted = true;\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n            this.updateRect(\"\", false, false);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isMoveableMounted = false;\n        this.isUnmounted = true;\n        this._emitter.off();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * (100% = 100)\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        const nextState = getMoveableTargetInfo(\n            this.controlBox && this.controlBox.getElement(),\n            target,\n            container,\n            container,\n            rootContainer || container,\n            this._getRequestStyles(),\n        );\n\n        if (!target && this._hasFirstTarget && props.persistData) {\n            const persistState = getPersistState(props.persistData);\n\n            for (const name in persistState) {\n                (nextState as any)[name] = (persistState as any)[name];\n            }\n        }\n        this.updateState(\n            nextState,\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    /**\n     * You can stop the dragging currently in progress through a method from outside.\n     * @method Moveable#stopDrag\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.stopDrag();\n     */\n    public stopDrag(type?: \"target\" | \"control\"): void {\n        if (!type || type === \"target\") {\n            this.targetGesto?.stop();\n        }\n        if (!type || type === \"control\") {\n            this.controlGesto?.stop();\n        }\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const {\n            originalBeforeOrigin,\n            transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft,\n            top: stateTop,\n            // offsetWidth,\n            // offsetHeight,\n            isPersisted,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n\n        // const clipPathInfo = getClipPath(\n        //     props.target,\n        //     offsetWidth,\n        //     offsetHeight,\n        // );\n\n        // if (clipPathInfo) {\n        //     left -= Math.max(0, clipPathInfo.left);\n        //     top -= Math.max(0, clipPathInfo.top);\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n        // }\n\n        let absoluteOrigin: number[] = [];\n\n        if (isPersisted) {\n            absoluteOrigin = transformOrigin;\n        } else if (this.controlBox && props.groupable) {\n            absoluteOrigin = originalBeforeOrigin;\n        } else {\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n        }\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const props = this.props;\n        if (props.target || (props as any).targets?.length) {\n            this._hasFirstTarget = true;\n        }\n        const hasControlBox = this.controlBox;\n        const persistData = props.persistData;\n        const firstRenderState = props.firstRenderState;\n\n        if (firstRenderState && !hasControlBox) {\n            return firstRenderState;\n        }\n        if (!this._hasFirstTarget && persistData) {\n            const persistState = getPersistState(persistData);\n\n            if (persistState) {\n                this.updateState(persistState, false);\n                return this.state;\n            }\n        }\n        (this.state as any).isPersisted = false;\n        return this.state;\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = this.getEnabledAbles(ables);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\n        const props = this.props as any;\n\n        return ables.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _getRequestStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const renderPoses = this.getState().renderPoses;\n        const Renderer = {\n            createElement,\n        };\n\n        return [\n            [0, 1],\n            [1, 3],\n            [3, 2],\n            [2, 0],\n        ].map(([from, to], i) => {\n            return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return (this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\n    }\n    private _getAbleClassName(classPrefix = \"\") {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat } from \"../utils\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n        groupableProps: Object,\n        targetGroups: Object,\n        hideChildMoveableDefaultLines: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const props = moveable.props;\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top, isPersisted } = moveable.getState();\n        const position = [left, top];\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n        let persistDatChildren = props.persistData?.children || [];\n\n        if (isPersisted) {\n            targets = persistDatChildren.map(() => null);\n        } else {\n            persistDatChildren = [];\n        }\n\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={position}\n                    persistData={persistDatChildren[i]}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], position),\n                        minus(poses[to], position),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\n    cursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n\n        return !props.draggable\n            && hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport {\n    getAbsolutePosesByState, equals, unset, rotatePosesInfo,\n    convertTransformOriginArray,\n    isDeepArrayEquals,\n} from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        maxX,\n        maxY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n    private _targetGroups: MoveableTargetGroupsType = [];\n    private _hasFirstTargets = false;\n\n    public componentDidMount() {\n        super.componentDidMount();\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        const state = this.state;\n\n        if (!this.controlBox || state.isPersisted) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const targetGroups = this.props.targetGroups || [];\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            targetGroups,\n        );\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\n\n        if (!this._hasFirstTargets) {\n            const persistedRoatation = this.props.persistData?.rotation;\n\n            if (persistedRoatation != null) {\n                defaultGroupRotate = persistedRoatation;\n            }\n        }\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n            } else {\n                groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n\n        this._targetGroups = targetGroups;\n        this.renderGroupRects = renderGroupRects;\n        const transformOrigin = this.transformOrigin;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n        const posesInfo = rotatePosesInfo(\n            [\n                [0, 0],\n                [width, 0],\n                [0, height],\n                [width, height],\n            ],\n            convertTransformOriginArray(transformOrigin, width, height),\n            this.rotation / 180 * Math.PI,\n        );\n\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\n        const rotateScale = ` rotate(${rotation}deg)`\n            + ` scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\n\n        this.controlBox.getElement().style.transform\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\n\n        target.style.cssText += `left:0px;top:0px;`\n            + `transform-origin:${transformOrigin};`\n            + `width:${width}px;height:${height}px;`\n            + `transform: ${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this._rootContainer || container,\n            [],\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        // info.left = info.left + delta[0];\n        // info.top = info.top + delta[1];\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n        target.style.transform\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\n            + rotateScale;\n        this.updateState(\n            {\n                ...info,\n                posDelta: delta,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const targets = props.targets!;\n        const { added, changed, removed } = this.differ.update(targets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (\n            isContainerChanged\n            || isTargetChanged\n            || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\")\n            || changed.length\n            || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])\n        ) {\n            this.updateRect();\n            this._hasFirstTargets = true;\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const props = this.props;\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            persistData,\n        } = props;\n\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\n        const length = targets.length;\n        const canPersist = this.isUnmounted || !length;\n        let persistDatChildren = persistData?.children ?? [];\n        if (canPersist && !length && persistDatChildren.length) {\n            targets = persistDatChildren.map(() => null);\n        } else if (!canPersist) {\n            persistDatChildren = [];\n        }\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                    isWrapperMounted={this.isMoveableMounted}\n                    persistData={persistDatChildren[i]}\n\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _onChangeTargets: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        let isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        const persistData = props.persistData;\n\n        if (persistData?.children) {\n            isGroup = true;\n        }\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets}\n                />;\n            }\n            const targetGroups = getTargetGroups(refTargets, this.selectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                {...props.groupableProps ?? {}}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._checkChangeTargets();\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._checkChangeTargets();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @story combination-with-other-components--use-selecto\n     * @example\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangeTargets = () => {\n        //     this._onChangeTargets = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangeTargets = () => {\n            this._onChangeTargets = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public waitToChangeTargets(): Promise<void> {\n        return this.waitToChangeTarget();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n    private _checkChangeTargets() {\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged) {\n            this.props.onChangeTargets?.({\n                moveable: this.moveable,\n                targets: this._elementTargets,\n            });\n            this._onChangeTargets?.();\n        }\n        this._updateRefs();\n\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { IObject } from \"@daybrush/utils\";\nimport { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends IObject<any> = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}