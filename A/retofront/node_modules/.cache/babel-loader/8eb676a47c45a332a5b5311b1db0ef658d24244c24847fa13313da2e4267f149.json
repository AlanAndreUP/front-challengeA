{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan Andre Sanchez H\\\\Downloads\\\\front-challenge\\\\A\\\\retofront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/photos/\" + Math.floor(Math.random() * 100) + 1);\n    const data = await response.json();\n    setMoveableComponents([...moveableComponents, {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      backgroundImage: `url(${data.url})`,\n      updateEnd: true\n    }]);\n  };\n  const removeMoveable = id => {\n    const filteredMoveables = moveableComponents.filter(moveable => moveable.id !== id);\n    setMoveableComponents(filteredMoveables);\n    if (selected === id) {\n      setSelected(null);\n    }\n  };\n  const updateMoveable = function (id, newComponent) {\n    let updateEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return {\n          id,\n          ...newComponent,\n          updateEnd\n        };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", _ref => {\n        let {\n          width\n        } = _ref;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", _ref2 => {\n        let {\n          width\n        } = _ref2;\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMoveable,\n      style: {\n        position: \"absolute\",\n        top: \"20px\",\n        left: \"20px\"\n      },\n      children: \"Add Moveable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), moveableComponents.map((component, i) => /*#__PURE__*/_jsxDEV(Moveable, {\n      target: `.moveable${component.id}`,\n      resizable: true,\n      draggable: true,\n      scalable: true,\n      onResizeStart: e => handleResizeStart(i, e),\n      onDragStart: () => setSelected(component.id),\n      onResize: () => updateMoveable(component.id, component, false),\n      onRotate: e => updateMoveable(component.id, {\n        rotate: e.beforeRotate\n      }, false),\n      onScale: e => updateMoveable(component.id, {\n        scaleX: e.scale[0],\n        scaleY: e.scale[1]\n      }, false),\n      onResizeEnd: () => updateMoveable(component.id, component, true),\n      onDragEnd: () => updateMoveable(component.id, component, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `Moveable${component.id}`,\n        style: {\n          position: \"absolute\",\n          top: component.top,\n          left: component.left,\n          width: component.width,\n          height: component.height,\n          backgroundImage: component.backgroundImage,\n          border: selected === component.id ? \"2px solid red\" : \"none\"\n        },\n        onClick: () => setSelected(component.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"5px\",\n          zIndex: 1\n        },\n        onClick: () => removeMoveable(component.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, component.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X2hn9kZdJVqaWk4Vc5Jh02ip/FQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Moveable","jsxDEV","_jsxDEV","App","_s","moveableComponents","setMoveableComponents","selected","setSelected","addMoveable","COLORS","response","fetch","Math","floor","random","data","json","id","Date","now","top","left","width","height","backgroundImage","url","updateEnd","removeMoveable","filteredMoveables","filter","moveable","updateMoveable","newComponent","arguments","length","undefined","updatedMoveables","map","i","handleResizeStart","index","e","console","log","direction","handlePosX","handlePosY","initialLeft","initialWidth","setOrigin","on","_ref","newLeft","target","_ref2","off","style","children","onClick","position","fileName","_jsxFileName","lineNumber","columnNumber","component","resizable","draggable","scalable","onResizeStart","onDragStart","onResize","onRotate","rotate","beforeRotate","onScale","scaleX","scale","scaleY","onResizeEnd","onDragEnd","className","border","right","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/Alan Andre Sanchez H/Downloads/front-challenge/A/retofront/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\n\nconst App = () => {\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  \n  const addMoveable = async () => {\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n\n    const response = await fetch(\n      \"https://jsonplaceholder.typicode.com/photos/\" +\n        Math.floor(Math.random() * 100) +\n        1\n    );\n    const data = await response.json();\n\n    setMoveableComponents([\n      ...moveableComponents,\n      {\n        id: Math.floor(Math.random() * Date.now()),\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n        backgroundImage: `url(${data.url})`,\n        updateEnd: true\n      }\n    ]);\n  };\n\n  const removeMoveable = (id) => {\n    const filteredMoveables = moveableComponents.filter(\n      (moveable) => moveable.id !== id\n    );\n    setMoveableComponents(filteredMoveables);\n    if (selected === id) {\n      setSelected(null);\n    }\n  };\n\n  const updateMoveable = (id, newComponent, updateEnd = false) => {\n    const updatedMoveables = moveableComponents.map((moveable, i) => {\n      if (moveable.id === id) {\n        return { id, ...newComponent, updateEnd };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, false);\n      });\n\n      // Set up the onResizeEnd event handler to update the left value based on the change in width and remove the onResize event listener\n      e.on(\"resizeEnd\", ({ width }) => {\n        const newLeft = initialLeft - (width - initialWidth) / 2;\n        updateMoveable(e.target.id, { left: newLeft, width }, true);\n        e.off(\"resize\");\n      });\n    }\n  };\n\n  return (\n    <main style={{ height: \"100vh\", width: \"100vw\" }}>\n      <button\n        onClick={addMoveable}\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        Add Moveable\n      </button>\n      {moveableComponents.map((component, i) => (\n        <Moveable\n          key={component.id}\n          target={`.moveable${component.id}`}\n          resizable={true}\n          draggable={true}\n          scalable={true}\n          onResizeStart={(e) => handleResizeStart(i, e)}\n          onDragStart={() => setSelected(component.id)}\n          onResize={() => updateMoveable(component.id, component, false)}\n          onRotate={(e) =>\n          updateMoveable(component.id, { rotate: e.beforeRotate }, false)\n          }\n          onScale={(e) =>\n          updateMoveable(\n          component.id,\n          { scaleX: e.scale[0], scaleY: e.scale[1] },\n          false\n          )\n          }\n          onResizeEnd={() => updateMoveable(component.id, component, true)}\n          onDragEnd={() => updateMoveable(component.id, component, true)}\n          >\n          <div\n         className={`Moveable${component.id}`}\n\n          style={{\n          position: \"absolute\",\n          top: component.top,\n          left: component.left,\n          width: component.width,\n          height: component.height,\n          backgroundImage: component.backgroundImage,\n          border: selected === component.id ? \"2px solid red\" : \"none\"\n          }}\n          onClick={() => setSelected(component.id)}\n          ></div>\n          <button\n          style={{\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"5px\",\n          zIndex: 1\n          }}\n          onClick={() => removeMoveable(component.id)}\n          >\n          X\n          </button>\n          </Moveable>\n          ))}\n          </main>\n          );\n          };\n          \n          export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}